*------------------------------------------------------------*
User:                jmmorr01
Date:                November 07, 2018
Time:                21:35:47
Site:                70080761
Platform:            X64_8PRO
Maintenance Release: 9.04.01M3P062415
EM Version:          14.1
* 
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 07, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21:35:39" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                November 07, 2018
Time:                21:35:39
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O2KQ_8CB "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O2KQ_8CB new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 07, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21:35:39" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                jmmorr01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080761";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M3P062415";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 07, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21:35:39" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                jmmorr01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
22561      proc freq data=EMWS1.Varsel_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Varsel_VariableSet noprint;
22562      table ROLE*LEVEL/out=WORK.VarselMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.VarselMETA;
22563      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set EMWS1.VARSEL_VARIABLESET.
NOTE: The data set WORK.VARSELMETA has 4 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.10 seconds
      cpu time            0.01 seconds
 
 
22564      proc print data=WORK.VarselMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.VarselMETA label noobs;
22565      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
22566      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
22567      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
22568      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
22569      run;
 
NOTE: There were 4 observations read from the data set WORK.VARSELMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
22570      title10;
MPRINT(EM_DIAGRAM):   title10;
22571      data WORK.M0HYG0IN;
MPRINT(EM_DIAGRAM):    data WORK.M0HYG0IN;
22572      set WORK.M0HYG0IN;
MPRINT(EM_DIAGRAM):   set WORK.M0HYG0IN;
22573      if role = 'TARGET' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'TARGET' and use = 'Y' then do;
22574      role = 'TARGET';
MPRINT(EM_DIAGRAM):   role = 'TARGET';
22575      output;
MPRINT(EM_DIAGRAM):   output;
22576      end;
MPRINT(EM_DIAGRAM):   end;
22577      if role = 'INPUT' and use in ('Y','D','N') then do;
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and use in ('Y','D','N') then do;
22578      role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
22579      output;
MPRINT(EM_DIAGRAM):   output;
22580      end;
MPRINT(EM_DIAGRAM):   end;
22581      if role = 'REJECTED' and use = 'Y' then do;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use = 'Y' then do;
22582      role = 'INPUT';
MPRINT(EM_DIAGRAM):   role = 'INPUT';
22583      output;
MPRINT(EM_DIAGRAM):   output;
22584      end;
MPRINT(EM_DIAGRAM):   end;
22585      if role = 'FREQ' and use in ('Y', 'D') then do;
MPRINT(EM_DIAGRAM):   if role = 'FREQ' and use in ('Y', 'D') then do;
22586      role = 'FREQ';
MPRINT(EM_DIAGRAM):   role = 'FREQ';
22587      output;
MPRINT(EM_DIAGRAM):   output;
22588      end;
MPRINT(EM_DIAGRAM):   end;
22589      if role = 'REJECTED' and use in ('N', 'D') then do;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use in ('N', 'D') then do;
22590      role = 'REJECTED';
MPRINT(EM_DIAGRAM):   role = 'REJECTED';
22591      output;
MPRINT(EM_DIAGRAM):   output;
22592      end;
MPRINT(EM_DIAGRAM):   end;
22593      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK.M0HYG0IN.
NOTE: The data set WORK.M0HYG0IN has 17 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
 
 
22594      /*by pass cmeta */
22595      data WORK.M0HYG0IN;
MPRINT(EM_DIAGRAM):    data WORK.M0HYG0IN;
22596      set WORK.M0HYG0IN;
MPRINT(EM_DIAGRAM):   set WORK.M0HYG0IN;
22597      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK.M0HYG0IN.
NOTE: The data set WORK.M0HYG0IN has 17 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
 
 
22598      data WORK.M0UK3IZ4;
MPRINT(EM_DIAGRAM):    data WORK.M0UK3IZ4;
22599      set WORK.M0UK3IZ4;
MPRINT(EM_DIAGRAM):   set WORK.M0UK3IZ4;
22600      if role = 'INPUT' and use in ('N') then delete;
MPRINT(EM_DIAGRAM):   if role = 'INPUT' and use in ('N') then delete;
22601      if role = 'REJECTED' and use in ('N', 'D') then delete;
MPRINT(EM_DIAGRAM):   if role = 'REJECTED' and use in ('N', 'D') then delete;
22602      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 17 observations read from the data set WORK.M0UK3IZ4.
NOTE: The data set WORK.M0UK3IZ4 has 5 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
 
 
NOTE: Run proc dmdb with the specified maxlevel criterion.
22603      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22604      * EM: DMDBClass Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBClass Macro ;
22605      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22606      %macro DMDBClass;
22607          BAD(DESC) GRP_IMP_CLAGE(ASC) GRP_IMP_DEBTINC(ASC) GRP_IMP_NINQ(ASC)
22608         GRP_INDELINQ(ASC)
22609      %mend DMDBClass;
22610      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22611      * EM: DMDBVar Macro ;
MPRINT(EM_DIAGRAM):   * EM: DMDBVar Macro ;
22612      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22613      %macro DMDBVar;
22614
22615      %mend DMDBVar;
22616      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22617      * EM: Create DMDB;
MPRINT(EM_DIAGRAM):   * EM: Create DMDB;
22618      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22619      libname _spdslib SPDE "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7284_COB-MBA048_\Prc2";
MPRINT(EM_DIAGRAM):   libname _spdslib SPDE "C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7284_COB-MBA048_\Prc2";
NOTE: Libref _SPDSLIB was successfully assigned as follows:
      Engine:        SPDE
      Physical Name: C:\Users\jmmorr01\AppData\Local\Temp\SAS Temporary Files\_TD7284_COB-MBA048_\Prc2\
22620      proc dmdb batch data=EMWS1.BINNING_TRAIN
22621      dmdbcat=WORK.EM_DMDB
22622      maxlevel = 101
22623      out=_spdslib.EM_DMDB
22624      ;
MPRINT(EM_DIAGRAM):   proc dmdb batch data=EMWS1.BINNING_TRAIN dmdbcat=WORK.EM_DMDB maxlevel = 101 out=_spdslib.EM_DMDB ;
MPRINT(EM_DIAGRAM):   class
22625      class %DMDBClass;
MPRINT(DMDBCLASS):   BAD(DESC) GRP_IMP_CLAGE(ASC) GRP_IMP_DEBTINC(ASC) GRP_IMP_NINQ(ASC) GRP_INDELINQ(ASC)
MPRINT(EM_DIAGRAM):  ;
22626      target
22627      BAD
22628      ;
MPRINT(EM_DIAGRAM):   target BAD ;
22629      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Records processed = 2979   Memory used = 511K.
NOTE: There were 2979 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 2979 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View EMWS1.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.14 seconds
 
NOTE: There were 2979 observations read from the data set EMWS1.TRANS_TRAIN.
NOTE: There were 2979 observations read from the data set EMWS1.BINNING_TRAIN.
NOTE: The data set _SPDSLIB.EM_DMDB has 2979 observations and 5 variables.
NOTE: PROCEDURE DMDB used (Total process time):
      real time           0.29 seconds
      cpu time            0.17 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22630      quit;
 
MPRINT(EM_DIAGRAM):   reset noprint;
MPRINT(EM_DIAGRAM):   select count(*) into :_tmpnobs from EMWS1.BINNING_TRAIN;
NOTE: There were 2979 observations read from the data set EMWS1.PART_TRAIN.
NOTE: There were 2979 observations read from the data set EMWS1.IMPT_TRAIN.
NOTE: View EMWS1.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
 
NOTE: There were 2979 observations read from the data set EMWS1.TRANS_TRAIN.
MPRINT(EM_DIAGRAM):   quit;
22631      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------* ;
22632      * Varsel: Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Varsel: Input Variables Macro ;
22633      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22634      %macro INPUTS;
22635          GRP_IMP_CLAGE GRP_IMP_DEBTINC GRP_IMP_NINQ GRP_INDELINQ
22636      %mend INPUTS;
22637      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22638      * Varsel: Ordinal Input Variables Macro ;
MPRINT(EM_DIAGRAM):   * Varsel: Ordinal Input Variables Macro ;
22639      *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
22640      %macro ORDINALINPUTS;
22641          GRP_IMP_CLAGE GRP_IMP_DEBTINC GRP_IMP_NINQ GRP_INDELINQ
22642      %mend ORDINALINPUTS;
22643      proc dmine data=_spdslib.EM_DMDB dmdbcat=WORK.EM_DMDB
22644      minr2=0.005 maxrows=3000 stopr2=0.0005 NOAOV16 NOINTER USEGROUPS OUTGROUP=EMWS1.Varsel_OUTGROUP outest=EMWS1.Varsel_OUTESTDMINE outeffect=EMWS1.Varsel_OUTEFFECT outrsquare =EMWS1.Varsel_OUTRSQUARE
22645      NOMONITOR
22646      PSHORT
22647      ;
MPRINT(EM_DIAGRAM):   proc dmine data=_spdslib.EM_DMDB dmdbcat=WORK.EM_DMDB minr2=0.005 maxrows=3000 stopr2=0.0005 NOAOV16 NOINTER USEGROUPS OUTGROUP=EMWS1.Varsel_OUTGROUP outest=EMWS1.Varsel_OUTESTDMINE outeffect=EMWS1.Varsel_OUTEFFECT outrsquare
=EMWS1.Varsel_OUTRSQUARE NOMONITOR PSHORT ;
MPRINT(EM_DIAGRAM):   var
22648      var %INPUTS;
MPRINT(INPUTS):   GRP_IMP_CLAGE GRP_IMP_DEBTINC GRP_IMP_NINQ GRP_INDELINQ
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   ordinal
22649      ordinal %ORDINALINPUTS;
MPRINT(ORDINALINPUTS):   GRP_IMP_CLAGE GRP_IMP_DEBTINC GRP_IMP_NINQ GRP_INDELINQ
MPRINT(EM_DIAGRAM):  ;
22650      target BAD;
MPRINT(EM_DIAGRAM):   target BAD;
22651      code file="J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   code file="J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMFLOWSCORE.sas";
22652      code file="J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMPUBLISHSCORE.sas";
MPRINT(EM_DIAGRAM):   code file="J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMPUBLISHSCORE.sas";
22653      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Checking database engine with sqluse...
 Ordinal vars=4
NOTE: Number of threads reset to 1 because of fewer partitions.
 
Initial pass to compute R2s for all targets
2979 records read
NOTE: The full X'X matrix has 14 rows and columns.
 
Building X'X  for target: BAD rows=15 memory=0.00 meg.
2979 records read
2979 records read
NOTE: External file J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMFLOWSCORE.sas opened.
NOTE: External file J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMPUBLISHSCORE.sas opened.
NOTE: There were 2979 observations read from the data set _SPDSLIB.EM_DMDB.
NOTE: The data set EMWS1.VARSEL_OUTGROUP has 4 observations and 8 variables.
NOTE: The data set EMWS1.VARSEL_OUTESTDMINE has 7 observations and 23 variables.
NOTE: The data set EMWS1.VARSEL_OUTEFFECT has 4 observations and 6 variables.
NOTE: The data set EMWS1.VARSEL_OUTRSQUARE has 15 observations and 4 variables.
NOTE: The PROCEDURE DMINE printed pages 2-6.
NOTE: PROCEDURE DMINE used (Total process time):
      real time           0.50 seconds
      cpu time            0.20 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
MPRINT(EM_DIAGRAM):   run;
22654      quit;
22655      /*      proc print data =EMWS1.Varsel_OUTEFFECT;      proc print data =EMWS1.Varsel_OUTRSQUARE;      */
22656      run;
 
22657      data EMWS1.Varsel_OUTESTDMINE;
MPRINT(EM_DIAGRAM):    data EMWS1.Varsel_OUTESTDMINE;
22658      set EMWS1.Varsel_OUTESTDMINE;
MPRINT(EM_DIAGRAM):   set EMWS1.Varsel_OUTESTDMINE;
22659      _uname_=upcase(_name_);
MPRINT(EM_DIAGRAM):   _uname_=upcase(_name_);
22660      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS1.VARSEL_OUTESTDMINE.
NOTE: The data set EMWS1.VARSEL_OUTESTDMINE has 7 observations and 24 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.00 seconds
 
 
22661      proc sql;
MPRINT(EM_DIAGRAM):    proc sql;
22662      create table _tmpoutgroup as select distinct VARIABLE from EMWS1.Varsel_OUTGROUP where VARTYPE='GROUP';
MPRINT(EM_DIAGRAM):   create table _tmpoutgroup as select distinct VARIABLE from EMWS1.Varsel_OUTGROUP where VARTYPE='GROUP';
NOTE: Table WORK._TMPOUTGROUP created, with 1 rows and 1 columns.
 
22663      quit;
MPRINT(EM_DIAGRAM):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
MPRINT(EM_DIAGRAM):   run;
22664      run;
 
22665      data EMWS1.Varsel_OUTAOV16;
MPRINT(EM_DIAGRAM):    data EMWS1.Varsel_OUTAOV16;
22666      set EMWS1.Varsel_OUTGROUP;
MPRINT(EM_DIAGRAM):   set EMWS1.Varsel_OUTGROUP;
22667      if STRIP(VARTYPE) eq 'AOV16' then output;
MPRINT(EM_DIAGRAM):   if STRIP(VARTYPE) eq 'AOV16' then output;
22668      DROP VARTYPE LEVEL LEVEL2 VARIABLE2;
MPRINT(EM_DIAGRAM):   DROP VARTYPE LEVEL LEVEL2 VARIABLE2;
22669      label NAME= "Name";
MPRINT(EM_DIAGRAM):   label NAME= "Name";
22670      label GROUP = "Group";
MPRINT(EM_DIAGRAM):   label GROUP = "Group";
22671      label VARIABLE = "Variable";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable";
22672      label BIN = "Bin Cutoff";
MPRINT(EM_DIAGRAM):   label BIN = "Bin Cutoff";
22673      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.VARSEL_OUTGROUP.
NOTE: The data set EMWS1.VARSEL_OUTAOV16 has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.03 seconds
 
 
22674      data EMWS1.Varsel_OUTGINT;
MPRINT(EM_DIAGRAM):   data EMWS1.Varsel_OUTGINT;
22675      set EMWS1.Varsel_OUTGROUP;
MPRINT(EM_DIAGRAM):   set EMWS1.Varsel_OUTGROUP;
22676      if STRIP(VARTYPE) eq 'GINTER' then output;
MPRINT(EM_DIAGRAM):   if STRIP(VARTYPE) eq 'GINTER' then output;
22677      DROP VARTYPE BIN;
MPRINT(EM_DIAGRAM):   DROP VARTYPE BIN;
22678      label NAME= "Name";
MPRINT(EM_DIAGRAM):   label NAME= "Name";
22679      label GROUP = "Group";
MPRINT(EM_DIAGRAM):   label GROUP = "Group";
22680      label VARIABLE = "Variable 1";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable 1";
22681      label VARIABLE2 = "Variable 2";
MPRINT(EM_DIAGRAM):   label VARIABLE2 = "Variable 2";
22682      label LEVEL = "Level 1";
MPRINT(EM_DIAGRAM):   label LEVEL = "Level 1";
22683      label LEVEL2 = "Level 2";
MPRINT(EM_DIAGRAM):   label LEVEL2 = "Level 2";
22684      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.VARSEL_OUTGROUP.
NOTE: The data set EMWS1.VARSEL_OUTGINT has 0 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.10 seconds
      cpu time            0.03 seconds
 
 
22685      data EMWS1.Varsel_OUTGVAR;
MPRINT(EM_DIAGRAM):   data EMWS1.Varsel_OUTGVAR;
22686      set EMWS1.Varsel_OUTGROUP;
MPRINT(EM_DIAGRAM):   set EMWS1.Varsel_OUTGROUP;
22687      if STRIP(VARTYPE) eq 'GROUP' then output;
MPRINT(EM_DIAGRAM):   if STRIP(VARTYPE) eq 'GROUP' then output;
22688      DROP VARTYPE BIN VARIABLE2 LEVEL2;
MPRINT(EM_DIAGRAM):   DROP VARTYPE BIN VARIABLE2 LEVEL2;
22689      label NAME= "Name";
MPRINT(EM_DIAGRAM):   label NAME= "Name";
22690      label GROUP = "Group";
MPRINT(EM_DIAGRAM):   label GROUP = "Group";
22691      label VARIABLE = "Variable";
MPRINT(EM_DIAGRAM):   label VARIABLE = "Variable";
22692      label LEVEL = "Level";
MPRINT(EM_DIAGRAM):   label LEVEL = "Level";
22693      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.VARSEL_OUTGROUP.
NOTE: The data set EMWS1.VARSEL_OUTGVAR has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.09 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22694      quit;
 
22695      options nonotes nosource;
MPRINT(EM_DIAGRAM):    options nonotes nosource;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file print;
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put '-------------------------------------------------------------------';
MPRINT(EM_DIAGRAM):   put "Summary of Variable Selection from Training";
MPRINT(EM_DIAGRAM):   put '-------------------------------------------------------------------';
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "Target Name : BAD";
MPRINT(EM_DIAGRAM):   put "Target Level : BINARY";
MPRINT(EM_DIAGRAM):   put "Variable Selection Model : R-Square";
MPRINT(EM_DIAGRAM):   put '  ';
MPRINT(EM_DIAGRAM):   put "Total number of inputs : 4";
MPRINT(EM_DIAGRAM):   put "Total number of used inputs : 4";
MPRINT(EM_DIAGRAM):   put "Total number of unused inputs : 0";
MPRINT(EM_DIAGRAM):   put "Total number of rejected inputs : 1";
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "Maximum missing percentage : 50";
MPRINT(EM_DIAGRAM):   put "NOTE: There is no rejected variable by maximum missing percentage";
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "Maximum class level : 100";
MPRINT(EM_DIAGRAM):   put "NOTE:There is no rejected variable by maximum class level";
MPRINT(EM_DIAGRAM):   put ' ';
MPRINT(EM_DIAGRAM):   put "NOTE: 1 group variable has been created";
MPRINT(EM_DIAGRAM):   options notes source;
MPRINT(EM_DIAGRAM):   run;
22721      run;
 
NOTE: 15 lines were written to file PRINT.
NOTE: The DATA step printed page 7.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
 
 
22722      data EMWS1.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):    data EMWS1.Varsel_RESULTEDVARS;
22723      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: The data set EMWS1.VARSEL_RESULTEDVARS has 1 observations and 0 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
 
 
22724      libname _spdslib;
MPRINT(EM_DIAGRAM):    libname _spdslib;
NOTE: Libref _SPDSLIB has been deassigned.
22725      *;
MPRINT(EM_DIAGRAM):    *;
22726      data EMWS1.Varsel_EMSCOREVAR;
MPRINT(EM_DIAGRAM):   data EMWS1.Varsel_EMSCOREVAR;
22727      length Name $32 formula $70 file $200;
MPRINT(EM_DIAGRAM):   length Name $32 formula $70 file $200;
22728      keep NAME Formula file;
MPRINT(EM_DIAGRAM):   keep NAME Formula file;
22729      name = "G_GRP_IMP_DEBTINC";
MPRINT(EM_DIAGRAM):   name = "G_GRP_IMP_DEBTINC";
22730      file="VARSELCODE\G_GRP_IMP_DEBTINC.sas";
MPRINT(EM_DIAGRAM):   file="VARSELCODE\G_GRP_IMP_DEBTINC.sas";
22731      output;
MPRINT(EM_DIAGRAM):   output;
22732      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: Variable formula is uninitialized.
NOTE: The data set EMWS1.VARSEL_EMSCOREVAR has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 07, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21:35:44" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Score Log
Date:                November 07, 2018
Time:                21:35:44
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O1PWQLCV "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O1PWQLCV new;
MPRINT(EM_DIAGRAM):   run;
22834      filename emflow "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Scoring DATA data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22835      *------------------------------------------------------------*;
22836      * Varsel: Scoring DATA data;
22837      *------------------------------------------------------------*;
22838      data EMWS1.Varsel_TRAIN
22839      / view=EMWS1.Varsel_TRAIN
22840      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Varsel_TRAIN / view=EMWS1.Varsel_TRAIN ;
22841      set EMWS1.BINNING_TRAIN
22842      ;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_TRAIN ;
22843      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMFLOWSCORE.sas.
22844     +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
22845     +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
22846     +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
22847     +
22848     +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
22849     +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
22850     +
22851     +
22852     +/*----G_GRP_IMP_DEBTINC begin----*/
22853     +length _NORM12 $ 12;
MPRINT(EM_DIAGRAM):   length _NORM12 $ 12;
22854     +_NORM12 = put( GRP_IMP_DEBTINC , BEST12. );
MPRINT(EM_DIAGRAM):   _NORM12 = put( GRP_IMP_DEBTINC , BEST12. );
22855     +%DMNORMIP( _NORM12 )
MPRINT(DMNORMIP):   call dmnorm(_NORM12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
MPRINT(EM_DIAGRAM):   drop _NORM12;
MPRINT(EM_DIAGRAM):   select(_NORM12);
MPRINT(EM_DIAGRAM):   when('2' ) G_GRP_IMP_DEBTINC = 0;
MPRINT(EM_DIAGRAM):   when('3' ) G_GRP_IMP_DEBTINC = 1;
MPRINT(EM_DIAGRAM):   when('4' ) G_GRP_IMP_DEBTINC = 2;
22856     +drop _NORM12;
MPRINT(EM_DIAGRAM):   when('5' ) G_GRP_IMP_DEBTINC = 2;
22857     +select(_NORM12);
22858     +  when('2' ) G_GRP_IMP_DEBTINC = 0;
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
22859     +  when('3' ) G_GRP_IMP_DEBTINC = 1;
MPRINT(EM_DIAGRAM):   end;
22860     +  when('4' ) G_GRP_IMP_DEBTINC = 2;
MPRINT(EM_DIAGRAM):   label G_GRP_IMP_DEBTINC= "Grouped Levels for  GRP_IMP_DEBTINC";
22861     +  when('5' ) G_GRP_IMP_DEBTINC = 2;
22862     +  otherwise substr(_WARN_, 2, 1) = 'U';
22863     +end;
22864     +label G_GRP_IMP_DEBTINC="Grouped Levels for  GRP_IMP_DEBTINC";
MPRINT(EM_DIAGRAM):   ****************************************;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
22865     +/*----GRP_IMP_DEBTINC end----*/
MPRINT(EM_DIAGRAM):   ****************************************;
22866     +
22867     +
22868     +****************************************;
22869     +*** End Scoring Code from PROC DMINE ***;
22870     +****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
22871      run;
 
NOTE: DATA STEP view saved on file EMWS1.VARSEL_TRAIN.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.BINNING_TRAIN.VIEW used (Total process time):
      real time           0.17 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.17 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22872      quit;
22873      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
22874      filename emflow "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):    filename emflow "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMFLOWSCORE.sas";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Scoring VALIDATE data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
22875      *------------------------------------------------------------*;
22876      * Varsel: Scoring VALIDATE data;
22877      *------------------------------------------------------------*;
22878      data EMWS1.Varsel_VALIDATE
22879      / view=EMWS1.Varsel_VALIDATE
22880      ;
MPRINT(EM_DIAGRAM):   data EMWS1.Varsel_VALIDATE / view=EMWS1.Varsel_VALIDATE ;
22881      set EMWS1.BINNING_VALIDATE
22882      ;
MPRINT(EM_DIAGRAM):   set EMWS1.BINNING_VALIDATE ;
22883      %inc emflow;
NOTE: %INCLUDE (level 1) file EMFLOW is file J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMFLOWSCORE.sas.
22884     +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
22885     +*** Begin Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** Begin Scoring Code from PROC DMINE ***;
22886     +******************************************;
MPRINT(EM_DIAGRAM):   ******************************************;
22887     +
22888     +length _WARN_ $ 4;
MPRINT(EM_DIAGRAM):   length _WARN_ $ 4;
22889     +label _WARN_ = "Warnings";
MPRINT(EM_DIAGRAM):   label _WARN_ = "Warnings";
22890     +
22891     +
22892     +/*----G_GRP_IMP_DEBTINC begin----*/
22893     +length _NORM12 $ 12;
MPRINT(EM_DIAGRAM):   length _NORM12 $ 12;
22894     +_NORM12 = put( GRP_IMP_DEBTINC , BEST12. );
MPRINT(EM_DIAGRAM):   _NORM12 = put( GRP_IMP_DEBTINC , BEST12. );
22895     +%DMNORMIP( _NORM12 )
MPRINT(DMNORMIP):   call dmnorm(_NORM12,
MPRINT(DMNORLEN):  32
MPRINT(DMNORMIP):  );
22896     +drop _NORM12;
MPRINT(EM_DIAGRAM):   drop _NORM12;
22897     +select(_NORM12);
MPRINT(EM_DIAGRAM):   select(_NORM12);
22898     +  when('2' ) G_GRP_IMP_DEBTINC = 0;
MPRINT(EM_DIAGRAM):   when('2' ) G_GRP_IMP_DEBTINC = 0;
22899     +  when('3' ) G_GRP_IMP_DEBTINC = 1;
MPRINT(EM_DIAGRAM):   when('3' ) G_GRP_IMP_DEBTINC = 1;
22900     +  when('4' ) G_GRP_IMP_DEBTINC = 2;
MPRINT(EM_DIAGRAM):   when('4' ) G_GRP_IMP_DEBTINC = 2;
22901     +  when('5' ) G_GRP_IMP_DEBTINC = 2;
MPRINT(EM_DIAGRAM):   when('5' ) G_GRP_IMP_DEBTINC = 2;
22902     +  otherwise substr(_WARN_, 2, 1) = 'U';
MPRINT(EM_DIAGRAM):   otherwise substr(_WARN_, 2, 1) = 'U';
22903     +end;
MPRINT(EM_DIAGRAM):   end;
22904     +label G_GRP_IMP_DEBTINC="Grouped Levels for  GRP_IMP_DEBTINC";
MPRINT(EM_DIAGRAM):   label G_GRP_IMP_DEBTINC= "Grouped Levels for  GRP_IMP_DEBTINC";
22905     +/*----GRP_IMP_DEBTINC end----*/
22906     +
22907     +
22908     +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
22909     +*** End Scoring Code from PROC DMINE ***;
MPRINT(EM_DIAGRAM):   *** End Scoring Code from PROC DMINE ***;
22910     +****************************************;
MPRINT(EM_DIAGRAM):   ****************************************;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_DIAGRAM):   run;
22911      run;
 
NOTE: DATA STEP view saved on file EMWS1.VARSEL_VALIDATE.
NOTE: A stored DATA STEP view cannot run under a different operating system.
NOTE: View EMWS1.BINNING_VALIDATE.VIEW used (Total process time):
      real time           0.21 seconds
      cpu time            0.10 seconds
 
NOTE: DATA statement used (Total process time):
      real time           0.23 seconds
      cpu time            0.10 seconds
 
 
MPRINT(EM_DIAGRAM):   quit;
22912      quit;
22913      filename emflow;
MPRINT(EM_DIAGRAM):   filename emflow;
NOTE: Fileref EMFLOW has been deassigned.
22914      options nosource;
MPRINT(EM_DIAGRAM):    options nosource;
MPRINT(EM_DIAGRAM):   data EMWS1.Varsel_R2DS;
MPRINT(EM_DIAGRAM):   set EMWS1.Varsel_OUTRSQUARE;
MPRINT(EM_DIAGRAM):   label Effect = "Effect";
MPRINT(EM_DIAGRAM):   label DF = "Degree of Freedom";
MPRINT(EM_DIAGRAM):   label RSquare = "R-Square";
MPRINT(EM_DIAGRAM):   rename RSquare = R2;
MPRINT(EM_DIAGRAM):   keep Effect DF RSquare;
MPRINT(EM_DIAGRAM):   if Type="AOV16" then delete;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS1.VARSEL_OUTRSQUARE.
NOTE: The data set EMWS1.VARSEL_R2DS has 15 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Varsel_R2DS;
MPRINT(EM_DIAGRAM):   by descending R2;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 15 observations read from the data set EMWS1.VARSEL_R2DS.
NOTE: The data set EMWS1.VARSEL_R2DS has 15 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.12 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):    data EMWS1.Varsel_EFFECTDS;
MPRINT(EM_DIAGRAM):   set EMWS1.Varsel_OUTEFFECT;
MPRINT(EM_DIAGRAM):   label RSquare = "Sequential R-Square";
MPRINT(EM_DIAGRAM):   label Effect = "Effect";
MPRINT(EM_DIAGRAM):   label DF = "Degree of Freedom";
MPRINT(EM_DIAGRAM):   Rename RSquare = R2;
MPRINT(EM_DIAGRAM):   keep Effect DF RSquare;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.VARSEL_OUTEFFECT.
NOTE: The data set EMWS1.VARSEL_EFFECTDS has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.03 seconds
 
 
MPRINT(EM_DIAGRAM):   proc sort data = EMWS1.Varsel_EFFECTDS;
MPRINT(EM_DIAGRAM):   by descending R2;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 4 observations read from the data set EMWS1.VARSEL_EFFECTDS.
NOTE: The data set EMWS1.VARSEL_EFFECTDS has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.11 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Computing metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
 
NOTE: View EMWS1.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.15 seconds
 
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Computing Metadata for TRAIN data;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   filename _delta "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\CDELTA_TRAIN.sas";
MPRINT(EMADVISECOLUMNS):   proc display c=sashelp.emmeta.advisecolumns.scl;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    options validvarname=any;
MPRINT(EMADVISECOLUMNS):   proc contents data=EMWS1.Varsel_TRAIN out=_tempAdvisor noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   options validvarname=V7;
MPRINT(EMADVISECOLUMNS):    data _null_;
MPRINT(EMADVISECOLUMNS):   dsid = open('EMWS1.Varsel_TRAIN');
MPRINT(EMADVISECOLUMNS):   call symput('_dsidTable', strip(put(dsid, best.)));
MPRINT(EMADVISECOLUMNS):   if dsid then do;
MPRINT(EMADVISECOLUMNS):   call symput('_engineTable', attrc(dsid, 'ENGINE'));
MPRINT(EMADVISECOLUMNS):   dsid = close(dsid);
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc contents data=EMWS1.Varsel_TRAIN out=WORK.M3GTGJFU noprint;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3GTGJFU;
MPRINT(EMADVISECOLUMNS):   length NAME $ 64 TYPE $ 1 LABEL $ 200 FORMAT $ 36 INFORMAT $36 INDEX $ 1 INDEXTYPE $ 9;
MPRINT(EMADVISECOLUMNS):   label NAME =;
MPRINT(EMADVISECOLUMNS):   set WORK.M3GTGJFU(keep=name type length label format formatl formatd informat informl informd idxusage rename=(type=itype));
MPRINT(EMADVISECOLUMNS):   if itype = 1 then type = 'N';
MPRINT(EMADVISECOLUMNS):   else type = 'C';
MPRINT(EMADVISECOLUMNS):   if formatl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if format ne '' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then format = strip(format)!!strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   else format = strip(format)!!strip(put(formatl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else format = strip(put(formatl, best12.))!!'.'!!strip(put(formatd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if format ne '' then format = strip(format)!!'.';
MPRINT(EMADVISECOLUMNS):   if informl > 0 then do;
MPRINT(EMADVISECOLUMNS):   if informat ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type='N' then informat = strip(informat)!!strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   else informat = strip(informat)!!strip(put(informl, best12.))!!'.';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else informat = strip(put(informl, best12.))!!'.'!!strip(put(informd, best12.));
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if informat ne '' then informat = strip(informat)!!'.';
MPRINT(EMADVISECOLUMNS):   if idxusage = 'NONE' then index ="N";
MPRINT(EMADVISECOLUMNS):   else index = "Y";
MPRINT(EMADVISECOLUMNS):   indextype = idxusage;
MPRINT(EMADVISECOLUMNS):   drop idxusage itype formatl formatd informl informd;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3GTGJFU;
MPRINT(EMADVISECOLUMNS):   length UNAME $64;
MPRINT(EMADVISECOLUMNS):   set WORK.M3GTGJFU;
MPRINT(EMADVISECOLUMNS):   UNAME = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    proc sort data=WORK.M3GH_FKN NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by UNAME;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3GH_FKN;
MPRINT(EMADVISECOLUMNS):   drop UNAME;
MPRINT(EMADVISECOLUMNS):   set WORK.M3GH_FKN;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M1YJKJIR(keep=NAME ATTR);
MPRINT(EMADVISECOLUMNS):   length ATTR $ 20;
MPRINT(EMADVISECOLUMNS):   set WORK.M3GH_FKN;
MPRINT(EMADVISECOLUMNS):   if level ne "INTERVAL" then do;
MPRINT(EMADVISECOLUMNS):   if order = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ORDER';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' and formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'FORMATTYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'ROLE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'LEVEL';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if type = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'TYPE';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if index = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'INDEX';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if report = ' ' then do;
MPRINT(EMADVISECOLUMNS):   attr = 'REPORT';
MPRINT(EMADVISECOLUMNS):   output;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):   proc sort NOTHREADS;
MPRINT(EMADVISECOLUMNS):   by attr;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3GH_FKN;
MPRINT(EMADVISECOLUMNS):   length NAME $64 ROLE $ 32 LEVEL $ 10 ORDER $ 8 CREATOR $32 FORMATTYPE $ 10 FAMILY $ 10 LOWERLIMIT 8 UPPERLIMIT 8 REPORT $1 DISTRIBUTION $ 20 COMMENT $64;
MPRINT(EMADVISECOLUMNS):   length levelAssigned 8 roleAssigned 8 PRICE 8;
MPRINT(EMADVISECOLUMNS):   set WORK.M3GH_FKN;
MPRINT(EMADVISECOLUMNS):   if formattype = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if format ne ' ' then do;
MPRINT(EMADVISECOLUMNS):   if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   pos = indexc(format,'.1234567890');
MPRINT(EMADVISECOLUMNS):   if pos > 1 then tempfmt = substr(format,1, pos-1);
MPRINT(EMADVISECOLUMNS):   else tempfmt = ' ';
MPRINT(EMADVISECOLUMNS):   flen = length(tempfmt);
MPRINT(EMADVISECOLUMNS):   select;
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATE" "DAY" "DDMMYY" "DOWNAME" "JULDAY" "JULIAN" "MMDDYY" "MMDDYYD" "MMDDYYC" "MMDDYYN" "MMDDYYP" "MMDDYYS" "MONNAME" "MONTH" "MONYY" "NENGO" "QTR" "QTRR" "WEEKDATE" "WEEKDATX" "WEEKDAY" "WORDDATE" "WORDDATX"
"YEAR" "YYMMDD" "YYMON" "YYMMDDC" "YYMMDDD" "YYMMDDN" "YYMMDDP" "YYMMDDS" "EURDFDE" "NJDATE" "NLDATE" "EURDFDD" "EURDFDWN" "EURDFMN" "EURDFMY" "EURDFWK" "EURDFWKX" "EURDFWDX" "EURDFDN" "EURDFDE" )) formattype = 'DATE';
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("DATETIME" "EURDFDT" "TOD" )) formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("HHMM" "HOUR" "MMSS" "TIME" "TIMEAMPM" )) formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("COMMA" "COMMAX" "DOLLAR" "DOLLARX" "E" "FRACT" "NEGPAREN" "PERCENT")) formattype="QUANTITY";
MPRINT(EMADVISECOLUMNS):   when(tempfmt in ("BINARY" "HEX" "IB" "OCTAL" "PD" "PIB" "PK" "RB" "SSN" "Z" "ZD")) formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   formattype = "USER";
MPRINT(EMADVISECOLUMNS):   if compress(tempfmt, '0123456789.', '') = '' then formattype='NUM';
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATE' then formattype = "DATE";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 6)='NLDATM' then formattype = "DATETIME";
MPRINT(EMADVISECOLUMNS):   else if substr(tempfmt, 1, 4)='NLTIM' then formattype = "TIME";
MPRINT(EMADVISECOLUMNS):   else if flen >= 4 then do;
MPRINT(EMADVISECOLUMNS):   str = substr(tempfmt,1,4);
MPRINT(EMADVISECOLUMNS):   if str in ("MMYY" "YYMM" "YYQR") then formattype ="DATE";
MPRINT(EMADVISECOLUMNS):   else if str = "S370" then formattype = "CODING";
MPRINT(EMADVISECOLUMNS):   else if str = "BEST" then formattype = "NUM";
MPRINT(EMADVISECOLUMNS):   drop str;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if flen >=3 and substr(tempfmt,1,3) = "YYQ" then formatType = "DATE";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   drop flen tempfmt pos;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   formatType = "CATEGORY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if formatType = "NUM" then do;
MPRINT(EMADVISECOLUMNS):   if index = "Y" then formatType = "DISCRETE";
MPRINT(EMADVISECOLUMNS):   else formatType = "QUANTITY";
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if level = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formatType in ("CATEGORY", "CODING", "ID") or type = "C" then level = "NOMINAL";
MPRINT(EMADVISECOLUMNS):   else level = "INTERVAL";
MPRINT(EMADVISECOLUMNS):   levelAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else level = upcase(level);
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   length name_prefix $8 _uname $64;
MPRINT(EMADVISECOLUMNS):   drop name_prefix _uname _freqflag;
MPRINT(EMADVISECOLUMNS):   retain _freqflag;
MPRINT(EMADVISECOLUMNS):   if LENGTH> 80 then ROLE = 'TEXT';
MPRINT(EMADVISECOLUMNS):   _uname = upcase(NAME);
MPRINT(EMADVISECOLUMNS):   select(_uname);
MPRINT(EMADVISECOLUMNS):   when('_PARTIND_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_WARN_') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_SEGMENT') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('_NODE_') do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSTARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_VALUETARGET') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_PREDICTION') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_PROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_EVENTPROBABILITY') ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   when('EM_CLASSIFICATION') ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   when('EM_DECISION') ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   when('EM_PROFIT') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_LOSS') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('EM_ROI') ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   when('URI') ROLE = 'URL';
MPRINT(EMADVISECOLUMNS):   when('FILTERED') ROLE = 'TEXTLOC';
MPRINT(EMADVISECOLUMNS):   otherwise do;
MPRINT(EMADVISECOLUMNS):   if upcase(NAME) =: 'ZIP' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'REJECTED';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   COMMENT = 'Rejected by: Exceed the maximum class level of %s';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if upcase(NAME) in('FREQ', 'FREQUENCY') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'FREQ';
MPRINT(EMADVISECOLUMNS):   if TYPE = 'C' then ROLE = 'INPUT';
MPRINT(EMADVISECOLUMNS):   else if _freqflag =1 then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   name_prefix = scan(_uname, 1, '_');
MPRINT(EMADVISECOLUMNS):   if scan(_uname, 2, '_') = '' then name_prefix='';
MPRINT(EMADVISECOLUMNS):   if name_prefix in('F', 'I', 'U') then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'CLASSIFICATION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('Q') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('P', 'V') then ROLE = 'PREDICT';
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('R', 'RS', 'RT', 'RD', 'RDS', 'RDT', 'RA', 'RAS', 'RAT') then ROLE = 'RESIDUAL';
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='D' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'DECISION';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix ='B' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'SEGMENT';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else if name_prefix in('EP', 'BP', 'CP', 'EL', 'CL', 'BL', 'W', 'ROI', 'IC') then ROLE = 'ASSESS';
MPRINT(EMADVISECOLUMNS):   else do;
MPRINT(EMADVISECOLUMNS):   array _ROLE_ (19) $32 _TEMPORARY_ ('ASSESS','CLASSIFICATION','CENSOR', 'COST', 'CROSSID', 'DECISION', 'ID','INPUT', 'LABEL', 'MISSING','PREDICT','REFERRER','REJECTED', 'RESIDUAL','SEGMENT', 'SEQUENCE','TARGET', 'TEXT', 'TIMEID');
MPRINT(EMADVISECOLUMNS):   drop _found_ i;
MPRINT(EMADVISECOLUMNS):   _found_=0;
MPRINT(EMADVISECOLUMNS):   do i=1 to 19 until(_found_=1);
MPRINT(EMADVISECOLUMNS):   if index(_uname, trim(_ROLE_{i}))=1 then do;
MPRINT(EMADVISECOLUMNS):   ROLE=_ROLE_{i};
MPRINT(EMADVISECOLUMNS):   if ROLE = 'ID' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'SEGMENT' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'TIMEID' and TYPE='N' then LEVEL = 'INTERVAL';
MPRINT(EMADVISECOLUMNS):   _found_=1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if length(_uname)>2 then do;
MPRINT(EMADVISECOLUMNS):   if substr(reverse(trim(_uname)), 1, 3) = 'DI_' then do;
MPRINT(EMADVISECOLUMNS):   ROLE = 'ID';
MPRINT(EMADVISECOLUMNS):   LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if ROLE='FREQ' then _freqflag=1;
MPRINT(EMADVISECOLUMNS):   else if ROLE = 'CLASSIFICATION' then LEVEL = 'NOMINAL';
MPRINT(EMADVISECOLUMNS):   if symexist('RATEMKG_ROLE') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('RATEMKG_ROLE')) in('Y', 'YES') then do;
MPRINT(EMADVISECOLUMNS):   if _uname =: 'POLICY' then ROLE = 'POLICYID';
MPRINT(EMADVISECOLUMNS):   else if _uname in ('PARTITION', '_PARTIND_') then ROLE = 'PARTITION';
MPRINT(EMADVISECOLUMNS):   else if type = 'N' then do;
MPRINT(EMADVISECOLUMNS):   if _uname = 'EXPOSURE' then ROLE = 'EXPOSURE';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'YEAR' then ROLE = 'YEAR';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'WEIGHT' then ROLE = 'WEIGHT';
MPRINT(EMADVISECOLUMNS):   else if _uname = 'OFFSET' then ROLE = 'OFFSET';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   if role = ' ' then do;
MPRINT(EMADVISECOLUMNS):   if formattype in('DATE', 'DATETIME', 'TIME') then role = 'TIMEID';
MPRINT(EMADVISECOLUMNS):   else role = 'INPUT';
MPRINT(EMADVISECOLUMNS):   roleAssigned = 1;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   else role = upcase(role);
MPRINT(EMADVISECOLUMNS):   if REPORT = '' then REPORT = 'N';
MPRINT(EMADVISECOLUMNS):   if symexist('dmwb_product') then do;
MPRINT(EMADVISECOLUMNS):   if upcase(symget('dmwb_product')) = 'FACTORYMINER_DATASOURCE' then do;
MPRINT(EMADVISECOLUMNS):   if ROLE ^in('INPUT', 'TARGET', 'REJECTED', 'SEGMENT', 'FREQ', 'ID', 'KEY') then ROLE='REJECTED';
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   end;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):    data WORK.M3GH_FKN;
MPRINT(EMADVISECOLUMNS):   set WORK.M3GH_FKN;
MPRINT(EMADVISECOLUMNS):   label NAME = "Variable Name" TYPE = "Type" ROLE = "Role" LEVEL= "Measurement Level" ORDER= "Order" CREATOR= "Creator" FORMATTYPE= "Format Type" FAMILY= "Family" DISTRIBUTION= "Distribution" PRICE= "Price" LOWERLIMIT= "Lower
limit" UPPERLIMIT= "Upper Limit" REPORT= "Report" COMMENT= "Comment" INDEX= "Index" INDEXTYPE= "IndexType" LABEL= "Label" LENGTH= "Length";
MPRINT(EMADVISECOLUMNS):   drop levelAssigned roleAssigned;
MPRINT(EMADVISECOLUMNS):   run;
MPRINT(EMADVISECOLUMNS):
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   proc sort data=WORK.COLUMNMETA;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * &nodeid: Merge incoming metadata;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   proc contents data=EMWS1.BINNING_TRAIN noprint out=_temp2(keep=NAME);
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=_temp2;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   proc sort data=EMWS1.BINNING_CMeta_TRAIN out=_temp;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Varsel_CMeta_TRAIN;
MPRINT(EM_DIAGRAM):   merge WORK.COLUMNMETA(in=_a) _temp2(in=_b) _temp(drop=FORMAT INFORMAT LENGTH INDEX INDEXTYPE in=_c) end=_eof_;
MPRINT(EM_DIAGRAM):   by NAME;
MPRINT(EM_DIAGRAM):   if (^_a and _b) or (^_c and _a and _b) then delete;
MPRINT(EM_DIAGRAM):   if ^_b then CREATOR = "Varsel";
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Varsel: Apply Delta Code;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'GRP_IMP_DEBTINC' then role = 'REJECTED';
MPRINT(EM_DIAGRAM):   if upcase(strip(name)) = "G_GRP_IMP_DEBTINC" then level = "NOMINAL";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _delta;
NOTE: View EMWS1.VARSEL_TRAIN.VIEW used (Total process time):
      real time           0.14 seconds
      cpu time            0.14 seconds
 
NOTE: View EMWS1.VARSEL_VALIDATE.VIEW used (Total process time):
      real time           0.12 seconds
      cpu time            0.11 seconds
 
MPRINT(EM_DIAGRAM):    options nonotes nosource;
MPRINT(EM_DIAGRAM):   data EMWS1.Varsel_RESULTEDVARS(keep = NAME ROLE LEVEL TYPE LABEL);
MPRINT(EM_DIAGRAM):   set EMWS1.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data EMWS1.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   set EMWS1.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   length COMMENT $300;
MPRINT(EM_DIAGRAM):   label COMMENT = "Reasons for Rejection";
MPRINT(EM_DIAGRAM):   if upcase(name) = 'GRP_IMP_DEBTINC' then do;
MPRINT(EM_DIAGRAM):   comment = "Varsel:Small R-square value, Group variable preferred";
MPRINT(EM_DIAGRAM):   end;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_DIAGRAM):   if ROLE not in ('REJECTED' 'INPUT') then delete;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Varsel_UNUSEDINPUTVARS;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data EMWS1.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   set EMWS1.Varsel_RESULTEDVARS;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'IMP_CLAGE' then delete;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'IMP_CLNO' then delete;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'IMP_DEBTINC' then delete;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'IMP_JOB' then delete;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'IMP_MORTDUE' then delete;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'IMP_NINQ' then delete;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'IMP_REASON' then delete;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'IMP_VALUE' then delete;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'INDELINQ' then delete;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'INDEROG' then delete;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'INYOJ' then delete;
MPRINT(EM_DIAGRAM):   if upcase(name) = 'LOAN' then delete;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   options notes source;
MPRINT(EM_DIAGRAM):   run;
23313      run;
 
23314      data EMWS1.Varsel_CMETA_NONREJECTS EMWS1.Varsel_CMETA_REJECTS;
MPRINT(EM_DIAGRAM):    data EMWS1.Varsel_CMETA_NONREJECTS EMWS1.Varsel_CMETA_REJECTS;
23315      set EMWS1.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Varsel_CMETA_TRAIN;
23316      if ROLE ='REJECTED' then output EMWS1.Varsel_CMETA_REJECTS;
MPRINT(EM_DIAGRAM):   if ROLE ='REJECTED' then output EMWS1.Varsel_CMETA_REJECTS;
23317      else output EMWS1.Varsel_CMETA_NONREJECTS;
MPRINT(EM_DIAGRAM):   else output EMWS1.Varsel_CMETA_NONREJECTS;
23318      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 20 observations read from the data set EMWS1.VARSEL_CMETA_TRAIN.
NOTE: The data set EMWS1.VARSEL_CMETA_NONREJECTS has 7 observations and 20 variables.
NOTE: The data set EMWS1.VARSEL_CMETA_REJECTS has 13 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.20 seconds
      cpu time            0.04 seconds
 
 
23319      data EMWS1.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):    data EMWS1.Varsel_CMETA_TRAIN;
23320      set EMWS1.Varsel_CMETA_NONREJECTS;
MPRINT(EM_DIAGRAM):   set EMWS1.Varsel_CMETA_NONREJECTS;
23321      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS1.VARSEL_CMETA_NONREJECTS.
NOTE: The data set EMWS1.VARSEL_CMETA_TRAIN has 7 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.12 seconds
      cpu time            0.06 seconds
 
 
23322      data WORK._tmp_meta_;
MPRINT(EM_DIAGRAM):    data WORK._tmp_meta_;
23323      set EMWS1.Varsel_CMETA_TRAIN;
MPRINT(EM_DIAGRAM):   set EMWS1.Varsel_CMETA_TRAIN;
23324      if ROLE ^= 'INPUT' then delete;
MPRINT(EM_DIAGRAM):   if ROLE ^= 'INPUT' then delete;
23325      run;
MPRINT(EM_DIAGRAM):   run;
 
NOTE: There were 7 observations read from the data set EMWS1.VARSEL_CMETA_TRAIN.
NOTE: The data set WORK._TMP_META_ has 4 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
 
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 07, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21:35:47" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Report Log
Date:                November 07, 2018
Time:                21:35:47
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O215C9QN "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Varsel\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O215C9QN new;
MPRINT(EM_DIAGRAM):   run;
23349      %em_getActionStatus(emlib=EMWS1, nodeid=Varsel);
MPRINT(EM_DIAGRAM):
MPRINT(EM_GETACTIONSTATUS):   proc display c=sashelp.emutil.getactionstatus.scl;
MPRINT(EM_GETACTIONSTATUS):   run;
 
23350      %let em_Train = Y;
23351      %let em_Report = Y;
23352      %let em_Score = Y;
23353      %let em_Run = Y;
NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
 
 
MPRINT(EM_GETACTIONSTATUS):
MPRINT(EM_DIAGRAM):  ;
 
MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
