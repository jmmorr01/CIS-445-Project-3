MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 07, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21:48:19" );
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Log";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
*------------------------------------------------------------*
* Training Log
Date:                November 07, 2018
Time:                21:48:19
*------------------------------------------------------------*
MPRINT(EM_DIAGRAM):    filename O34A52NZ "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   proc printto print=O34A52NZ new;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOG "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\EMLOG.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 07, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21:48:20" );
MPRINT(EM_DIAGRAM):   file _LOG;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                jmmorr01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "Site:                70080761";
MPRINT(EM_DIAGRAM):   put "Platform:            X64_8PRO";
MPRINT(EM_DIAGRAM):   put "Maintenance Release: 9.04.01M3P062415";
MPRINT(EM_DIAGRAM):   put "EM Version:          14.1";
MPRINT(EM_DIAGRAM):   put "* ";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\EMTRAIN.log" encoding="UTF-8" NOBOM;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _LOG MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_LOGIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   filename _LOGIN "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\EMSCORE.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   file _LOG mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _LOGIN "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\EMREPORT.log" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _LOGIN;
MPRINT(EM_DIAGRAM):    filename _LOG;
MPRINT(EM_DIAGRAM):    filename _OUT "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\EMOUTPUT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   call symput('NLDATE', strip(put(date(), NLDATE.)));
MPRINT(EM_DIAGRAM):   call symput('NLTIME', strip(put(datetime(), NLTIME.)));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   nldate= sasmsg("sashelp.dmine", "log_date_note", 'N', "November 07, 2018" );
MPRINT(EM_DIAGRAM):   nltime= sasmsg("sashelp.dmine", "log_time_note", 'N', "21:48:20" );
MPRINT(EM_DIAGRAM):   file _OUT;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "User:                jmmorr01";
MPRINT(EM_DIAGRAM):   put nldate;
MPRINT(EM_DIAGRAM):   put nltime;
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Training Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\EMTRAIN.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):   ;
MPRINT(EM_COPYFILE):   data _null_;
MPRINT(EM_COPYFILE):   length line $20000;
MPRINT(EM_COPYFILE):   file _OUT MOD lrecl=20000;
MPRINT(EM_COPYFILE):   fid=fopen("_OUTIN",'i',20000,'v');
MPRINT(EM_COPYFILE):   if fid > 0 then do;
MPRINT(EM_COPYFILE):   do while(^fread(fid));
MPRINT(EM_COPYFILE):   rlen = frlen(fid);
MPRINT(EM_COPYFILE):   rc= fget(fid,line,20000);
MPRINT(EM_COPYFILE):   start = length(line)-length(left(line))+1;
MPRINT(EM_COPYFILE):   line=strip(line);
MPRINT(EM_COPYFILE):   put @start line;
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   if fid > 0 then rc=fclose(fid);
MPRINT(EM_COPYFILE):   end;
MPRINT(EM_COPYFILE):   run;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Score Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\EMSCORE.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    data _null_;
MPRINT(EM_DIAGRAM):   file _OUT mod;
MPRINT(EM_DIAGRAM):   put _page_;
MPRINT(EM_DIAGRAM):   put // "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   put "* Report Output";
MPRINT(EM_DIAGRAM):   put "*------------------------------------------------------------*";
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):    filename _OUTIN "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\EMREPORT.out" encoding="UTF-8" NOBOM;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   filename _OUTIN;
MPRINT(EM_DIAGRAM):    filename _OUT;
MPRINT(EM_DIAGRAM):    filename _emtool_ 'J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\EMRUNSTATUS.xml' encoding="UTF-8" NOBOM;
23197      proc freq data=EMWS1.Report_VariableSet noprint;
MPRINT(EM_DIAGRAM):    proc freq data=EMWS1.Report_VariableSet noprint;
23198      table ROLE*LEVEL/out=WORK.ReportMETA;
MPRINT(EM_DIAGRAM):   table ROLE*LEVEL/out=WORK.ReportMETA;
23199      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 23 observations read from the data set EMWS1.REPORT_VARIABLESET.
NOTE: The data set WORK.REPORTMETA has 9 observations and 4 variables.
NOTE: PROCEDURE FREQ used (Total process time):
      real time           0.09 seconds
      cpu time            0.01 seconds
      

23200      proc print data=WORK.ReportMETA label noobs;
MPRINT(EM_DIAGRAM):   proc print data=WORK.ReportMETA label noobs;
23201      var ROLE LEVEL COUNT;
MPRINT(EM_DIAGRAM):   var ROLE LEVEL COUNT;
23202      label ROLE = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" LEVEL = "%sysfunc(sasmsg(sashelp.dmine, meta_level_vlabel, NOQUOTE))" COUNT = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE))";
MPRINT(EM_DIAGRAM):   label ROLE = "Role" LEVEL = "Measurement Level" COUNT = "Frequency Count";
23203      title9 ' ';
MPRINT(EM_DIAGRAM):   title9 ' ';
23204      title10 "%sysfunc(sasmsg(sashelp.dmine, rpt_varSummary_title  , NOQUOTE))";
MPRINT(EM_DIAGRAM):   title10 "Variable Summary";
MPRINT(EM_DIAGRAM):   run;
23205      run;

NOTE: There were 9 observations read from the data set WORK.REPORTMETA.
NOTE: The PROCEDURE PRINT printed page 1.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

23206      title10;
MPRINT(EM_DIAGRAM):   title10;
23207      %let EMEXCEPTIONSTRING=;
MPRINT(EM_DIAGRAM):     *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Report: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Report: EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * System Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   length string $2000;
MPRINT(EM_DIAGRAM):   string = 'CIS 445 Project 3';
MPRINT(EM_DIAGRAM):   call symput('EM_PROJECTNAME', trim(string));
MPRINT(EM_DIAGRAM):   string = 'Project 3';
MPRINT(EM_DIAGRAM):   call symput('EM_WSNAME', trim(string));
MPRINT(EM_DIAGRAM):   run;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   * Properties Macro Variables ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------* ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Files Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Import Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Export Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Decision Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Statement Macro Variables;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   data _null_;
MPRINT(EM_DIAGRAM):   set EMWS1.Neural_EMINFO;
MPRINT(EM_DIAGRAM):   where key in('HPDMSAMPLE', 'IDSTABLE');
MPRINT(EM_DIAGRAM):   if key = 'HPDMSAMPLE' then call symput('_ForceGrid', '1');
MPRINT(EM_DIAGRAM):   else call symput('_IDS_TABLE', DATA);
MPRINT(EM_DIAGRAM):   run;
MPRINT(HPDM_PERFORMANCE):  ;
PERFORMANCE  DETAILS
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * General Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Target Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Input Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Rejected Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * Misc Variable Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End Create EM Macro Variables and Macros;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23567      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23568      * Report: Generation of macros and macro variables;
MPRINT(EM_DIAGRAM):   * Report: Generation of macros and macro variables;
23569      * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
MPRINT(EM_DIAGRAM):   * To see the code generated, set the EM_DEBUG macro variable to SOURCE or _ALL_;
23570      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;

23571      %let EMEXCEPTIONSTRING=;
23572      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
23573      * TRAIN: Report;
MPRINT(EM_DIAGRAM):   * TRAIN: Report;
23574      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
23575      %let EM_ACTION = TRAIN;
23576      %let syscc = 0;
23577      %macro main;
23578      
23579        filename temp catalog 'sashelp.emutil.reporter_macros.source';
23580        %include temp;
23581        filename temp;
23582      
23583        %setProperties;
23584      
23585        %if %upcase(&EM_ACTION) = CREATE %then %do;
23586          filename temp catalog 'sashelp.emutil.reporter_create.source';
23587          %include temp;
23588          filename temp;
23589      
23590          %create;
23591        %end;
23592      
23593         %else
23594         %if %upcase(&EM_ACTION) = TRAIN %then %do;
23595      
23596             filename temp catalog 'sashelp.emutil.reporter_train.source';
23597             %include temp;
23598             filename temp;
23599             %train;
23600         %end;
23601      
23602         %doendm:
23603      %mend main;
23604      
23605      %main;
MPRINT(EM_DIAGRAM):    
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.reporter_macros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_MACROS.SOURCE.
23608     +%macro SetProperties;
23610     +     /* reporting options */
23611     +     %em_checkmacro(name=EM_PROPERTY_FORMAT,         value=PDF , global=Y);
23612     +     %em_checkmacro(name=EM_PROPERTY_NODES ,         value=PATH, global=Y);
23613     +     %em_checkmacro(name=EM_PROPERTY_STYLE ,         value=DEFAULT, global=Y);
23614     +     %em_checkmacro(name=EM_PROPERTY_SHOWALL,        value=N, global=Y);
23616     +     %em_checkmacro(name=EM_PROPERTY_SUMMARIZATION,  value=Y, global=Y);
23617     +     %em_checkmacro(name=EM_PROPERTY_VARRANKING,     value=Y, global=Y);
23618     +     %em_checkmacro(name=EM_PROPERTY_CLASSIFICATION, value=Y, global=Y);
23619     +     %em_checkmacro(name=EM_PROPERTY_CROSSTABS,      value=Y, global=Y);
23620     +     %em_checkmacro(name=EM_PROPERTY_LIFTCHART,      value=Y, global=Y);
23621     +     %em_checkmacro(name=EM_PROPERTY_FITSTAT,        value=Y, global=Y);
23622     +     %em_checkmacro(name=EM_PROPERTY_COMPAREMDL,     value=Y, global=Y);
23624     +     %em_checkmacro(name=EM_PROPERTY_BASICOUTPUT,    value=N, global=Y);
23626     +    %em_checkmacro(name=EM_PROPERTY_textfont,   value=Arial, global=Y);
23627     +    %em_checkmacro(name=EM_PROPERTY_headersize, value=8, global=Y);
23628     +    %em_checkmacro(name=EM_PROPERTY_textsize,   value=6, global=Y);
23629     +    %em_checkmacro(name=EM_PROPERTY_titlesize,  value=10, global=Y);
23631     +%mend SetProperties;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(MAIN):  ;
MPRINT(MAIN):   filename temp catalog 'sashelp.emutil.reporter_train.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_TRAIN.SOURCE.
23632     +
23633     +%macro train();
23634     +
23635     +    filename temp catalog 'sashelp.emutil.reporter_trainmacros.source'; %include temp; filename temp;
23636     +    filename temp catalog 'sashelp.emrpm.em_modelprops.source';         %include temp; filename temp;
23637     +
23638     +    /* Initialize property macro variables */
23639     +    %SetProperties;
23640     +
23641     +    /* if pdf or rtf files exist, delete these prior to recreating report */
23642     +    %EM_GETNAME(key=REPORT, type=FILE, extension=pdf);
23643     +    filename pdffile "&EM_USER_REPORT";
23644     +    %if %sysfunc(fexist(pdffile)) %then %do;
23645     +        %let rc = %sysfunc(fdelete(pdffile));
23646     +    %end;
23647     +    filename pdffile;
23648     +
23649     +    %EM_GETNAME(key=REPORT, type=FILE, extension=rtf);
23650     +    filename rtffile "&EM_USER_REPORT";
23651     +    %if %sysfunc(fexist(rtffile)) %then %do;
23652     +        %let rc = %sysfunc(fdelete(rtffile));
23653     +    %end;
23654     +    filename rtffile;
23655     +
23656     +    /* create report */
23657     +
23658     +    %EM_REPORT_CREATE(
23659     +        path        = &EM_NODEDIR,
23660     +        lib         = &EM_LIB,
23661     +        startnodeid = &EM_NODEID,
23662     +        showall     = &EM_PROPERTY_SHOWALL,
23663     +        nodes       = &EM_PROPERTY_NODES,
23664     +        format      = &EM_PROPERTY_FORMAT,
23665     +        style       = &EM_PROPERTY_STYLE
23666     +    );
23667     +
23668     +    %if &EMEXCEPTIONSTRING ne %then %do; %goto doendm; %end;
23669     +
23670     +    %EM_REPORT_RESULTS(
23671     +        path        = &EM_NODEDIR,
23672     +        lib         = &EM_LIB,
23673     +        startnodeid = &EM_NODEID,
23674     +        showall     = &EM_PROPERTY_SHOWALL,
23675     +        nodes       = &EM_PROPERTY_NODES,
23676     +        format      = &EM_PROPERTY_FORMAT,
23677     +        style       = &EM_PROPERTY_STYLE
23678     +    );
23679     +
23680     +    %doendm:
23681     +
23682     +%mend train;
NOTE: %INCLUDE (level 1) ending.
MPRINT(MAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   filename temp catalog 'sashelp.emutil.reporter_trainmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_TRAINMACROS.SOURCE.
23683     +/*---------------------------------------------------------*/
23684     + *  EM_REPORT_CREATE;
MPRINT(TRAIN):   * EM_REPORT_CREATE;
23685     + *   all work needed to start the documents;
MPRINT(TRAIN):   * all work needed to start the documents;
23686     + *  - identify directory location;
MPRINT(TRAIN):   * - identify directory location;
23687     + *  - clear directory of em report files;
MPRINT(TRAIN):   * - clear directory of em report files;
23688     + *  - initialize document options;
MPRINT(TRAIN):   * - initialize document options;
23689     + *  - setup ODS system;
MPRINT(TRAIN):   * - setup ODS system;
23690     +/*---------------------------------------------------------*/
23691     +%macro EM_REPORT_CREATE(
23692     +    path=,             /*-- output location             ---*/
23693     +    lib=,              /*-- em workspace library        ---*/
23694     +    startnodeid=,      /*-- starting nodeid             ---*/
23695     +    showall=,          /*-- show all content Y or N     ---*/
23696     +    nodes=,            /*-- nodes to generate report on ---*/
23697     +    format=,           /*-- format for generated report ---*/
23698     +    style=             /*--- style for ODS statement    ---*/
23699     +) ;
23701     +    filename temp catalog 'sashelp.emutil.reporter_plotmacros.source';      %include temp; filename temp;
23702     +    filename temp catalog 'sashelp.emutil.reporter_printmacros.source';     %include temp; filename temp;
23703     +    filename temp catalog 'sashelp.emutil.reporter_rpmmacros.source';       %include temp; filename temp;
23704     +    filename temp catalog 'sashelp.emutil.em_gettrainpath.source' ;         %include temp; filename temp;
23705     +    filename temp catalog 'sashelp.emutil.reporter_tagset_template.source'; %include temp; filename temp;
23707     +    /*--- 1. set global parameters ---*/
23709     +    %GLOBAL EM_REPORT_PATH    ; %let EM_REPORT_PATH    = &PATH ;
23710     +    %GLOBAL EM_REPORT_SHOWALL ; %let EM_REPORT_SHOWALL = %upcase(&showall) ;
23711     +    %GLOBAL EM_REPORT_LIB     ; %let EM_REPORT_LIB     = &lib;
23712     +    %GLOBAL EM_REPORT_NODES   ; %let EM_REPORT_NODES   = &nodes;
23713     +    %GLOBAL EM_REPORT_FORMAT  ; %let EM_REPORT_FORMAT  = &format;
23714     +    %GLOBAL EM_REPORT_SYTLE   ; %let EM_REPORT_STYLE   = &style;
23716     +    /*--- 2. set global constants ---*/
23718     +    %GLOBAL EM_REPORT_GDEVICE;
23719     +    %GLOBAL EM_REPORT_PRINT_MAXVARS;
23720     +    %GLOBAL EM_REPORT_TEXT_FONT;
23721     +    %GLOBAL EM_REPORT_TEXT_SIZE;
23722     +    %GLOBAL EM_REPORT_TITLE_SIZE;
23723     +    %GLOBAL EM_REPORT_HEADER_SIZE;
23724     +    %GLOBAL EM_REPORT_NODE_FONT;
23725     +    %GLOBAL EM_REPORT_TITLE;
23726     +    %GLOBAL EM_REPORT_FOOTNOTE1;
23727     +    %GLOBAL EM_REPORT_FOOTNOTE2;
23729     +    %global EM_REPORT_SUPPRESS_DATE; %let EM_REPORT_SUPPRESS_DATE =;
23731     +    %global RPM_REPORT_MODELNODE RPM_REPORT_SCORENODE RPM_REPORT_MDLCOMP RPM_REPORT_VALIDSUMMARY;
23733     +    %if "&EM_REPORT_GDEVICE"       eq ""  %then %let EM_REPORT_GDEVICE = GIF;
23734     +    %if "&EM_REPORT_PRINT_MAXVARS" eq ""  %then %let EM_REPORT_PRINT_MAXVARS= 40;
23735     +    %if "&EM_REPORT_TEXT_FONT"     eq ""  %then %do;
23736     +        %let EM_REPORT_TEXT_FONT= %sysfunc(getlocale(FTITLE, &EM_PROPERTY_TEXTFONT));
23737     +        %let EM_REPORT_TEXT_FONT= %sysfunc(tranwrd(&EM_REPORT_TEXT_FONT,%str(<ttf>),%str()));
23738     +    %end;
23739     +    %if "&EM_REPORT_NODE_FONT"     eq ""  %then %do;
23740     +        %let EM_REPORT_NODE_FONT = %sysfunc(getlocale(FTITLE, SIMPLEX)) ;
23741     +        %let EM_REPORT_NODE_FONT = %sysfunc(tranwrd(&EM_REPORT_NODE_FONT,%str(<ttf>),%str()));
23742     +    %end;
23743     +    %if "&EM_REPORT_HEADER_SIZE"   eq ""  %then %let EM_REPORT_HEADER_SIZE = &EM_PROPERTY_HEADERSIZE;
23744     +    %if "&EM_REPORT_TEXT_SIZE"     eq ""  %then %let EM_REPORT_TEXT_SIZE   = &EM_PROPERTY_TEXTSIZE;
23745     +    %if "&EM_REPORT_TITLE_SIZE"    eq ""  %then %let EM_REPORT_TITLE_SIZE  = &EM_PROPERTY_TITLESIZE;
23747     +    /*--- 3. text for title statements ---*/
23749     +    %global EM_REPORT_PROJECT_TEXT ; %let EM_REPORT_PROJECT_TEXT= %superq(EM_PROJECTNAME);
23750     +    %global EM_REPORT_DIAGRAM_TEXT ; %let EM_REPORT_DIAGRAM_TEXT= %superq(EM_WSNAME);
23752     +    %EM_REPORT_NODE_TEXT(&startnodeid) ;
23754     +    /*--- 4. create output filename ---*/
23756     +    %EM_REGISTER(key=REPORT, type=FILE, extension=&EM_REPORT_FORMAT);
23758     +    /*--- 5. Allways get the path for showing the score code --*/
23760     +    %let FLOW= ;            /*--- ignore for now ---*/
23761     +    %let PUBLISH=;          /*--- ignore for now ---*/
23762     +    %let EM_LIB=&lib ;      /*--- used by the macro */
23764     +    %if &EM_REPORT_NODES ne SUMMARY %then %do;
23765     +        %EM_PATH(nodeid=&startnodeid, outds=emreportpath, nodes=&EM_REPORT_NODES);
23766     +    %end;
23767     +    %else %do;
23768     +        %EM_PATH(nodeid=&startnodeid, outds=emreportpath, nodes=PATH);
23769     +    %end;
23771     +    data emreportpath;
23772     +        set emreportpath;
23773     +        rename nodelabel=nodeid;
23774     +        nodeIndex = _n_;
23775     +    run;
23777     +    /*--- 6. create new tagset templates needed for tree, icicle and pie charts */
23779     +    *** create new style template to address fonts in ods text;
23781     +    ods path(prepend) work.templat(update);
23782     +    proc template ;
23783     +        define style styles.em_style / store=work.templat;
23784     +        parent= styles.&EM_REPORT_STYLE;
23786     +            style usertext from usertext /
23787     +                foreground=black font_size=&EM_REPORT_TITLE_SIZE pt font_face="&EM_REPORT_TEXT_FONT" font_weight=bold
23788     +            ;
23789     +            style systemtitle from systemtitle /
23790     +              color=colors("systitlefg") backgroundcolor=colors("systitlebg")
23791     +              fontsize=&EM_REPORT_TITLE_SIZE pt font_face="&EM_REPORT_TEXT_FONT" font_weight=bold
23792     +            ;
23793     +            style systemfooter from systemfooter /
23794     +              color=colors("systitlefg") backgroundcolor=colors("systitlebg")
23795     +              font_face="&EM_REPORT_TEXT_FONT"
23796     +            ;
23797     +            style GraphFonts from GraphFonts /
23798     +                'GraphTitleFont'    = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TITLE_SIZE pt)
23799     +                'GraphTitle1Font'   = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TITLE_SIZE pt)
23800     +                'GraphLabelFont'    = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_HEADER_SIZE pt)
23801     +                'GraphFootnoteFont' = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23802     +                'GraphValueFont'    = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23803     +                'GraphDataFont'     = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23804     +            ;
23805     +            style Fonts from Fonts/
23806     +                'TitleFont'           = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TITLE_SIZE pt)
23807     +                'TitleFont2'          = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TITLE_SIZE pt)
23808     +                'StrongFont'          = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23809     +                'EmphasisFont'        = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23810     +                'headingFont'         = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23811     +                'headingEmphasisFont' = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23812     +                'FixedEmphasisFont'   = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23813     +                'FixedStrongFont'     = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23814     +                'FixedHeadingFont'    = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23815     +                'FixedFont'           = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23816     +                'BatchFixedFont'      = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23817     +                'docFont'             = ("&EM_REPORT_TEXT_FONT", &EM_REPORT_TEXT_SIZE pt)
23818     +            ;
23819     +            style GraphTitleText from GraphTitleText / font_face="&EM_REPORT_TEXT_FONT";
23820     +            style data           from data           / font_size=&EM_REPORT_TEXT_SIZE pt;
23821     +            style header         from header         / font_size=&EM_REPORT_HEADER_SIZE pt;
23822     +            style rowheader      from header;
23823     +        end;
23824     +    run; quit;
23826     +    /*--- 7. start report / destination configurations ---*/
23828     +    *** options for page layout;
23829     +    options nodate nocenter number ls=97 ;
23831     +    *** get file name;
23832     +    %EM_GETNAME(key=REPORT, type=FILE, extension=&EM_REPORT_FORMAT);
23833     +    %let file = &EM_USER_REPORT;
23835     +    *** turn off LISTING and turn on the specified destination;
23836     +    ods listing close;
23837     +    ods graphics / height=4.5in;
23838     +    ods &EM_REPORT_FORMAT file="&file" style=styles.em_style
23839     +        %if &EM_REPORT_FORMAT eq PDF %then %do; startpage=NO uniform NOTOC %end;
23840     +        %if &EM_REPORT_FORMAT eq RTF %then %do; startpage=NEVER BODYTITLE  %end;
23841     +    ;
23843     +    *** titles and footnotes;
23844     +    ods &EM_REPORT_FORMAT text=" ";
23845     +    %if "&EM_REPORT_TITLE" ne "" %then %do;
23846     +        ods &EM_REPORT_FORMAT text="&EM_REPORT_TITLE";
23847     +    %end;
23848     +    %else %do;
23849     +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))";
23850     +    %end;
23852     +    %if "&EM_REPORT_FOOTNOTE1" ne "" %then %do; footnote1 "&EM_REPORT_FOOTNOTE1"; %end;
23853     +    %if "&EM_REPORT_FOOTNOTE2" ne "" %then %do; footnote2 "&EM_REPORT_FOOTNOTE2"; %end;
23855     +    /*--- 8. verify that valid flow exists for SUMMARY (RPM) report ---*/
23856     +    /*--- if not, SUMMARY style report can not be generated and PATH report will be done instead ---*/
23858     +    %EM_REPORT_validSummaryPath(startNodeID = &startNodeID);
23860     +    %if ((&EM_REPORT_NODES eq SUMMARY ) AND(&RPM_REPORT_VALIDSUMMARY eq 1))%then %do;
23861     +        %local hprpm_hpassess;
23862     +        %let   hprpm_hpassess = &em_lib..&RPM_REPORT_MODELNODE._hpassess;
23863     +        %if %sysfunc(exist(&hprpm_hpassess)) %then %do;
23864     +            filename temp catalog 'sashelp.hpdm.hpdm_scorecard.source'; %include temp; filename temp;
23865     +            %EM_REPORT_SUMMARY(runHP=1);
23866     +        %end;
23867     +        %else %do;
23868     +            %EM_REPORT_SUMMARY(runHP=0);
23869     +        %end;
23870     +        %goto create_endline;
23871     +    %end;
23872     +    %else %do;
23873     +        %if &EM_REPORT_NODES eq SUMMARY %then %let EM_REPORT_NODES= PATH;
23874     +    %end;
23876     +    /*--- 9. output report information (header of the report)---*/
23878     +    ods proclabel "%sysfunc(sasmsg(sashelp.dmine, rpt_reportinfo_title, NOQUOTE))";
23879     +    data _null_;
23880     +        call symput('report_date', %nrbquote(strip(put(date(),     NLDATE.))));
23881     +        call symput('report_time', %nrbquote(strip(put(datetime(), NLTIME.))));
23882     +    run;
23884     +    data _null_;
23885     +        file print ;
23886     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_user_note, NOQUOTE, &sysuserid))" ;
23887     +        %if ((&EM_REPORT_SUPPRESS_DATE eq ) OR (%index(&EM_REPORT_SUPPRESS_DATE, Y) < 1)) %then %do;
23888     +            put "%sysfunc(sasmsg(sashelp.dmine, rpt_date_note, NOQUOTE, %nrbquote(&report_time), &report_date))" ;
23889     +        %end;
23890     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_project_note, NOQUOTE, &EM_REPORT_PROJECT_TEXT)) " ;
23891     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_diagram_note, NOQUOTE, %nrstr(&EM_REPORT_DIAGRAM_TEXT)))" / ;
23892     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_startnode_note, NOQUOTE, &startnodeid))";
23893     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodelabel_note, NOQUOTE, %nrbquote(&em_report_node_text)))" ;
23894     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodes_note, NOQUOTE, &EM_REPORT_NODES))" ;
23895     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_showall_note, NOQUOTE, &EM_REPORT_showall))" /;
23896     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_format_note, NOQUOTE, &EM_REPORT_FORMAT))" ;
23897     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_style_note, NOQUOTE, &EM_REPORT_STYLE))" /;
23898     +    run ;
23900     +    /*--- 10. generate the workspace plot ---*/
23902     +    %em_report_workspace_xml;
23903     +    %em_getname(key=PFD, type=FILE, extension=XML);
23904     +    %em_report_makeds(&EM_USER_PFD, xmldata);
23905     +    %em_report_workspace_render;
23907     +    /*--- 11. identify the nodes to report                                  ---*/
23908     +    /*--- merged and modified from three previous macros:                   ---*/
23909     +    /*--- EM_REPORT_PATH, EM_REPORT_PREDECESORS EM_REPORT_PREDECESORS_COUNT ---*/
23911     +    %global EM_REPORT_NODENUM EM_REPORT_NODELIST;
23912     +    %let EM_REPORT_NODENUM = 0;
23914     +    %if &EM_REPORT_NODES eq PATH or &EM_REPORT_NODES eq ALL
23915     +    %then %do;
23916     +        %if %sysfunc(exist(emreportpath)) %then %do;
23917     +            proc sql noprint;
23918     +                select count(*) into :EM_REPORT_NODENUM
23919     +                    from emreportpath where nodeID ne " ";
23920     +                %if &EM_REPORT_NODENUM gt 0 %then %do;
23921     +                    select strip(nodeID) into :EM_REPORT_NODELIST separated by ' '
23922     +                        from emreportpath where nodeID ne " " order by nodeIndex;
23923     +                %end;
23924     +            quit;
23925     +        %end;
23926     +    %end;
23927     +    %else %if &EM_REPORT_NODES eq PREDECESSOR
23928     +    %then %do ;
23929     +        proc sql noprint;
23930     +            select count(*) into :EM_REPORT_NODENUM
23931     +                from &EM_REPORT_LIB..em_dgraph where upcase(strip(to)) eq upcase(strip("&startnodeid"));
23932     +            %if &EM_REPORT_NODENUM gt 0 %then %do;
23933     +                select strip(from) into :EM_REPORT_NODELIST separated by ' '
23934     +                    from &EM_REPORT_LIB..em_dgraph where upcase(strip(to)) eq upcase(strip("&startnodeid"));
23935     +            %end;
23936     +        quit;
23937     +    %end;
23938     +    %else %if &EM_REPORT_NODES eq 0 %then %do;
23939     +        %let EM_REPORT_NODENUM = 1;
23940     +        %let EM_REPORT_NODELIST = &startnodeid;
23941     +    %end;
23943     +    %if &EM_REPORT_NODENUM gt 0 %then %do;
23944     +        %do n = 1 %to &EM_REPORT_NODENUM;
23945     +            %EM_REPORT_NODE(nodeid=%scan(&EM_REPORT_NODELIST,&n,' '));
23946     +        %end;
23947     +    %end;
23949     +    /*--- 12. close report and ODS destinations---*/
23951     +    %create_endline:;
23953     +    data _NULL_ ;
23954     +        file print;
23955     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_endreport_note, NOQUOTE))" ;
23956     +    run;
23958     +    title1; title2; title3 ;
23959     +    %if "&EM_REPORT_FOOTNOTE1" ne "" %then %do; footnote1; %end;
23960     +    %if "&EM_REPORT_FOOTNOTE2" ne "" %then %do; footnote2; %end;
23961     +    ods graphics / reset=height;
23962     +    ods listing;
23963     +    ods &EM_REPORT_FORMAT close;
23965     +%mend EM_REPORT_CREATE ;
23967     +/*---------------------------------------------------------*/
23968     + * EM_REPORT_NODE ;
MPRINT(TRAIN):   * EM_REPORT_NODE ;
23969     + *     create a report for a node on an EM diagram ;
MPRINT(TRAIN):   * create a report for a node on an EM diagram ;
23970     +/*---------------------------------------------------------*/
23971     +%macro EM_REPORT_NODE(nodeid=) ;
23973     +    %if not %sysfunc(exist(&em_report_lib..&nodeid._emreport))
23974     +    %then %do ;
23975     +        %put NOTE: Node report data set (&em_report_lib..&nodeid._emreport) is not defined.;
23976     +        %goto node_skip;
23977     +    %end ;
23979     +    /*--- 1. set global parameters ---*/
23981     +    %global EM_REPORT_NODEID EM_REPORT_KEY_WHERECLAUSE
23982     +            EM_REPORT_TTL1 EM_REPORT_TTL2 EM_REPORT_TTL3
23983     +    ;
23984     +    %let EM_REPORT_NODEID= &nodeid ;
23986     +    /*--- 2. preparations: Node Text; Path; Notes; Num of Prev. Nodes ---*/
23988     +    /* 2.1 get node text;*/
23989     +    %EM_REPORT_NODE_TEXT(&nodeid) ;
23991     +    /* 2.2 get the em path to this node;*/
23992     +    %EM_gettrainpath(nodeid=&nodeid,outpath=_tmp_emrnp);
23994     +    %if %sysfunc(exist(_tmp_emrnp))
23995     +    %then %do;
23996     +        data _null_;
23997     +            set _tmp_emrnp end=eof ;
23998     +            length path $1000 ;
23999     +            retain path ' ';
24000     +            if _n_ eq 1
24001     +                then path = strip(nodelabel) ;
24002     +                else path = strip(path) !! " => " !! strip(nodelabel);
24003     +            if eof then call symput('print_path', strip(path));
24004     +        run;
24005     +    %end ;
24006     +    %else %do;
24007     +        %let print_path= Unknown;
24008     +    %end ;
24010     +    /* 2.3 retrieve location of notes file;*/
24011     +    %let temp = %nrbquote(%sysfunc(pathname(&EM_REPORT_LIB)));
24012     +    %let path = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
24013     +    %let file = EMNOTES.txt;
24014     +    %let notesfile = %nrbquote(&path&em_dsep&nodeid&em_dsep&file);
24016     +    /* 2.4 predecessor node counts */
24017     +    proc sql noprint;
24018     +        select count(*) into :EM_REPORT_PREDECESSORS_COUNT
24019     +            from &EM_REPORT_LIB..EM_DGRAPH where upcase(strip(to)) eq upcase(strip("&nodeid"));
24020     +    quit;
24022     +    %if ((&EM_REPORT_PREDECESSORS_COUNT eq 0) or (&EM_REPORT_NODES eq 0) or (&EM_REPORT_NODES eq PREDECESSOR))
24023     +        %then %let varlist=1;
24024     +        %else %let varlist=0;
24026     +    %if %substr(%upcase(%sysfunc(strip(&nodeid))), 1, 7) eq MDLCOMP
24027     +        %then %let varlist = 0;
24029     +    /*--- 3. beginning section of a node report ---*/
24031     +    /* 3.1 force page break at the beginning of each node */
24033     +    /* sample output of a beginning section
24034     +        -----------------------------------
24035     +        -  SAS Enterprise Miner Report    -
24036     +        -                                 -
24037     +        -  Node=Regression                -
24038     +        -  Summary                        -
24039     +        -                                 -
24040     +        -  Node id = Reg                  -
24041     +        -  Node label = Regression        -
24042     +        -  Meta Path = Ids => Part => Reg -
24043     +        -  Notes =                        -
24044     +        -----------------------------------*/
24046     +    ods &EM_REPORT_FORMAT startpage=now;
24048     +    ods &EM_REPORT_FORMAT text=" ";
24049     +    %if "&EM_REPORT_TITLE" ne ""
24050     +        %then %do; ods &EM_REPORT_FORMAT text= "&EM_REPORT_TITLE"; %end;
24051     +        %else %do; ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
24053     +    ods &EM_REPORT_FORMAT text=" ";
24054     +    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text)))";
24055     +    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_summary_title, NOQUOTE))";
24057     +    data _null_ ;
24058     +        file print;
24059     +        put " ";
24060     +        %let note = %sysfunc(sasmsg(sashelp.dmine, rpt_rptnodeid_vlabel,   NOQUOTE, &nodeid));                         put "&note";
24061     +        %let note = %sysfunc(sasmsg(sashelp.dmine, rpt_rptnodelbl_vlabel,  NOQUOTE, %nrbquote(&em_report_node_text))); put "&note";
24062     +        %let note = %sysfunc(sasmsg(sashelp.dmine, rpt_rptmetapath_vlabel, NOQUOTE, &print_path));                     put "&note";
24063     +        %let note = %sysfunc(sasmsg(sashelp.dmine, rpt_rptnotes_vlabel,    NOQUOTE));                                  put "&note";
24064     +        put " ";
24065     +    run;
24067     +    %if "&notesfile" ne "" %then %do;
24068     +        filename x "&notesfile" encoding='utf-8' NOBOM;
24069     +        data _null_;
24070     +            length string $1000;
24071     +            file PRINT;
24072     +            fid = fopen('x');
24073     +            do while (^fread(fid));
24074     +                rc= fget(fid, string, frlen(fid));
24075     +                string = tranwrd(string, "'", "''");
24076     +                if string eq '' then string = ' ';
24077     +                put string;
24078     +            end;
24079     +            fid = fclose(fid);
24080     +            put " ";
24081     +        run;
24082     +        filename x;
24083     +    %end;
24085     +    /*--- 4. property table of a node report ---*/
24086     +    %EM_REPORT_PROPERTIES(catalog=&em_report_lib..&nodeid, dsname=properties);
24088     +    /*--- 5. datasource table of a node report ---*/
24089     +    %if &varlist eq 1 and %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_NODEID._EMTMETADEFAULT)) %then %do;
24090     +        %EM_REPORT_DATASOURCE;
24091     +    %end;
24093     +    /*--- 6. varlist table of a node report ---*/
24094     +    %EM_REPORT_VARS(varlist=&varlist) ;
24096     +    /* --- 7. the itemized output of EMREPORT TLFs ---*/
24098     +    /* 7.1 get number of items */
24099     +    proc sql noprint;
24100     +        select max(ID) into: numitems from &em_report_lib..&nodeid._emreport;
24101     +    quit;
24103     +    /* 7.2 define and initialize global KEYs */
24104     +    proc sql noprint;
24105     +        select count(distinct key) into :allnumkeys
24106     +            from &em_report_lib..&nodeid._emreport;
24107     +        select distinct key into :allnamekey1-:allnamekey%left(&allnumkeys)
24108     +            from &em_report_lib..&nodeid._emreport;
24109     +    quit;
24111     +    %do i = 1 %to &allnumkeys;
24112     +        %global EM_REPORT_KEY_&&&allnamekey&i;
24113     +        %let EM_REPORT_KEY_&&&allnamekey&i = ;
24114     +    %end;
24115     +    %global EM_REPORT_KEY_YREF EM_REPORT_KEY_XREF EM_REPORT_KEY_Y EM_REPORT_KEY_Y2 EM_REPORT_KEY_X
24116     +            EM_REPORT_KEY_LATTICEY EM_REPORT_KEY_LATTICEX EM_REPORT_KEY_WHERE EM_REPORT_KEY_SUBGROUP
24117     +            EM_REPORT_KEY_FREQUENCY EM_REPORT_KEY_GROUP EM_REPORT_KEY_Y2REF EM_REPORT_KEY_LATTICETYPE
24118     +            EM_REPORT_KEY_ORIENTATION
24119     +    ;
24120     +    %let EM_REPORT_KEY_AUTODISPLAY = N;
24121     +    %let EM_REPORT_KEY_XREF        = ;
24122     +    %let EM_REPORT_KEY_YREF        = ;
24123     +    %let EM_REPORT_KEY_Y2REF       = ;
24124     +    %let EM_REPORT_KEY_X           = ;
24125     +    %let EM_REPORT_KEY_Y           = ;
24126     +    %let EM_REPORT_KEY_Y2          = ;
24127     +    %let EM_REPORT_KEY_LATTICEX    = ;
24128     +    %let EM_REPORT_KEY_LATTICEY    = ;
24129     +    %let EM_REPORT_KEY_WHERE       = ;
24130     +    %let EM_REPORT_KEY_SUBGROUP    = ;
24131     +    %let EM_REPORT_KEY_FREQUENCY   = ;
24132     +    %let EM_REPORT_KEY_GROUP       = ;
24133     +    %let EM_REPORT_KEY_LATTICETYPE = ;
24134     +    %let EM_REPORT_KEY_ORIENTATION = ;
24136     +    /* 7.3 loop over items in the EM_REPORT dataset */
24138     +    %do index = 1 %to &numitems ;
24140     +        /* 7.3.1 initialize all key macro variables for each item */
24142     +        %do i = 1 %to &allnumkeys;
24143     +            %let EM_REPORT_KEY_&&&allnamekey&i = ;
24144     +        %end;
24145     +        %let EM_REPORT_KEY_AUTODISPLAY = N;
24146     +        %let EM_REPORT_KEY_WHERE       = ;
24147     +        %let EM_REPORT_KEY_WHERECLAUSE = ;
24148     +        %let EM_REPORT_TTL1            = ;
24149     +        %let EM_REPORT_TTL2            = ;
24150     +        %let EM_REPORT_TTL3            = ;
24151     +        %let EM_REPORT_KEY_XREF        = ;
24152     +        %let EM_REPORT_KEY_YREF        = ;
24153     +        %let EM_REPORT_KEY_Y2REF       = ;
24154     +        %let EM_REPORT_KEY_X           = ;
24155     +        %let EM_REPORT_KEY_Y           = ;
24156     +        %let EM_REPORT_KEY_Y2          = ;
24157     +        %let EM_REPORT_KEY_LATTICEX    = ;
24158     +        %let EM_REPORT_KEY_LATTICEY    = ;
24159     +        %let EM_REPORT_KEY_SUBGROUP    = ;
24160     +        %let EM_REPORT_KEY_FREQUENCY   = ;
24161     +        %let EM_REPORT_KEY_GROUP       = ;
24162     +        %let EM_REPORT_KEY_LATTICETYPE = ;
24163     +        %let EM_REPORT_KEY_ORIENTATION = ;
24165     +        %let item_skip_code = 1;
24167     +        data _null_;
24168     +            set &em_report_lib..&nodeid._emreport(where=(id eq &index));
24169     +            call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
24170     +        run;
24172     +        %if "&EM_REPORT_KEY_VIEWTYPE" eq "MULTIPLESCATTER"
24173     +            %then %let EM_REPORT_KEY_VIEWTYPE = SCATTER;
24175     +        /* special treatment for EM_REPORT_KEY_Y in overlaid line plot */
24176     +        %if "&EM_REPORT_KEY_VIEWTYPE" eq "PLOT" or "&EM_REPORT_KEY_VIEWTYPE" eq "SCATTER"
24177     +            or "&EM_REPORT_KEY_VIEWTYPE" eq "LINEPLOT"
24178     +            or "&EM_REPORT_KEY_LATTICETYPE" eq "LINEPLOT" or "&EM_REPORT_KEY_LATTICETYPE" eq "PLOT"
24179     +        %then %do;
24180     +            proc sql noprint;
24181     +                select distinct value into :EM_REPORT_KEY_Y separated by ' '
24182     +                    from &em_report_lib..&nodeid._emreport(where=(id eq &index))
24183     +                    where upcase(key) eq "Y";
24184     +            quit;
24185     +        %end;
24187     +        %put ==&INDEX : Viewtype = &EM_REPORT_KEY_VIEWTYPE &EM_REPORT_KEY_DESCRIPTION ;
24189     +        /* 7.3.2 set EM_REPORT_KEY_WHERE as EM_REPORT_KEY_WHERECLAUSE */
24191     +        %if "&EM_REPORT_KEY_WHERECLAUSE" ne "" and "&EM_REPORT_KEY_WHERE" eq ""
24192     +        %then %do;
24193     +            %let EM_REPORT_KEY_WHERE = %str(&EM_REPORT_KEY_WHERECLAUSE);
24194     +        %end;
24195     +        %else %if "&EM_REPORT_KEY_WHERECLAUSE" eq "" and "&EM_REPORT_KEY_WHERE" ne ""
24196     +        %then %do;
24197     +            %let EM_REPORT_KEY_WHERE = %str(&EM_REPORT_KEY_WHERE);
24198     +        %end;
24199     +        %else %do;
24200     +            %let EM_REPORT_KEY_WHERE = ;
24201     +        %end;
24203     +        %if "&EM_REPORT_KEY_WHERE" ne "" %then %do;
24204     +            %let EM_REPORT_KEY_WHERECLAUSE = %str((where=(&EM_REPORT_KEY_WHERE)));
24205     +        %end;
24207     +        /* 7.3.3 skip this TLF item if the source data set does not exist */
24208     +        %if not %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_KEY_FILE)) %then %do;
24209     +            %let item_skip_code = 0;
24210     +        %end;
24212     +        /* 7.3.4 skip the TLF item as documented in the previous version of the macro */
24213     +        /*       or just print the TLF item as documented, or use special macros      */
24215     +        data _null_;
24216     +            format type $100. desc $200.;
24217     +            type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
24218     +            desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
24220     +            if  (type in ('SCATTER')   and desc in ('STATPLOT' 'RULEPATHITEM' 'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN'))
24221     +             or (type in ('PLOT')      and desc in ('SEASON' 'TREND' 'CORRSTAT' 'DECOMP'))
24222     +             or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 'CROSSCCFMAP' 'CROSSCCFNORMMAP'))
24223     +             or (type in ('BAR')       and desc in ('VIP' 'ABSESTIMATE' 'ABSSTDESTIMATE' 'PRINCOEFFPLOT'))
24224     +             or (type in ('LATTICE')   and desc in ('ESTIMATEGRID' 'ASSESSRANKGRID' 'CORRPLOT'))
24225     +                then call symput('item_skip_code','2');
24227     +            /* ASSESSRANKGRID : content handled in %EM_REPORT_PLOT - from old macro comments*/
24228     +            /* CORRPLOT: empty macro report_corrplot in old macro */
24230     +            if  (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR'))
24231     +             or (type in ('BAR')       and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT'))
24232     +             or (type in ('LATTICE')   and desc in ('CHIPLOT' 'WORTH'))
24233     +                then call symput('item_skip_code','3');
24235     +            if (type in ('PLOT')    and desc in ('ASSESSRANKOVERLAY'))
24236     +                then call symput('item_skip_code','4');
24237     +            if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY'))
24238     +                then call symput('item_skip_code','5');
24240     +            if (type in ('PLOT') and desc in ('EVENTPLOT'))
24241     +                then call symput('item_skip_code','6');
24243     +            if (type in ('LATTICE') and desc in ('CLASSSTAT'))
24244     +                then call symput('EM_REPORT_KEY_VIEWTYPE','DATA');
24246     +            if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST'))
24247     +                then call symput('item_skip_code','7');
24248     +            if (type in ('LATTICE') and desc in ('SCOREDIST'))
24249     +                then call symput('item_skip_code','8');
24250     +            if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY'))
24251     +                then call symput('item_skip_code','9');
24253     +            if (type in ('PLOT') and desc in ('HPDMASSESS'))
24254     +                then call symput('item_skip_code','10');
24256     +            if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 'TSDISTANCEMAP'))
24257     +                then call symput('item_skip_code','11');
24259     +        run;
24261     +        /* 7.3.5 */
24263     +        %EM_REPORT_GTT;
24265     +        /********** actions by item_skip_code ***********************************/
24267     +        %if &item_skip_code eq 2 %then %do;
24268     +            /* TLF is skipped for these types of reports */
24269     +        %end;
24270     +        %else
24271     +        %if &item_skip_code eq 3 %then %do;
24272     +            %if (("&EM_REPORT_KEY_AUTODISPLAY" eq "Y") OR ("&EM_REPORT_SHOWALL" eq "Y")) %then %do;
24273     +                /* just a print */
24274     +                title1 "&EM_REPORT_TTL1";
24275     +                title2 "&EM_REPORT_TTL2";
24276     +                title3 "&EM_REPORT_TTL3";
24277     +                ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text))) %sysfunc(sasmsg(sashelp.dmine, views_descriptions_&em_report_key_description, NOQUOTE))";
24278     +                proc print data=&EM_REPORT_LIB..&EM_REPORT_KEY_FILE noobs label contents='';
24279     +                run;
24280     +            %end;
24281     +        %end;
24282     +        %else
24283     +        %if &item_skip_code eq 4 %then %do;
24284     +            %EM_REPORT_EMRANK(pdat=&em_report_lib..&EM_REPORT_KEY_FILE,lattice=no);
24285     +        %end;
24286     +        %else
24287     +        %if &item_skip_code eq 5 %then %do;
24288     +            %EM_REPORT_EMRANK(pdat=&em_report_lib..&EM_REPORT_KEY_FILE,lattice=yes);
24289     +        %end;
24290     +        %else
24291     +        %if &item_skip_code eq 6 %then %do;
24292     +            %EM_REPORT_EVENTPLOT;
24293     +        %end;
24294     +        %else
24295     +        %if &item_skip_code eq 7 %then %do;
24296     +            %if %substr(%upcase(%sysfunc(strip(&nodeid))),1,7) ne MDLCOMP or &EM_REPORT_NODES eq PREDECESSOR %then %do;
24297     +                %EM_REPORT_SCOREDIST;
24298     +            %end;
24299     +        %end;
24300     +        %else
24301     +        %if &item_skip_code eq 8 %then %do;
24302     +            %EM_REPORT_SCOREDIST2;
24303     +        %end;
24304     +        %else
24305     +        %if &item_skip_code eq 9 %then %do;
24306     +            %if (("&EM_REPORT_KEY_AUTODISPLAY" eq "Y") OR ("&EM_REPORT_SHOWALL" eq "Y")) %then %do;
24307     +                %EM_REPORT_CLASSIFYTAB;
24308     +            %end;
24309     +        %end;
24310     +        %else
24311     +        %if &item_skip_code eq 10 %then %do;
24312     +            %if (("&EM_REPORT_KEY_AUTODISPLAY" eq "Y") OR ("&EM_REPORT_SHOWALL" eq "Y")) %then %do;
24313     +                %EM_REPORT_HPDMASSESS;
24314     +            %end;
24315     +        %end;
24316     +        %else
24317     +        %if &item_skip_code eq 11 %then %do;
24318     +                %EM_REPORT_HEATMAPTEMPLATE;
24319     +        %end;
24322     +        %else
24324     +        %if &item_skip_code eq 1 %then %do;
24326     +            /*--- process the viewtypes ---*/
24327     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "PLOT"           %then %do; %EM_REPORT_SGPLOT(type=PLOT);     %end;
24328     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "LINEPLOT"       %then %do; %EM_REPORT_SGPLOT(type=LINEPLOT); %end;
24329     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "SCATTER"        %then %do; %EM_REPORT_SGPLOT(type=SCATTER);  %end;
24330     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "BAR"            %then %do; %EM_REPORT_SGPLOT(type=BARPLOT);  %end;
24331     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "HISTOGRAM"      %then %do; %EM_REPORT_SGPLOT(type=HISTOGRAM);%end;
24332     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "PIE"            %then %do; %EM_REPORT_SGSILK(type=PIE);      %end;
24333     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "DTREE"          %then %do; %EM_REPORT_SGSILK(type=DTREE);    %end;
24334     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "ICICLE"         %then %do; %EM_REPORT_SGSILK(type=ICICLE);   %end;
24335     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "DENDROGRAM"     %then %do; %EM_REPORT_DENDROGRAM;            %end;
24336     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "ITERATIONPLOT"  %then %do; %EM_REPORT_ITERATIONPLOT;         %end;
24337     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "DATA"           %then %do; %EM_REPORT_DATA(maxobs=100);      %end;
24338     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "MULTIPLEY2PLOT" %then %do; %EM_REPORT_MULTIPLY2PLOT;         %end;
24340     +            %if "&EM_REPORT_KEY_VIEWTYPE" eq "LATTICE" %then %do;
24341     +                ods graphics / height=9in;
24342     +                %EM_REPORT_LATTICE;
24343     +                ods graphics / height=4.5in;
24344     +            %end;
24345     +        %end;
24347     +        title1; title2; title3; title4; title5;
24348     +    %end;
24350     +%node_skip:
24352     +%mend EM_REPORT_NODE;
24354     +/*---------------------------------------------------------*/
24355     +/*---- create xml file containing pfd information      ----*/
24356     +/*---------------------------------------------------------*/
24357     +%macro em_report_workspace_xml();
24359     +    %global EM_REPORT_LIB;
24361     +    %EM_REGISTER(key=PFD, type=FILE, extension=XML);
24362     +    %EM_GETNAME(key=PFD,  type=FILE, extension=XML);
24364     +    filename x "&EM_USER_PFD" encoding="utf-8" NOBOM;
24366     +    /* Node information */
24367     +    data _null_;
24368     +        file x;
24369     +        set &EM_REPORT_LIB..EM_NODEID;
24370     +        length string $400;
24372     +        /* check for invalid characters in the node label */
24373     +        label = tranwrd(label, %nrstr("&"), %nrstr("&amp;"));
24374     +        label = tranwrd(label, %nrstr("<"), %nrstr("&lt;"));
24375     +        label = tranwrd(label, %nrstr(">"), %nrstr("&gt;"));
24376     +        label = tranwrd(label, %nrstr("'"), %nrstr("&#39;"));
24377     +        label = tranwrd(label, %nrstr('"'), %nrstr('&quot;'));
24379     +        string = cats('<PFDNode x="',X,'" y="',Y,'" id="',NODEID,'" title="',LABEL,'"></PFDNode>');
24380     +        put string;
24381     +    run;
24383     +    /* Link information */
24384     +    data _null_;
24385     +        file x mod;
24386     +        set &EM_REPORT_LIB..EM_DGRAPH(where=(TO ne ""));
24387     +        length string $400;
24389     +        string = cats("<PFDLink id='",_N_,"' fromId='",FROM,"' toId='",TO,"'></PFDLink>");
24390     +        put string;
24391     +    run;
24393     +    filename x;
24395     +%mend em_report_workspace_xml;
24397     +/*---------------------------------------------------------*/
24398     +/* "chop" xml definitions, wrapping if over 256 bytes      */
24399     +/*---------------------------------------------------------*/
24400     +%macro em_report_makeds(XMLfile,outds);
24402     +    %local rc fileref fid max reclen;
24403     +    %let fileref=xmlref;
24404     +    %if %sysfunc(fexist(xmlref)) %then %put ERROR: Fileref XMLREF in use.;
24405     +    %else %do;
24406     +      %let rc=%sysfunc(filename(fileref,&XMLfile,,encoding='utf-8')));
24407     +      %if %sysfunc(fileref(xmlref)) ne 0 %then %put %sysfunc(sysmsg());
24408     +      %else %do;
24409     +        %let fid=%sysfunc(fopen(xmlref,i,5000,v));
24410     +        %let max=0;
24411     +         %if %sysfunc(fread(&fid)) = 0 %then %do;
24412     +            %let reclen=%sysfunc(frlen(&fid));
24413     +            %let max=&reclen;
24414     +            %do %while(%sysfunc(fread(&fid)) = 0);
24415     +               %let reclen=%sysfunc(frlen(&fid));
24416     +               %if &reclen > &max %then %let max=&reclen;
24417     +            %end;
24418     +        %end;
24419     +        %let rc=%sysfunc(fclose(&fid));
24421     +        data &outds(keep=PFDItemList);
24422     +          infile xmlref recfm=v  lrecl=&max  length=len;
24423     +          length PFDItemList $256;
24424     +          input record $varying5000. len;
24425     +          recordNum+1;
24426     +          do start=1 to len by 256 ;
24427     +             end=start+256;
24428     +             *put recordNum= start= end=;
24429     +             PFDItemList=substr(record,start,end);
24430     +             output;
24431     +          end;
24432     +        run;
24433     +        %let rc=%sysfunc(filename(fileref));
24434     +      %end;
24435     +    %end;
24436     +%mend em_report_makeds;
24438     +/*---------------------------------------------------------*/
24439     +/* render a workspace plot in the ODS destination          */
24440     +/*---------------------------------------------------------*/
24441     +%macro em_report_workspace_render;
24443     +     /*--- determine if flow was run in batch (ie all x/y coordinates are -1) ---*/
24444     +     %let runBatch = 0;
24445     +     data temp;
24446     +        set &EM_REPORT_LIB..EM_NODEID;
24447     +        if X = -1 AND Y= - 1 then delete;
24448     +     run;
24449     +     %let dsid = %sysfunc(open(work.temp));
24450     +     %let nobs = %sysfunc(ATTRN(&dsid, NOBS));
24451     +     %if &dsid %then %let dsid = %sysfunc(close(&dsid));
24453     +     %if &nobs le 1 %then %let runBatch = 1;
24455     +      title1; title2; title3;
24457     +      %let temp = %nrbquote(%sysfunc(PATHNAME(&em_report_lib)));
24458     +      %let path = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
24459     +      %let view = view.xml;
24460     +      %let viewfile = %nrbquote(&path&em_dsep&EM_NODEID&em_dsep&view);
24461     +      %let datax = data.xml;
24462     +      %let dataxfile = %nrbquote(&path&em_dsep&EM_NODEID&em_dsep&datax);
24464     +      /* make sgDataModel*/
24465     +      ods &EM_REPORT_FORMAT exclude SGRENDER; /* disable sgrender output to PDF */
24466     +      ods tagsets.gtl file="&viewfile" data="&dataxfile" encoding="utf-8" style=styles.em_style;
24467     +      proc sgrender data=work.xmldata template=dataonly;
24468     +          dynamic var1="PFDItemList";
24469     +      run;
24471     +      /* pfd event code */
24472     +      %if "&EM_REPORT_TITLE" ne "" %then %do;
24473     +          ods tagsets.gtl event=LayoutRegion(start)
24474     +              options(title ="&EM_REPORT_TITLE"
24475     +                      title2="%sysfunc(sasmsg(sashelp.dmine, rpt_processflow_title, NOQUOTE))");
24476     +      %end;
24477     +      %else %do;
24478     +          ods tagsets.gtl event=LayoutRegion(start)
24479     +              options(title ="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"
24480     +                      title2="%sysfunc(sasmsg(sashelp.dmine, rpt_processflow_title, NOQUOTE))");
24481     +      %end;
24483     +      %if &runBatch ne 1 %then %do;
24484     +          ods tagsets.gtl event=PFD options(pfditems="PFDItemList" id="pfdView1");
24485     +          ods tagsets.gtl event=LayoutRegion(finish);
24486     +          ods tagsets.gtl close;
24487     +          ods &EM_REPORT_FORMAT select ALL ; /* re-enable sgrender output */
24488     +          ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_processflow_title, NOQUOTE))";
24489     +          proc sgsilk viewxml="&viewfile" dataxml="&dataxfile"; run;
24490     +      %end;
24491     +      title1; title2; title3;
24493     +%mend em_report_workspace_render;
24496     +%macro EM_REPORT_RESULTS(
24497     +    path=,              /*-- output location             ---*/
24498     +    lib=,               /*-- em workspace library        ---*/
24499     +    startnodeid=,       /*-- starting nodeid             ---*/
24500     +    showall=,           /*-- show all content Y or N     ---*/
24501     +    nodes=,             /*-- nodes to generate report on ---*/
24502     +    format=,            /*-- format for generated report ---*/
24503     +    style=              /*--- style for ODS statement    ---*/
24504     +) ;
24506     +    data _null_ ;
24507     +        call symput('report_date', strip(put(date(),     NLDATE.)));
24508     +        call symput('report_time', %nrbquote(strip(put(datetime(), NLTIME.))));
24509     +    run;
24511     +    data _null_;
24512     +        file print ;
24513     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_user_note, NOQUOTE, &sysuserid))" ;
24514     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_date_note, NOQUOTE, %nrbquote(&report_time), &report_date))" ;
24515     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_project_note, NOQUOTE, &EM_REPORT_PROJECT_TEXT)) " ;
24516     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_diagram_note, NOQUOTE, %nrstr(&EM_REPORT_DIAGRAM_TEXT)))" / ;
24517     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_startnode_note, NOQUOTE, &startnodeid))";
24518     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodelabel_note, NOQUOTE, %nrbquote(&em_report_node_text)))" ;
24519     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodes_note, NOQUOTE, &EM_REPORT_NODES))" ;
24520     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_showall_note, NOQUOTE, &EM_REPORT_SHOWALL))" / ;
24521     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_format_note, NOQUOTE, &EM_REPORT_FORMAT))" ;
24522     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_graphics_note, NOQUOTE, &EM_REPORT_GDEVICE))" ;
24523     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_style_note, NOQUOTE, &STYLE))" / ;
24524     +    run ;
24526     +    /* add report view to results */
24527     +    %EM_GETNAME(key=REPORT, type=FILE, extension=&FORMAT);
24528     +    %EM_REPORT(KEY=REPORT, BLOCK=MODEL, VIEWTYPE = FILEVIEWER, autodisplay=Y, DESCRIPTION=CUSTOM);
24530     +%mend;
24532     +%macro EM_REPORT_CREATERESULTS();
24534     +    %EM_GETNAME(key=ODSRESULTS, type=FILE, extension=htm, folder=ODS);
24535     +    filename x "&EM_FILE_ODSRESULTS" nobom;
24537     +    ods listing close;
24538     +    ods html3 file=X encoding = "utf-8" style=styles.em_style;
24539     +    ods html3 text=" ";
24540     +    %if "&EM_REPORT_TITLE" ne "" %then %do;
24541     +        ods html3 text="&EM_REPORT_TITLE";
24542     +    %end;
24543     +    %else %do;
24544     +        ods html3 text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))";
24545     +    %end;
24547     +    data _null_ ;
24548     +        call symput('report_date', strip(put(date(),     NLDATE.)));
24549     +        call symput('report_time', %nrbquote(strip(put(datetime(), NLTIME.))));
24550     +    run;
24552     +    data _null_;
24553     +        file print ;
24554     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_user_note, NOQUOTE, &sysuserid))" ;
24555     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_date_note, NOQUOTE, %nrbquote(&report_time), &report_date))" ;
24556     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_project_note, NOQUOTE, &EM_REPORT_PROJECT_TEXT)) " ;
24557     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_diagram_note, NOQUOTE, %nrstr(&EM_REPORT_DIAGRAM_TEXT)))" / ;
24558     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_startnode_note, NOQUOTE, &startnodeid))";
24559     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodelabel_note, NOQUOTE, %nrbquote(&em_report_node_text)))" ;
24560     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_nodes_note, NOQUOTE, &EM_REPORT_NODES))" ;
24561     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_showall_note, NOQUOTE, &showall))" / ;
24562     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_format_note, NOQUOTE, &EM_REPORT_FORMAT))" ;
24563     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_graphics_note, NOQUOTE, &EM_REPORT_GDEVICE))" ;
24564     +        put "%sysfunc(sasmsg(sashelp.dmine, rpt_style_note, NOQUOTE, &EM_REPORT_STYLE))" / ;
24565     +    run ;
24567     +    filename x;
24568     +    ods listing;
24569     +    ods html3 close;
24571     +    %EM_REPORT(KEY=ODSRESULTS, BLOCK=MODEL, VIEWTYPE = HTMLVIEW);
24573     +%mend EM_REPORT_CREATERESULTS;
NOTE: %INCLUDE (level 1) ending.
MPRINT(TRAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(TRAIN):   filename temp catalog 'sashelp.emrpm.em_modelprops.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMRPM.EM_MODELPROPS.SOURCE.
24574     +%macro em_modelprops(dgmid=, modelid=, output=%nrbquote(work.properties));
24575     +  %global mdl_emwsid mdl_modelid;
24576     +  %do;
24577     +     %let mdl_emwsid  = &dgmid;
24578     +     %let mdl_modelid = &modelid;
24579     +     %let mdl_output  = &output;
24580     +
24581     +     dm "afa c=sashelp.emrpm.modelprops.scl";
24582     +  %end;
24583     +%mend em_modelprops;
NOTE: %INCLUDE (level 1) ending.
MPRINT(TRAIN):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(SETPROPERTIES):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   filename pdffile "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\REPORT.pdf";
MPRINT(TRAIN):   filename pdffile;
NOTE: Fileref PDFFILE has been deassigned.
MPRINT(TRAIN):  ;
MPRINT(TRAIN):   filename rtffile "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\REPORT.rtf";
MPRINT(TRAIN):   filename rtffile;
NOTE: Fileref RTFFILE has been deassigned.
MPRINT(EM_REPORT_CREATE):   filename temp catalog 'sashelp.emutil.reporter_plotmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_PLOTMACROS.SOURCE.
24584     +/*---------------------------------------------------------*/
24585     + * Utility functions:;
MPRINT(EM_REPORT_CREATE):   * Utility functions:;
24586     +/*---------------------------------------------------------*/
24588     +%macro EM_REPORT_GTT();
24590     +    %global EM_REPORT_TTL1 EM_REPORT_TTL2 EM_REPORT_TTL3 EM_REPORT_TITLE EM_REPORT_NODE_TEXT EM_REPORT_KEY_description;
24592     +    %if "&EM_REPORT_TITLE" ne "" %then %do;
24593     +        %let EM_REPORT_ttl1 = &EM_REPORT_TITLE;
24594     +    %end;
24595     +    %else %do;
24596     +        %let EM_REPORT_ttl1 = %sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE));
24597     +    %end;
24599     +    %let EM_REPORT_ttl2 = %sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text)));
24601     +    %let msg0 = views_descriptions_&em_report_key_description;
24602     +    %let msg1 = %sysfunc(sasmsg(sashelp.dmine, views_descriptions_&em_report_key_description, NOQUOTE));
24603     +    %if %sysfunc(exist(sashelp.tmine)) %then %do;
24604     +        %let msg2 = %sysfunc(sasmsg(sashelp.tmine, views_descriptions_&em_report_key_description, NOQUOTE));
24605     +    %end;
24606     +    %else %do;
24607     +        %let msg2=views_descriptions_&em_report_key_description;
24608     +    %end;
24610     +    %if "%sysfunc(strip(%nrstr(&msg1)))" ne "%sysfunc(strip(&msg0))"
24611     +    %then %do;
24612     +        %let EM_REPORT_ttl3 = %sysfunc(sasmsg(sashelp.dmine, views_descriptions_&em_report_key_description, NOQUOTE));
24613     +    %end;
24614     +    %else %if "%sysfunc(strip(%nrstr(&msg2)))" ne "%sysfunc(strip(&msg0))"
24615     +    %then %do;
24616     +        %if %sysfunc(exist(sashelp.tmine)) %then %do;
24617     +            %let EM_REPORT_ttl3 = %sysfunc(sasmsg(sashelp.tmine, views_descriptions_&em_report_key_description, NOQUOTE));
24618     +        %end;
24619     +    %end;
24620     +    %else %do;
24621     +        %let EM_REPORT_ttl3 = &em_report_key_description;
24622     +    %end;
24624     +    /*--- special labels ---*/
24626     +    %if "&EM_REPORT_KEY_DESCRIPTION" eq "REGEFFECTS"
24627     +    %then %do;
24628     +       %let EM_REPORT_ttl3 = %sysfunc(sasmsg(sashelp.dmine, rpt_regressionmod_title, NOQUOTE));
24629     +    %end;
24631     +%mend;
24633     +/*---------------------------------------------------------*/
24634     +* Plots created by SGPLOT: LINEPLOT, SCATTER, PLOT, BAR;
MPRINT(EM_REPORT_CREATE):   * Plots created by SGPLOT: LINEPLOT, SCATTER, PLOT, BAR;
24635     +/*---------------------------------------------------------*/
24637     +%macro EM_REPORT_SGPLOT(type=);
24639     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
24641     +    title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
24643     +    /*--- EM_REPORT_SGPLOT 1. identify the plot statement ---*/
24645     +    %let axisstmt = xaxis;
24647     +    %if &type eq LINEPLOT   %then %let plotstmt = series;
24648     +    %if &type eq PLOT       %then %let plotstmt = series;
24649     +    %if &type eq SCATTER    %then %let plotstmt = scatter;
24650     +    %if &type eq BARPLOT    %then %let plotstmt = vbar;
24651     +    %if &type eq HISTOGRAM  %then %let plotstmt = histogram;
24653     +    %if "&plotstmt" eq "vbar" and "%upcase(&EM_REPORT_KEY_ORIENTATION)" eq "HORIZONTAL"
24654     +    %then %do;
24655     +        %let plotstmt = hbar;
24656     +        %let axisstmt = yaxis;
24657     +    %end;
24658     +    /*--- EM_REPORT_SGPLOT 2. options for plot statements ---*/
24660     +    %let plotopt = ;
24662     +    %if &type eq LINEPLOT %then %do;
24663     +        %if "&EM_REPORT_KEY_GROUP" ne "" %then %let plotopt = %str(&plotopt group = &EM_REPORT_KEY_GROUP);
24664     +    %end;
24665     +    %else %if &type eq PLOT %then %do;
24666     +        %if "&EM_REPORT_KEY_GROUP" ne "" %then %let plotopt = %str(&plotopt group = &EM_REPORT_KEY_GROUP);
24667     +    %end;
24668     +    %else %if &type eq SCATTER %then %do;
24669     +        %if "&EM_REPORT_KEY_GROUP" ne ""     %then %let plotopt = %str(&plotopt group = &EM_REPORT_KEY_GROUP);
24670     +        %if "&EM_REPORT_KEY_FREQUENCY" ne "" %then %let plotopt = %str(&plotopt freq=&EM_REPORT_KEY_FREQUENCY);
24671     +        %let plotopt = %str(&plotopt markerattrs=(symbol=squarefilled));
24672     +    %end;
24673     +    %else %if &type eq BARPLOT %then %do;
24674     +        %let plotopt = missing;
24675     +        %if "&EM_REPORT_KEY_FREQUENCY" ne "" %then %let plotopt = %str(&plotopt response=&EM_REPORT_KEY_FREQUENCY);
24676     +        %if "&EM_REPORT_KEY_SUBGROUP" ne ""  %then %let plotopt = %str(&plotopt group=&EM_REPORT_KEY_SUBGROUP);
24677     +        %else %if "&EM_REPORT_KEY_GROUP" ne ""  %then %let plotopt = %str(&plotopt group=&EM_REPORT_KEY_GROUP);
24678     +    %end;
24679     +    %else %if &type eq HISTOGRAM %then %do;
24680     +        %if "&EM_REPORT_KEY_FREQUENCY" ne "" %then %let plotopt = %str(&plotopt freq=&EM_REPORT_KEY_FREQUENCY);
24681     +        %if "&EM_REPORT_KEY_SUBGROUP" ne ""  %then %let plotopt = %str(&plotopt group=&EM_REPORT_KEY_SUBGROUP);
24682     +/*        %if "&EM_REPORT_KEY_Y" ne ""         %then %let plotopt = %str(&plotopt group=&EM_REPORT_KEY_Y);*/
24683     +    %end;
24685     +    %if "&plotopt" ne "" %then %let plotopt = %str(/ &plotopt);
24687     +    /*--- EM_REPORT_SGPLOT 3. handle _ANYNUMERIC_ or BYSET---*/
24689     +    %if &type eq PLOT and "&EM_REPORT_KEY_Y" eq "_ANYNUMERIC_" %then %do;
24691     +         proc contents data=&pdat out=_rptsgplot_temp(keep=name type) noprint;
24692     +         run;
24694     +         /*** For _ANYNUMERIC_, get the first numeric variable that is not X ***/
24695     +         data _null_;
24696     +            set _rptsgplot_temp(where=(type eq 1 and upcase(name) ne "%upcase(&EM_REPORT_KEY_X)"));
24697     +            if _n_=1 then call symput("EM_REPORT_KEY_Y", strip(name));
24698     +         run;
24699     +    %end;
24701     +    /*--- EM_REPORT_SGPLOT 4. call SGPLOT ---*/
24703     +    ods graphics / discretemax=5000;
24705     +    proc sgplot data=&pdat.&EM_REPORT_KEY_WHERECLAUSE;
24707     +        %if "&EM_REPORT_KEY_Y" ne "" and "&type" ne "BARPLOT" and "&type" ne "HISTOGRAM" %then %do;
24708     +            %let i = 1;
24709     +            %do %while ("%scan(&EM_REPORT_KEY_Y,&i,' ')" ne "");
24710     +                %let thisY=%scan(&EM_REPORT_KEY_Y,&i,' ');
24711     +                %let i = %eval(&i+1);
24712     +                &plotstmt
24713     +                    x = &EM_REPORT_KEY_X  y = &thisY  &plotopt
24714     +                ;
24715     +            %end;
24716     +        %end;
24717     +        %if "&EM_REPORT_KEY_Y2" ne "" and "&type" ne "BARPLOT" and "&type" ne "HISTOGRAM" %then %do;
24718     +            &plotstmt
24719     +                x = &EM_REPORT_KEY_X  y = &EM_REPORT_KEY_Y2  &plotopt
24720     +            ;
24721     +        %end;
24722     +        %if "&type" eq "BARPLOT" %then %do;
24723     +            &plotstmt
24724     +                &EM_REPORT_KEY_X &plotopt;
24725     +            &axisstmt
24726     +                type=discrete /* discreteorder=data */
24727     +                %if "&EM_REPORT_KEY_DESCRIPTION" eq "REGEFFECTS" %then %do; display=(NOVALUES NOTICKS) %end;
24728     +            ;
24729     +        %end;
24730     +        %if "&type" eq "HISTOGRAM" and "&EM_REPORT_KEY_FREQUENCY" ne "" %then %do;
24731     +            &plotstmt
24732     +                &EM_REPORT_KEY_X &plotopt;
24733     +            &axisstmt
24734     +                %if "&EM_REPORT_KEY_DESCRIPTION" eq "REGEFFECTS" %then %do; display=(NOVALUES NOTICKS) %end;
24735     +            ;
24736     +        %end;
24737     +        %if "&type" eq "HISTOGRAM" and "&EM_REPORT_KEY_FREQUENCY" eq "" %then %do;
24738     +            &plotstmt &EM_REPORT_KEY_X;
24739     +        %end;
24740     +        %if "&type" ne "BARPLOT" and "&type" ne "HISTOGRAM" %then %do;
24741     +            %if "&EM_REPORT_KEY_YREF" ne "" %then %do; refline &EM_REPORT_KEY_YREF / axis = y; %end;
24742     +            %if "&EM_REPORT_KEY_XREF" ne "" %then %do; refline &EM_REPORT_KEY_XREF / axis = x; %end;
24743     +        %end;
24745     +        keylegend;
24746     +    run; quit;
24748     +    %if "&EM_REPORT_KEY_DESCRIPTION" eq "REGEFFECTS" %then %do;
24749     +        %EM_REPORT_makeMultiColumn(dat=&pdat.&EM_REPORT_KEY_WHERECLAUSE, vars=effectnum variable classlevel coefficient tvalue pvalue, split=2);
24750     +    %end;
24752     +    ods graphics / discretemax=100;
24753     +    title1; title2; title3;
24755     +%mend EM_REPORT_SGPLOT;
24757     +/*---------------------------------------------------------*/
24758     +* Plots rendered by SGSILK: DTREE, ICICLE, PIE;
MPRINT(EM_REPORT_CREATE):   * Plots rendered by SGSILK: DTREE, ICICLE, PIE;
24759     +/*---------------------------------------------------------*/
24761     +%macro EM_REPORT_SGSILK(type=);
24763     +    %local temp path view datax viewfile dataxfile;
24764     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
24766     +    /*--- EM_REPORT_SGSILK 1. define the XML files for view and data ---*/
24768     +    %let temp      = %nrbquote(%sysfunc(PATHNAME(&EM_REPORT_LIB)));
24769     +    %let path      = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
24770     +    %let view      = view.xml;
24771     +    %let datax     = data.xml;
24772     +    %let viewfile  = %nrbquote(&path&em_dsep&EM_NODEID&em_dsep&view);
24773     +    %let dataxfile = %nrbquote(&path&em_dsep&EM_NODEID&em_dsep&datax);
24775     +    /*--- EM_REPORT_SGSILK 2. Call SGRENGER and setup GTL tagsets---*/
24777     +    ods &EM_REPORT_FORMAT exclude SGRENDER; /* disable sgrender output to PDF */
24778     +    ods tagsets.gtl file="&viewfile" data="&dataxfile" encoding="utf-8" style=styles.em_style;
24780     +    %if &type eq DTREE %then %do;   /****** DTREE ******/
24782     +        proc sgrender data=&pdat.&EM_REPORT_KEY_WHERECLAUSE template=dataonly;
24783     +            dynamic var1 = "&EM_REPORT_KEY_ID";
24784     +            dynamic var2 = "&EM_REPORT_KEY_PARENT";
24785     +            dynamic var3 = "&EM_REPORT_KEY_NODETEXT";
24786     +            dynamic var4 = "&EM_REPORT_KEY_NODECOLOR";
24787     +            dynamic var5 = "&EM_REPORT_KEY_ABOVETEXT";
24788     +            dynamic var6 = "&EM_REPORT_KEY_BELOWTEXT";
24789     +            dynamic var7 = "&EM_REPORT_KEY_LINKWIDTH";
24790     +        run;
24792     +        ods tagsets.gtl event=LayoutRegion(start)
24793     +            options(title="&EM_REPORT_TTL1" title2="&EM_REPORT_TTL2" title3="&EM_REPORT_TTL3");
24795     +        ods tagsets.gtl event=DecisionTree
24796     +            options( id        = "&EM_REPORT_KEY_ID"
24797     +                     parent    = "&EM_REPORT_KEY_PARENT"
24798     +                     nodetext  = "&EM_REPORT_KEY_NODETEXT"
24799     +                     abovetext = "&EM_REPORT_KEY_ABOVETEXT"
24800     +                     belowtext = "&EM_REPORT_KEY_BELOWTEXT"
24801     +                     linkwidth = "&EM_REPORT_KEY_LINKWIDTH"
24802     +                     nodecolor = "&EM_REPORT_KEY_NODECOLOR" );
24804     +    %end;
24805     +    %else %if &type eq ICICLE %then %do;      /****** ICICLE ******/
24807     +        proc sgrender data=&pdat.&EM_REPORT_KEY_WHERECLAUSE template=dataonly;
24808     +            dynamic var1="&EM_REPORT_KEY_ID";
24809     +            dynamic var2="&EM_REPORT_KEY_PARENT";
24810     +            dynamic var3="&EM_REPORT_KEY_NODECOLOR";
24811     +            dynamic var4="&EM_REPORT_KEY_NODESIZE";
24812     +        run;
24814     +        ods tagsets.gtl event=LayoutRegion(start)
24815     +            options(title="&EM_REPORT_TTL1" title2="&EM_REPORT_TTL2" title3="&EM_REPORT_TTL3");
24817     +        ods tagsets.gtl event=Icicle
24818     +            options( id        = "&EM_REPORT_KEY_ID"
24819     +                     parent    = "&EM_REPORT_KEY_PARENT"
24820     +                     nodecolor = "&EM_REPORT_KEY_NODECOLOR"
24821     +                     nodesize  = "&EM_REPORT_KEY_NODESIZE" );
24823     +    %end;
24824     +    %else %if &type eq PIE %then %do;      /****** PIE ******/
24826     +        proc sgrender data=&pdat.&EM_REPORT_KEY_WHERECLAUSE template=dataonly;
24827     +            dynamic var1="&EM_REPORT_KEY_X" var2="&EM_REPORT_KEY_Y";
24828     +        run; quit;
24830     +        ods tagsets.gtl event=LayoutRegion(start)
24831     +            options(title="&EM_REPORT_TTL1" title2="&EM_REPORT_TTL2" title3="&EM_REPORT_TTL3");
24833     +        ods tagsets.gtl event=Pie
24834     +            options( category = "&EM_REPORT_KEY_X"
24835     +                     response = "&EM_REPORT_KEY_Y"
24836     +                     pielabeldisplay = "1"         );
24838     +    %end;
24840     +    ods tagsets.gtl event=LayoutRegion(finish);
24841     +    ods tagsets.gtl close;
24843     +    /*--- EM_REPORT_SGSILK 3. Call SGSILK to render the graph---*/
24845     +    ods &EM_REPORT_FORMAT select ALL; /* re-enable sgrender output */
24846     +    proc sgsilk viewxml="&viewfile" dataxml="&dataxfile"; run;
24847     +    title1; title2; title3;
24848     +%mend;
24850     +/*---------------------------------------------------------*/
24851     +* DENDROGRAM <- PROC TREE;
MPRINT(EM_REPORT_CREATE):   * DENDROGRAM <- PROC TREE;
24852     +/*---------------------------------------------------------*/
24854     +%macro EM_REPORT_DENDROGRAM() ;
24856     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
24858     +    *goptions device=&EM_REPORT_GDEVICE ;
24859     +    goptions reset=all device=&EM_REPORT_GDEVICE;
24861     +    title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
24863     +    axis1 minor=none label=(height = &EM_REPORT_TEXT_SIZE pt ) ;
24864     +    axis2 minor=none label=(height = &EM_REPORT_TEXT_SIZE pt angle=90 ) ;
24866     +    ods &EM_REPORT_FORMAT select ALL; /* re-enable sgrender output */
24868     +    proc tree data=&pdat.&EM_REPORT_KEY_WHERECLAUSE horizontal haxis=axis1 vaxis=axis2;
24869     +        height &EM_REPORT_KEY_HEIGHT;
24870     +        name   &EM_REPORT_KEY_NAME;
24871     +        parent &EM_REPORT_KEY_PARENT;
24872     +    run; quit;
24874     +    title1; title2; title3 ;
24875     +    axis1; axis2;
24877     +%mend EM_REPORT_DENDROGRAM;
24879     +/*---------------------------------------------------------*/
24880     +* EVENTPLOT <- SGSCATTER;
MPRINT(EM_REPORT_CREATE):   * EVENTPLOT <- SGSCATTER;
24881     +/*---------------------------------------------------------*/
24883     +%macro EM_REPORT_EVENTPLOT();
24885     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
24887     +    title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
24889     +    proc sgscatter data=&pdat.&EM_REPORT_KEY_WHERECLAUSE;
24890     +        plot (_cumulative_event_count_ _marginal_event_rate_ _event_count_ _cumulative_event_rate_)
24891     +            * _cutoff_score_ / group=datarole join=() markerattrs=(size=0) grid;
24892     +    run; quit;
24894     +    title1; title2; title3 ;
24896     +%mend EM_REPORT_EVENTPLOT;
24898     +/*---------------------------------------------------------*/
24899     + * EM_REPORT_ITERATIONPLOT ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_ITERATIONPLOT ;
24900     + * create plots of iterations: neural, stepwise, tree, etc..;
MPRINT(EM_REPORT_CREATE):   * create plots of iterations: neural, stepwise, tree, etc..;
24901     +/*---------------------------------------------------------*/
24903     +%macro EM_REPORT_ITERATIONPLOT();
24905     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
24906     +    %let X    = &EM_REPORT_KEY_X;
24908     +    title1 "&EM_REPORT_TTL1";
24909     +    title2 "&EM_REPORT_TTL2";
24910     +    title3 "%sysfunc(sasmsg(sashelp.dmine, rpt_mdliterationplot_title, NOQUOTE))";
24912     +    %local _misc_ _vmisc_ _ase_ _vase_ ;
24913     +    data _null_ ;
24914     +        set &pdat(obs=2) end=eof;
24915     +        if eof then do ;
24916     +            call symput('_ase_',_ase_);
24917     +            call symput('_vase_',_vase_);
24918     +            call symput('_misc_',_misc_);
24919     +            call symput('_vmisc_',_vmisc_);
24920     +        end;
24921     +    run;
24923     +    %let dsid = %sysfunc(open(&pdat));
24924     +    %if &dsid %then %do;
24925     +        %let _ase_ = %sysfunc(VARNUM(&dsid, _ase_));
24926     +        %let _vase_ = %sysfunc(VARNUM(&dsid, _vase_));
24927     +        %let _misc_ = %sysfunc(VARNUM(&dsid, _misc_));
24928     +        %let _vmisc_ = %sysfunc(VARNUM(&dsid, _vmisc_));
24929     +    %end;
24930     +    %if &dsid %then %let dsid = %sysfunc(close(&dsid));
24932     +    %if "&_ase_"   eq "." %then %let _ase_   = 0;
24933     +    %if "&_vase_"  eq "." %then %let _vase_  = 0;
24934     +    %if "&_misc_"  eq "." %then %let _misc_  = 0;
24935     +    %if "&_vmisc_" eq "." %then %let _vmisc_ = 0;
24937     +    %put &_ase_ &_vase_ &_misc_ &_vmisc_;
24939     +    %if &_vmisc_ ne 0 %then %do;
24940     +        proc sql noprint;
24941     +            select count(*) into :nonMiss_vmisc from &pdat where _vmisc_ ne .;
24942     +        quit;
24943     +    %end;
24944     +    %else %do;
24945     +        %let nonMiss_vmisc = 0;
24946     +    %end;
24948     +    ods path(prepend) work.templat(update);
24949     +    proc template;
24950     +        define statgraph em.IterationPlot / store=work.templat;
24951     +            begingraph;
24952     +                entrytitle "&EM_REPORT_TTL1";
24953     +                entrytitle "&EM_REPORT_TTL2";
24954     +                entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_mdliterationplot_title, NOQUOTE))";
24956     +              layout lattice / order=columnmajor rows=1 rowdatarange=data columngutter=10;
24958     +                %if &_ase_ ne 0 or &_vase_ ne 0 %then %do;
24959     +                    layout overlay / cycleattrs=true
24960     +                        xaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel, NOQUOTE))")
24961     +                        yaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, stat_ase_vlabel, NOQUOTE))");
24962     +                        %if &_ase_ ne 0 %then %do ;
24963     +                            seriesplot x=&X y=_ASE_ /  markerattrs=(size=0) display=all name='train'
24964     +                                legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_roletrain_value, NOQUOTE))";
24965     +                        %end;
24966     +                        %if &_vase_  ne 0 %then %do ;
24967     +                            seriesplot x=&X y=_VASE_ /  markerattrs=(size=0) display=all name='validate'
24968     +                                legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_rolevalidate_value, NOQUOTE))";
24969     +                        %end;
24970     +                        %if "&EM_REPORT_KEY_XREF" ne "" %then %do; referenceline x=&EM_REPORT_KEY_XREF; %end;
24971     +                    endlayout;
24972     +                %end;
24974     +                %if &_misc_ ne 0 or ( &_vmisc_ ne 0 and &nonMiss_vmisc ne 0) %then %do;
24975     +                    layout overlay / cycleattrs=true
24976     +                        xaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_iteration_vlabel, NOQUOTE))")
24977     +                        yaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_misclassrate_vlabel, NOQUOTE))");
24978     +                        %if &_misc_ ne 0 %then %do;
24979     +                            seriesplot x=&X y=_MISC_ /  markerattrs=(size=0) display=all;
24980     +                        %end;
24981     +                        %if &_vmisc_  ne 0 %then %do ;
24982     +                            seriesplot x=&X y=_VMISC_ /  markerattrs=(size=0) display=all;
24983     +                        %end;
24984     +                        %if "&EM_REPORT_KEY_XREF" ne "" %then %do; referenceline x=&EM_REPORT_KEY_XREF; %end;
24985     +                    endlayout;
24986     +                %end;
24988     +                sidebar /  align=bottom;
24989     +                    layout overlay;
24990     +                        discretelegend 'train' 'validate' / down=1 order=columnmajor;
24991     +                    endlayout;
24992     +                endsidebar;
24993     +              endlayout;
24994     +            endgraph;
24995     +        end;
24996     +    run;
24998     +    proc sort data=&pdat.&EM_REPORT_KEY_WHERECLAUSE out=_tmprpt_iterdat;
24999     +        by &X;
25000     +    run;
25002     +    proc sgrender data=_tmprpt_iterdat template='em.IterationPlot';
25003     +    run;
25004     +    title1; title2; title3;
25006     +    proc delete data=_tmprpt_iterdat; run;
25008     +%mend  EM_REPORT_ITERATIONPLOT;
25010     +/* for hpdmassess */
25012     +%macro EM_REPORT_HPDMASSESS();
25014     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
25016     +    title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
25018     +    /*--- EM_REPORT_HPDMASSESS 1. idenfity the variables     ---*/
25020     +    %let dsid = %sysfunc(open(&pdat));
25021     +    %if &dsid %then %do;
25022     +        %let lift     = %sysfunc(VARNUM(&dsid, lift));
25023     +        %let c_lift   = %sysfunc(VARNUM(&dsid, c_lift));
25024     +        %let mean1    = %sysfunc(VARNUM(&dsid, target_mean));
25025     +        %let mean2    = %sysfunc(VARNUM(&dsid, predicted_mean));
25026     +        %let datarole = %sysfunc(VARNUM(&dsid, &EM_REPORT_KEY_GROUP));
25027     +    %end;
25028     +    %if &dsid %then %let dsid = %sysfunc(close(&dsid));
25030     +    %if "&lift"     eq "."  %then %let lift     = 0;
25031     +    %if "&c_lift"   eq "."  %then %let c_lift   = 0;
25032     +    %if "&mean1"    eq "."  %then %let mean1   = 0;
25033     +    %if "&mean2"    eq "."  %then %let mean2   = 0;
25034     +    %if "&datarole" eq "."  %then %let datarole = 0;
25036     +    %put &lift &c_lift &mean1 &mean2 &datarole;
25038     +    %if &lift ne 0 and &c_lift ne 0 %then %do;
25039     +        %let hpdm_plot = 1;
25040     +        %let hpdm_var1 = lift;
25041     +        %let hpdm_var2 = c_lift;
25042     +        %let hpdm_lbl1 = assmt_lift_vlabel;
25043     +        %let hpdm_lbl2 = assmt_liftc_vlabel;
25044     +    %end;
25045     +    %else
25046     +    %if &mean1 ne 0 and &mean2 ne 0
25047     +    %then %do;
25048     +        %let hpdm_plot = 1;
25049     +        %let hpdm_var1 = target_mean;
25050     +        %let hpdm_var2 = predicted_mean;
25051     +        %let hpdm_lbl1 = rpt_rpttargetmean_vlabel;
25052     +        %let hpdm_lbl2 = rpt_rptpredmean_vlabel;
25053     +    %end;
25054     +    %else %do;
25055     +        %let hpdm_plot = 0;
25056     +        %let hpdm_var1 = ;
25057     +        %let hpdm_var2 = ;
25058     +        %let hpdm_lbl1 = ;
25059     +        %let hpdm_lbl2 = ;
25060     +    %end;
25061     +    /*--- EM_REPORT_HPDMASSESS 2. call SGPANEL                ---*/
25063     +    %if &hpdm_plot eq 1 %then %do;
25064     +        ods path(prepend) work.templat(update);
25065     +        proc template;
25066     +            define statgraph em.hpdmassess / store=work.templat;
25067     +                begingraph;
25068     +                    entrytitle "&EM_REPORT_TTL1";
25069     +                    entrytitle "&EM_REPORT_TTL2";
25070     +                    entrytitle "&EM_REPORT_TTL3";
25072     +                    layout lattice / order=columnmajor rows=1 rowdatarange=data columngutter=10;
25074     +                        %if &datarole ne 0 %then %do;
25075     +                            layout overlay / cycleattrs=true
25076     +                                             xaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, NOQUOTE))")
25077     +                                             yaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, &hpdm_lbl1, NOQUOTE))")
25078     +                            ;
25079     +                                seriesplot x=&EM_REPORT_KEY_X y=&hpdm_var1 / name='var1' markerattrs=(size=0) display=all group=&EM_REPORT_KEY_GROUP;
25080     +                            endlayout;
25081     +                            layout overlay / cycleattrs=true
25082     +                                             xaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, NOQUOTE))")
25083     +                                             yaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, &hpdm_lbl2, NOQUOTE))")
25084     +                            ;
25085     +                                seriesplot x=&EM_REPORT_KEY_X y=&hpdm_var2 /  markerattrs=(size=0) display=all group=&EM_REPORT_KEY_GROUP;
25086     +                            endlayout;
25087     +                            sidebar /  align = bottom;
25088     +                                layout overlay;
25089     +                                    discretelegend 'var1' / down=1 order=columnmajor;
25090     +                                endlayout;
25091     +                            endsidebar;
25092     +                        %end;
25093     +                        %else %do;
25094     +                            layout overlay / cycleattrs=true
25095     +                                             xaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, rpt_depth_vlabel, NOQUOTE))")
25096     +                                             yaxisopts=(griddisplay=on label="%sysfunc(sasmsg(sashelp.dmine, &hpdm_lbl1, NOQUOTE))")
25097     +                            ;
25098     +                                seriesplot x=&EM_REPORT_KEY_X y=&hpdm_var1 /  markerattrs=(size=0) display=all name='var1'
25099     +                                    legendlabel="%sysfunc(sasmsg(sashelp.dmine, &hpdm_lbl1, NOQUOTE))";
25100     +                                seriesplot x=&EM_REPORT_KEY_X y=&hpdm_var2 /  markerattrs=(size=0) display=all name='var2'
25101     +                                    legendlabel="%sysfunc(sasmsg(sashelp.dmine, &hpdm_lbl2, NOQUOTE))";
25102     +                            endlayout;
25103     +                            sidebar /  align=bottom;
25104     +                                layout overlay;
25105     +                                    discretelegend 'var1' 'var2' / down=1 order=columnmajor;
25106     +                                endlayout;
25107     +                            endsidebar;
25108     +                        %end;
25109     +                    endlayout;
25110     +                endgraph;
25111     +            end;
25112     +        run;
25114     +        proc sgrender data=&pdat.&EM_REPORT_KEY_WHERECLAUSE template='em.hpdmassess'; run;
25115     +    %end;
25117     +    title1; title2; title3;
25119     +%mend EM_REPORT_HPDMASSESS;
25121     +/* for heatmap version of histograms */
25123     +%macro EM_REPORT_HEATMAPTEMPLATE();
25125     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
25127     +    %if "&EM_REPORT_KEY_FREQUENCY" ne "" "&EM_REPORT_KEY_X" ne "" "&EM_REPORT_KEY_Y" ne "" %then %do;
25129     +        title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
25131     +        proc template;
25132     +        define statgraph heatmap;
25133     +        begingraph;
25134     +        entrytitle "&EM_REPORT_TTL1";
25135     +        entrytitle "&EM_REPORT_TTL2";
25136     +        entrytitle "&EM_REPORT_TTL3";
25137     +        layout overlay;
25138     +        heatmapparm x=&EM_REPORT_KEY_X y=&EM_REPORT_KEY_Y colorresponse=&EM_REPORT_KEY_FREQUENCY / name="map" display=all;
25139     +          continuouslegend "map";
25140     +        endlayout;
25141     +        endgraph;
25142     +        end;
25144     +        proc sgrender data=&pdat.&EM_REPORT_KEY_WHERECLAUSE template=heatmap; run;
25146     +    %end;
25148     +    title1; title2; title3;
25150     +%mend EM_REPORT_HEATMAPTEMPLATE;
25153     +/* for assessment plot */
25155     +%macro EM_REPORT_EMRANK(pdat=, lattice=no) ;
25157     +    data _tmp_dat;
25158     +        set &pdat.&EM_REPORT_KEY_WHERECLAUSE;
25159     +    run;
25160     +    %let pdat = _tmp_dat;
25162     +    %let varList = GAIN CAPC LIFTC RESPC _MEANP_ _MINP_ _MAXP_;
25163     +    %let varNum = 7;
25164     +    %let modelVar = model;
25165     +    %do k = 1 %to &varNum;
25166     +        %let thisVar = %scan(&varList,&k,' ');
25167     +        %let var_&thisVar = ;
25168     +    %end;
25170     +/*-----------------------------------------------------------------------------*/
25172     +    proc contents data=&pdat out=_tmp_content(keep=name) noprint;
25173     +    run;
25175     +    %let is_cat = 0;
25176     +    %let has_loop = 0;
25177     +    %let has_where = 0;
25179     +    data _null_;
25180     +        set _tmp_content;
25181     +        name=strip(upcase(name));
25182     +        format _tmp_list $500.;
25183     +        _tmp_list = symget('varList');
25185     +        do k = 1 to &varNum;
25186     +            if name eq scan(_tmp_list,k,' ') then call symput(cats('var_',name),name);
25187     +        end;
25189     +        if name eq '_LOOP_'  then call symput('has_loop','1');
25190     +        if name eq '_WHERE_' then call symput('has_where','1');
25191     +        if name eq 'GAIN'    then call symput('is_cat','1');
25192     +    run;
25194     +    %if &has_loop eq 1 %then %do;
25195     +        %if &has_where eq 1 %then %do;
25196     +            proc sql noprint;
25197     +                select count(*) into :nn1 from &pdat;
25198     +                select count(*) into :nn2 from &pdat where _where_ is missing;
25199     +            quit;
25200     +            %if &nn1 ne &nn2
25201     +                %then %let modelvar = _where_;
25202     +                %else %let modelvar = ;
25203     +        %end;
25204     +        %else %do;
25205     +            %let modelvar = ;
25206     +        %end;
25207     +    %end;
25209     +/*-----------------------------------------------------------------------------*/
25211     +    %if "&lattice" eq "yes" %then %do ;
25213     +        proc sql noprint;
25214     +            select count(distinct datarole)  into :ndataroles from &pdat;
25215     +            select distinct datarole into :drole1-:drole%left(&ndataroles) from &pdat;
25216     +        quit;
25218     +        %do d =1 %to &ndataroles;
25220     +            proc sort data=&pdat(where=(datarole eq "&&&drole&d")) out=_tmp_emrp;
25221     +                by &modelvar decile;
25222     +            run;
25224     +            title1 "&EM_REPORT_TTL1";
25225     +            title2 "&EM_REPORT_TTL2";
25226     +            title3 "%sysfunc(sasmsg(sashelp.dmine, rpt_multiplemdlassess_title, NOQUOTE, &&&drole&d))";
25227     +            %if "&EM_REPORT_KEY_WHERE" ne " " %then %do;
25228     +                title4 "&EM_REPORT_KEY_WHERE";
25229     +            %end;
25231     +            proc sgscatter data=_tmp_emrp;
25232     +                plot
25233     +                    %if &is_cat eq 1 %then %do;
25234     +                        (&var_gain &var_liftc &var_capc &var__meanp_) * decile
25235     +                    %end;
25236     +                    %else %do;
25237     +                        (&var__meanp_ &var__minp_ &var__maxp_) * decile
25238     +                    %end;
25239     +                    / %if &modelvar ne %then %do; group=&modelvar %end;
25240     +                        join=() markerattrs=(size=0) grid
25241     +                ;
25242     +            run; quit;
25243     +            title1; title2; title3; title4;
25244     +        %end;
25245     +    %end;
25246     +    %else %do;
25248     +        proc sort data=&pdat out=_tmp_emrp;
25249     +            by target datarole;
25250     +        run;
25252     +        title1 "&EM_REPORT_TTL1";
25253     +        title2 "&EM_REPORT_TTL2";
25254     +        title3 "%sysfunc(sasmsg(sashelp.dmine, rpt_singlemdlassess_title, NOQUOTE, &em_report_key_where))";
25256     +        %if &is_cat eq 1 %then %do;
25257     +            %if "&var_gain" ne " " %then %do;
25258     +                proc sgpanel data=_tmp_emrp;
25259     +                    panelby datarole;
25260     +                    series x=decile y=gain; series x=decile y=basegain; series x=decile y=bestgain;
25261     +                    rowaxis grid; colaxis grid;
25262     +                run; quit;
25263     +            %end;
25264     +            %if "&var_liftc" ne " " %then %do;
25265     +                proc sgpanel data=_tmp_emrp;
25266     +                    panelby datarole;
25267     +                    series x=decile y=liftc; series x=decile y=baseliftc; series x=decile y=bestliftc;
25268     +                    rowaxis grid; colaxis grid;
25269     +                run; quit;
25270     +            %end;
25271     +            %if "&var_capc" ne " " %then %do;
25272     +                proc sgpanel data=_tmp_emrp;
25273     +                    panelby datarole;
25274     +                    series x=decile y=capc; series x=decile y=basecapc; series x=decile y=bestcapc;
25275     +                    rowaxis grid; colaxis grid;
25276     +                run; quit;
25277     +            %end;
25278     +        %end;
25279     +        %else %do;
25280     +            %if "&var__meanp_" ne " " %then %do ;
25281     +                proc sgpanel data=_tmp_emrp;
25282     +                    panelby datarole;
25283     +                    series x=decile y=_meanp_; series x=decile y=_targetmean_;
25284     +                    rowaxis grid; colaxis grid;
25285     +                run; quit;
25286     +            %end;
25287     +            %if "&var__minp_" ne " " %then %do ;
25288     +                proc sgpanel data=_tmp_emrp;
25289     +                    panelby datarole;
25290     +                    series x=decile y=_minp_; series x=decile y=_targetmin_;
25291     +                    rowaxis grid; colaxis grid;
25292     +                run; quit;
25293     +            %end;
25294     +            %if "&var__maxp_" ne " " %then %do ;
25295     +                proc sgpanel data=_tmp_emrp;
25296     +                    panelby datarole;
25297     +                    series x=decile y=_maxp_; series x=decile y=_targetmax_;
25298     +                    rowaxis grid; colaxis grid;
25299     +                run; quit;
25300     +            %end;
25301     +        %end;
25303     +        title1; title2; title3;
25304     +    %end;
25306     +%mend;
25309     +%macro EM_REPORT_LATTICE();
25311     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
25313     +    %let numx = 1;
25314     +    %let numy = 1;
25316     +    proc sql noprint;
25317     +        %if "&EM_REPORT_KEY_LATTICEX" ne "" %then %do;
25318     +            select count(distinct &EM_REPORT_KEY_LATTICEX) into :numx from &pdat.&EM_REPORT_KEY_WHERECLAUSE;
25319     +        %end;
25320     +        %if "&EM_REPORT_KEY_LATTICEY" ne "" %then %do;
25321     +            select count(distinct &EM_REPORT_KEY_LATTICEY) into :numy from &pdat.&EM_REPORT_KEY_WHERECLAUSE;
25322     +        %end;
25323     +    quit;
25325     +    %let numrows=&numy;
25326     +    %let numcols=&numx;
25327     +    %let totalnum = %eval(&numx * &numy);
25329     +    %if &totalnum gt 6 %then %do;
25330     +        %if &totalnum le 18 %then %let numcols=3;
25331     +        %else %if &totalnum le 24 %then %let numcols=4;
25332     +        %else %if &totalnum le 30 %then %let numcols=5;
25333     +        %else %let numcols=3;
25334     +    %end;
25336     +    %if &totalnum gt 6 %then %do;
25337     +        %let numrows  = %sysevalf(&totalnum / &numcols);
25338     +        %let numrows  = %sysfunc(ceil(&numrows));
25339     +        %if &numrows ge 6 %then %let numrows=6;
25340     +    %end;
25342     +    %if (("&EM_REPORT_KEY_LATTICETYPE" eq "BAR") OR ("&EM_REPORT_KEY_LATTICETYPE" eq "HISTOGRAM"))
25343     +    %then %do;
25345     +        title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
25346     +        %if "&em_report_key_whereclause" ne "" %then %do ;
25347     +            title4 "%sysfunc(sasmsg(sashelp.dmine, rpt_text_title, NOQUOTE, &em_report_key_where))";
25348     +        %end;
25350     +        proc sgpanel data=&pdat.&EM_REPORT_KEY_WHERECLAUSE;
25351     +            panelby
25352     +                %if "&EM_REPORT_KEY_LATTICEY" ne "" %then %do; &EM_REPORT_KEY_LATTICEY %end;
25353     +                %if "&EM_REPORT_KEY_LATTICEX" ne "" %then %do; &EM_REPORT_KEY_LATTICEX %end;
25354     +              /
25355     +                %if &totalnum ge 5 %then %do; columns=&numcols rows=&numrows /*novarname*/ %end;
25356     +                uniscale=column
25357     +            ;
25358     +            /* originally using frequency so keeping this here; */
25359     +            /* eventrate plot in binning sets y var as response so added y as well */
25361     +            %if "&EM_REPORT_KEY_LATTICETYPE" eq "HISTOGRAM" %then %do;
25362     +                %if "&EM_REPORT_KEY_FREQUENCY" eq "" %then %do;
25363     +                    histogram &EM_REPORT_KEY_X;
25364     +                %end;
25365     +                %else %do;
25366     +                    histogram &EM_REPORT_KEY_X / freq = &EM_REPORT_KEY_FREQUENCY;
25367     +                %end;
25368     +            %end;
25369     +            %else %do;
25370     +                %if "%upcase(&EM_REPORT_KEY_ORIENTATION)" eq "HORIZONTAL"
25371     +                %then %do; hbar %end;
25372     +                %else %do; vbar %end;
25373     +                    &EM_REPORT_KEY_X /
25374     +                    %if "&EM_REPORT_KEY_FREQUENCY" ne "" %then %do; response=&EM_REPORT_KEY_FREQUENCY %end;
25375     +                    %if "&EM_REPORT_KEY_Y" ne ""         %then %do; response=&EM_REPORT_KEY_Y         %end;
25376     +                    %if "&EM_REPORT_KEY_SUBGROUP" ne ""  %then %do; group=&EM_REPORT_KEY_SUBGROUP     %end;
25377     +                        %else %if "&EM_REPORT_KEY_GROUP" ne ""  %then %do; group=&EM_REPORT_KEY_GROUP %end;
25378     +                ;
25379     +            %end;
25380     +            colaxis grid fitpolicy=rotatethin /* discreteorder=data */;
25381     +            rowaxis grid ;
25382     +        run; quit;
25384     +        /* special treatments */
25385     +        %if "&EM_REPORT_KEY_DESCRIPTION" eq "EVENTRATE" %then %do ;
25386     +            %if (("&EM_REPORT_KEY_AUTODISPLAY" eq "Y") OR ("&EM_REPORT_SHOWALL" eq "Y")) %then %do;
25388     +                %let wtevexist=0;
25389     +                %let dsid = %sysfunc(open(work.pdl));
25390     +                %if &dsid %then %do;
25391     +                    %let wtevexist = %sysfunc(VARNUM(&dsid, wtev));
25392     +                %end;
25393     +                %if &dsid %then %let dsid = %sysfunc(close(&dsid));
25395     +                %EM_REPORT_TABLETEXT(subtitle=views_descriptions_&em_report_key_description);
25397     +                proc print data=&pdat.&EM_REPORT_KEY_WHERECLAUSE noobs label contents='';
25398     +                    var display_var _label_ _group_ role eventRate
25399     +                        %if &wtevexist ne 0 %then %do; wtev %end;;
25400     +                run;
25401     +            %end;
25402     +        %end;
25403     +    %end;
25404     +    %else %if (("&EM_REPORT_KEY_LATTICETYPE" eq "LINEPLOT") or ("&EM_REPORT_KEY_LATTICETYPE" eq "PLOT")) %then %do;
25406     +        proc sort data=&pdat.&EM_REPORT_KEY_WHERECLAUSE out=_tmp_pdl;
25407     +            by
25408     +                %if "&EM_REPORT_KEY_LATTICEY" ne "" %then %do; &EM_REPORT_KEY_LATTICEY %end;
25409     +                %if "&EM_REPORT_KEY_LATTICEX" ne "" %then %do; &EM_REPORT_KEY_LATTICEX %end;
25410     +            ;
25411     +        run;
25413     +        title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
25414     +        %if "&em_report_key_whereclause" ne "" %then %do ;
25415     +            title4 "%sysfunc(sasmsg(sashelp.dmine, rpt_text_title, NOQUOTE, &em_report_key_where))";
25416     +        %end;
25418     +        proc sgpanel data=_tmp_pdl;
25419     +            panelby
25420     +                %if "&EM_REPORT_KEY_LATTICEY" ne "" %then %do; &EM_REPORT_KEY_LATTICEY %end;
25421     +                %if "&EM_REPORT_KEY_LATTICEX" ne "" %then %do; &EM_REPORT_KEY_LATTICEX %end;
25422     +              /
25423     +                %if &totalnum ge 5 %then %do; columns=&numcols rows=&numrows /*novarname*/ %end;
25424     +                uniscale=column
25425     +            ;
25426     +            %let i = 1;
25427     +            %do %while ("%scan(&EM_REPORT_KEY_Y,&i,' ')" ne "");
25428     +                %let thisY=%scan(&EM_REPORT_KEY_Y,&i,' ');
25429     +                %let i = %eval(&i+1);
25430     +                series x=&EM_REPORT_KEY_X y=&thisY
25431     +                    %if "&EM_REPORT_KEY_GROUP" ne "" %then %do; / group=&EM_REPORT_KEY_GROUP %end;
25432     +                ;
25433     +            %end;
25434     +            %if "&EM_REPORT_KEY_Y2" ne "" %then %do;
25435     +                series x=&EM_REPORT_KEY_X y=&EM_REPORT_KEY_Y2
25436     +                    %if "&EM_REPORT_KEY_GROUP" ne "" %then %do; / group=&EM_REPORT_KEY_GROUP %end;
25437     +                ;
25438     +            %end;
25439     +            %if "&EM_REPORT_KEY_YREF" ne "" %then %do; refline &EM_REPORT_KEY_YREF / axis = y; %end;
25440     +            %if "&EM_REPORT_KEY_XREF" ne "" %then %do; refline &EM_REPORT_KEY_XREF / axis = x; %end;
25441     +            colaxis grid fitpolicy=rotatethin;
25442     +            rowaxis grid;
25443     +        run; quit;
25444     +    %end;
25446     +%mend EM_REPORT_LATTICE;
25448     +/*---------------------------------------------------------*/
25449     + * EM_REPORT_SCOREDIST2 ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_SCOREDIST2 ;
25450     + *     Score Distribution 2;
MPRINT(EM_REPORT_CREATE):   * Score Distribution 2;
25451     +/*---------------------------------------------------------*/
25453     +%macro EM_REPORT_SCOREDIST2() ;
25455     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
25457     +    title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
25459     +    proc sgpanel data=&pdat.&EM_REPORT_KEY_WHERECLAUSE;
25460     +        panelby
25461     +            %if "&EM_REPORT_KEY_LATTICEY" ne "" %then %do; &EM_REPORT_KEY_LATTICEY %end;
25462     +            %if "&EM_REPORT_KEY_LATTICEX" ne "" %then %do; &EM_REPORT_KEY_LATTICEX %end;
25463     +          / rows=1 uniscale=row layout=lattice
25464     +        ;
25465     +        vbar &EM_REPORT_KEY_X
25466     +            %if "&EM_REPORT_KEY_FREQUENCY" ne "" %then %do; / response=count %end;
25467     +        ;
25468     +        colaxis fitpolicy=rotatethin;
25469     +    run; quit;
25471     +%mend EM_REPORT_SCOREDIST2;
25473     +/*---------------------------------------------------------*/
25474     + * EM_REPORT_SCOREDIST ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_SCOREDIST ;
25475     + *     Score Distribution ;
MPRINT(EM_REPORT_CREATE):   * Score Distribution ;
25476     +/*---------------------------------------------------------*/
25478     +%macro EM_REPORT_SG4SCOREDIST(y1=,y2=,str1=,str2=,rowstr=);
25479     +    proc sgpanel data=_tmpdat;
25480     +        panelby datarole;
25481     +        %if "&y1" ne " " %then %do;
25482     +            series x=score y=&y1 / legendlabel="%sysfunc(sasmsg(sashelp.dmine, &str1, NOQUOTE))";
25483     +        %end;
25484     +        %if "&y2" ne " " %then %do;
25485     +            series x=score y=&y2 / legendlabel="%sysfunc(sasmsg(sashelp.dmine, &str2, NOQUOTE))";
25486     +        %end;
25487     +        rowaxis grid label="%sysfunc(sasmsg(sashelp.dmine, &rowstr, NOQUOTE))";
25488     +        colaxis grid;
25489     +    run; quit;
25490     +%mend;
25492     +%macro EM_REPORT_SCOREDIST(data=) ;
25494     +    data _tmp_scoredist;
25495     +        set &EM_REPORT_LIB..&EM_REPORT_KEY_FILE.&EM_REPORT_KEY_WHERECLAUSE;
25496     +    run;
25498     +    proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum name) noprint;
25499     +    run;
25501     +    /*--------------------------------------------------------------------------*/
25503     +    %let var_targetMean = ;
25504     +    %let var_targetMax = ;
25505     +    %let var_targetMin = ;
25506     +    %let is_cat = 0;
25507     +    %let modeldescnum = 0;
25508     +    %let loopnum = 0;
25509     +    %let has_where = 0;
25510     +    %let has_target = 0;
25512     +    data _null_;
25513     +        set _tmp_content;
25514     +        name=strip(upcase(name));
25515     +        if name eq 'MODELDESCRIPTION'   then call symput('modeldescnum',  put(varnum,6.));
25516     +        if name eq '_LOOP_'             then call symput('loopnum',       put(varnum,6.));
25517     +        if name eq '_WHERE_'            then call symput('has_where',     '1');
25518     +        if name eq '_TARGET_'           then call symput('has_target',    '1');
25519     +        if name eq '_TARGETMEAN_'       then call symput('var_targetMean',name);
25520     +        if name eq '_TARGETMAX_'        then call symput('var_targetMax', name);
25521     +        if name eq '_TARGETMIN_'        then call symput('var_targetMin', name);
25522     +        if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat',        '1');
25523     +    run;
25525     +    /*--------------------------------------------------------------------------*/
25527     +    %if (&modeldescnum eq 0) and (&loopnum eq 0) %then %do;
25528     +        %let modelvar = ;
25529     +        %let nmodels = 1;
25530     +        %let modeldat1 = _tmp_scoredist;
25531     +    %end;
25532     +    %else %do;
25534     +        %if &loopnum gt 0
25535     +            %then %do;
25536     +                proc sql noprint;
25537     +                    select count(*) into :nn1 from _tmp_scoredist;
25538     +                    select count(*) into :nn2 from _tmp_scoredist where _where_ is missing;
25539     +                quit;
25540     +                %if &nn1 ne &nn2
25541     +                    %then %let modelvar = _where_;
25542     +                    %else %let modelvar = target;
25543     +            %end;
25544     +            %else %let modelvar = model;
25546     +        %let nmodels = 1;
25547     +        proc sql noprint;
25548     +            select count(distinct &modelvar) into :nmodels from _tmp_scoredist;
25549     +            select distinct &modelvar into :cond1-:cond%left(&nmodels) from _tmp_scoredist;
25550     +        quit;
25552     +        %do d = 1 %to &nmodels;
25553     +            %let modeldat&d = %str(_tmp_scoredist(where=(&modelvar eq "&&&cond&d")));
25554     +        %end;
25555     +    %end;
25557     +    /* --- loop through all models or _where_ for plots---*/
25559     +    %do d = 1 %to &nmodels;
25561     +        proc sort data=&&&modeldat&d out=_tmpdat;
25562     +            by &modelvar target datarole;
25563     +        run;
25565     +        title1 "&EM_REPORT_TTL1";
25566     +        title2 "&EM_REPORT_TTL2";
25567     +        title3 "%sysfunc(sasmsg(sashelp.dmine, rpt_scoredistsingle_title, NOQUOTE, &em_report_key_where))";
25568     +        %if &nmodels gt 1 %then %do; title4 "&&&cond&d"; %end;
25570     +        %if &is_cat eq 1 %then %do;
25571     +            %EM_REPORT_SG4SCOREDIST(y1=percentageofevents, y2=percentageofnonevents,
25572     +                str1=rpt_events_vlabel, str2=rpt_nonevents_vlabel, rowstr=assmt_percent_vlabel);
25573     +            %EM_REPORT_SG4SCOREDIST(y1=cumulativepercentageofevents, y2=cumulativepercentageofnonevents,
25574     +                str1=rpt_events_vlabel, str2=rpt_nonevents_vlabel, rowstr=assmt_percentC_vlabel);
25575     +        %end;
25576     +        %else %do;
25577     +            %EM_REPORT_SG4SCOREDIST(y1=_meanP_, y2=&var_targetMean,
25578     +                str1=rpt_predicted_vlabel, str2=rpt_target_vlabel, rowstr=rpt_mean_vlabel);
25579     +            %EM_REPORT_SG4SCOREDIST(y1=_meanP_, y2=&var_targetMax,
25580     +                str1=rpt_predicted_vlabel, str2=rpt_target_vlabel, rowstr=rpt_maximum_vlabel);
25581     +        %end;
25583     +        proc delete data=_tmpdat; run;
25584     +        title1; title2; title3; title4;
25585     +    %end;
25587     +    /* --- loop through all models or _where_ for prints ---*/
25589     +    %do d = 1 %to &nmodels;
25591     +        proc sort data=&&&modeldat&d out=_tmpdat;
25592     +            by &modelvar target datarole;
25593     +        run;
25595     +        title1; title2; title3;
25596     +        %EM_REPORT_TABLETEXT(subtitle=rpt_scoredistnone_title);
25598     +        %if &is_cat eq 1 %then %do;
25599     +            proc print data=_tmpdat noobs label contents='';
25600     +                by &modelvar target datarole;
25601     +                var p_label numberofevents percentageofevents percentageofnonevents
25602     +                    cumulativepercentageofevents cumulativepercentageofnonevents ;
25603     +            run;
25604     +        %end;
25605     +        %else %do;
25606     +            proc print data=_tmpdat noobs label contents='';
25607     +                by &modelvar target datarole;
25608     +                var p_label _meanP_ _maxP_ _minP_ &var_targetMean &var_targetMax &var_targetMin;
25609     +            run;
25610     +        %end;
25611     +    %end;
25613     +%mend EM_REPORT_SCOREDIST;
25616     +%macro EM_REPORT_MULTIPLY2PLOT;
25618     +    data _tmp_dat;
25619     +        set &EM_REPORT_LIB..&EM_REPORT_KEY_FILE.&EM_REPORT_KEY_WHERECLAUSE;
25620     +    run;
25622     +    proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
25623     +    run;
25625     +    %let has_datarole = 0;
25626     +    data _null_;
25627     +        set _tmp_content;
25628     +        name=strip(upcase(name));
25629     +        if name eq "DATEROLE" then call symput('has_datarole','1');
25630     +    run;
25632     +    %if &has_datarole eq 1 %then %do;
25633     +        proc sql noprint;
25634     +            select count(distinct datarole) into :ndataroles from _tmp_dat;
25635     +            select distinct datarole into :drole1-:drole%left(&ndataroles) from _tmp_dat;
25636     +        quit;
25637     +    %end;
25638     +    %else %do;
25639     +        %let ndataroles = 1;
25640     +    %end;
25642     +    %if &ndataroles gt 1 %then %do;
25643     +        %do d=1 %to &ndataroles ;
25645     +            proc sort data=_tmp_dat(where=(datarole eq "&&&drole&d")) out=_tmp_empd;
25646     +                by datarole &EM_REPORT_KEY_X;
25647     +            run;
25649     +            title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
25650     +            title4 "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitlethree_title, NOQUOTE, &&&drole&d))";
25652     +            proc sgplot data=_tmp_empd;
25653     +                series x=&EM_REPORT_KEY_X  y=&EM_REPORT_KEY_Y   ;
25654     +                series x=&EM_REPORT_KEY_X  y=&EM_REPORT_KEY_Y2 / y2axis ;
25655     +                %if "&EM_REPORT_KEY_YREF"  ne "" %then %do; refline &EM_REPORT_KEY_YREF  / axis = y;  %end;
25656     +                %if "&EM_REPORT_KEY_Y2REF" ne "" %then %do; refline &EM_REPORT_KEY_Y2REF / axis = y2; %end;
25657     +            run; quit;
25658     +        %end;
25659     +    %end;
25660     +    %else %do;
25661     +        title1 "&EM_REPORT_TTL1"; title2 "&EM_REPORT_TTL2"; title3 "&EM_REPORT_TTL3";
25662     +        proc sgplot data=_tmp_dat;
25663     +            series x=&EM_REPORT_KEY_X  y=&EM_REPORT_KEY_Y   ;
25664     +            series x=&EM_REPORT_KEY_X  y=&EM_REPORT_KEY_Y2 / y2axis ;
25665     +            %if "&EM_REPORT_KEY_YREF"  ne "" %then %do; refline &EM_REPORT_KEY_YREF  / axis = y;  %end;
25666     +            %if "&EM_REPORT_KEY_Y2REF" ne "" %then %do; refline &EM_REPORT_KEY_Y2REF / axis = y2; %end;
25667     +        run; quit;
25668     +    %end;
25670     +    title1; title2; title3; title4;
25672     +%mend EM_REPORT_MULTIPLY2PLOT;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_REPORT_CREATE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_REPORT_CREATE):   filename temp catalog 'sashelp.emutil.reporter_printmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_PRINTMACROS.SOURCE.
25673     +/*---------------------------------------------------------*/
25674     + * EM_REPORT_NODE_TEXT ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_NODE_TEXT ;
25675     + *      return the text label for a given node ;
MPRINT(EM_REPORT_CREATE):   * return the text label for a given node ;
25676     +/*---------------------------------------------------------*/
25678     +%macro EM_REPORT_NODE_TEXT(nodeid);
25679     +    %global EM_REPORT_NODE_TEXT ;
25680     +    %if not %sysfunc(exist(&em_report_lib..EM_NODEID)) %then %goto skip ;
25681     +    data _null_ ;
25682     +        set &em_report_lib..EM_NODEID ;
25683     +        where upcase(strip(nodeid)) eq upcase(strip("&nodeid")) ;
25684     +        call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
25685     +    run;
25686     +    %skip:
25687     +%mend EM_REPORT_NODE_TEXT;
25689     +/*---------------------------------------------------------*/
25690     + * EM_REPORT_TABLETEXT;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_TABLETEXT;
25691     + *      print the ods texts in front of a table;
MPRINT(EM_REPORT_CREATE):   * print the ods texts in front of a table;
25692     +/*---------------------------------------------------------*/
25694     +%macro EM_REPORT_TABLETEXT(subtitle=);
25695     +%if %substr(%upcase(%sysfunc(strip(&subtitle))), 1, 19) eq VIEWS_DESCRIPTIONS_ %then %do;
25696     +    ods &EM_REPORT_FORMAT text=" ";
25697     +    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text)))";
25698     +    %let thisDVD = dmine;
25700     +    %let msg0 = views_descriptions_&em_report_key_description;
25701     +    %let msg1 = %sysfunc(sasmsg(sashelp.dmine, views_descriptions_&em_report_key_description, NOQUOTE));
25702     +    %if %sysfunc(exist(sashelp.tmine)) %then %do;
25703     +        %let msg2 = %sysfunc(sasmsg(sashelp.tmine, views_descriptions_&em_report_key_description, NOQUOTE));
25704     +    %end;
25705     +    %else %do;
25706     +        %let msg2=views_descriptions_&em_report_key_description;
25707     +    %end;
25709     +    %if "%sysfunc(strip(%nrstr(&msg1)))" ne "%sysfunc(strip(&msg0))"
25710     +    %then %do;
25711     +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, views_descriptions_&em_report_key_description, NOQUOTE))";
25712     +    %end;
25713     +    %else %if "%sysfunc(strip(%nrstr(&msg2)))" ne "%sysfunc(strip(&msg0))"
25714     +    %then %do;
25715     +        %if %sysfunc(exist(sashelp.tmine)) %then %do;
25716     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.tmine, views_descriptions_&em_report_key_description, NOQUOTE))";
25717     +            %let thisDVD = tmine;
25718     +        %end;
25719     +    %end;
25720     +    %else %do;
25721     +        ods &EM_REPORT_FORMAT text="&em_report_key_description";
25722     +    %end;
25724     +    ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text))) %sysfunc(sasmsg(sashelp.&thisDVD, &subtitle, NOQUOTE))";
25725     +%end;
25726     +%else %do;
25727     +    %let msg1 = %sysfunc(sasmsg(sashelp.dmine, &subtitle, NOQUOTE));
25728     +    %if %sysfunc(exist(sashelp.tmine)) %then %do;
25729     +        %let msg2 = %sysfunc(sasmsg(sashelp.tmine, &subtitle, NOQUOTE));
25730     +    %end;
25731     +    %else %do;
25732     +        %let msg2=%sysfunc(sasmsg(sashelp.dmine, &subtitle, NOQUOTE));
25733     +    %end;
25735     +    %if "%sysfunc(strip(%nrstr(&msg1)))" ne "%sysfunc(strip(&subtitle))"
25736     +    %then %do;
25737     +        %let thisDVD = dmine;
25738     +    %end;
25739     +    %else %if "%sysfunc(strip(%nrstr(&msg2)))" ne "%sysfunc(strip(&subtitle))"
25740     +    %then %do;
25741     +        %let thisDVD = tmine;
25742     +    %end;
25743     +    %else %do;
25744     +        %let thisDVD = dmine;
25745     +    %end;
25747     +    ods &EM_REPORT_FORMAT text=" ";
25748     +    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text)))";
25749     +    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.&thisDVD, &subtitle, NOQUOTE))";
25750     +    ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text))) %sysfunc(sasmsg(sashelp.&thisDVD, &subtitle, NOQUOTE))";
25751     +%end;
25752     +%mend EM_REPORT_TABLETEXT;
25754     +/*---------------------------------------------------------*/
25755     + *  Print comparison of model fit stats;
MPRINT(EM_REPORT_CREATE):   * Print comparison of model fit stats;
25756     + *      used by EM_REPORT_DATA();
MPRINT(EM_REPORT_CREATE):   * used by EM_REPORT_DATA();
25757     +/*---------------------------------------------------------*/
25759     +%macro EM_REPORT_COMPAREFIT(data=) ;
25760     +    proc sort data=&data out=sd(drop=stat) ;
25761     +        by target datarole ;
25762     +    run ;
25763     +    %EM_REPORT_TABLETEXT(subtitle=rpt_modelfitcomparison_title);
25764     +    proc print data=sd noobs label contents='' ;
25765     +        by target datarole ;
25766     +        label label="%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_stat, NOQUOTE))";
25767     +    run;
25768     +%mend EM_REPORT_COMPAREFIT;
25770     +/*---------------------------------------------------------*/
25771     + * EM_REPORT_CLASSIFYTABT;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_CLASSIFYTABT;
25772     + *      print the table in a lattice plot of classification charts;
MPRINT(EM_REPORT_CREATE):   * print the table in a lattice plot of classification charts;
25773     +/*---------------------------------------------------------*/
25775     +%macro EM_REPORT_CLASSIFYTAB();
25777     +    %if "&em_report_key_whereclause" eq "" %then %do ;
25778     +        %EM_REPORT_TABLETEXT(subtitle=rpt_eventclassification_title);
25779     +    %end; %else %do;
25780     +        ods &EM_REPORT_FORMAT text=" ";
25781     +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text)))";
25782     +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_eventclasswhere_title, NOQUOTE, &em_report_key_where))";
25783     +        ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitletwo_title, NOQUOTE, %nrbquote(&em_report_node_text))) %sysfunc(sasmsg(sashelp.dmine, rpt_eventclasswhere_title, NOQUOTE, &em_report_key_where))";
25784     +    %end;
25786     +    %let pdat = &EM_REPORT_LIB..&EM_REPORT_KEY_FILE;
25788     +    proc print data=&pdat.&EM_REPORT_KEY_WHERECLAUSE noobs label contents='';
25789     +        label CORRECTTEXT= "%sysfunc(sasmsg(sashelp.dmine, rpt_state_vlabel, NOQUOTE))" percent="%sysfunc(sasmsg(sashelp.dmine, rpt_percent_vlabel, NOQUOTE))" ;
25790     +        by target datarole ;
25791     +        var from into correcttext count percent ;
25792     +    run;
25794     +%mend EM_REPORT_CLASSIFYTAB;
25796     +/*---------------------------------------------------------*/
25797     + * EM_REPORT_PROPERTIES;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_PROPERTIES;
25798     + *     print the properties table;
MPRINT(EM_REPORT_CREATE):   * print the properties table;
25799     +/*---------------------------------------------------------*/
25801     +%macro EM_REPORT_PROPERTIES(catalog=, dsname=work.properties);
25802     +    %if %sysfunc(cexist(&catalog)) %then %do;
25803     +        proc display cat=sashelp.emutil.prop2Ds.scl;
25804     +        run;
25805     +        %EM_REPORT_TABLETEXT(subtitle=rpt_props_title);
25806     +        %EM_REPORT_makeMultiColumn(dat=work.properties, vars=name value default, split=3);
25807     +        proc delete data=work.properties; run; quit;
25808     +    %end;
25809     +%mend EM_REPORT_PROPERTIES;
25811     +/*---------------------------------------------------------*/
25812     + * EM_REPORT_DATASOURCE ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_DATASOURCE ;
25813     + *     Report on data set starting a flow ;
MPRINT(EM_REPORT_CREATE):   * Report on data set starting a flow ;
25814     +/*--------------------------------------------------------*/
25815     +%macro EM_REPORT_DATASOURCE();
25817     +    proc transpose data=&EM_REPORT_LIB..&EM_REPORT_NODEID._EMTMETADEFAULT out=temp_source;
25818     +        var _all_;
25819     +        format crdate NLDATM24.0 modate NLDATM24.0;
25820     +    run;
25822     +    /* prepare the data source table */
25823     +    data temp_source;
25824     +        set temp_source;
25825     +        rename col1 = value;
25826     +        col1 = right(col1);
25827     +        format label $64.;
25828     +        label
25829     +            col1  = "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel, NOQUOTE))"
25830     +            label = "%sysfunc(sasmsg(sashelp.dmine, rpt_attribute_vlabel, NOQUOTE))"
25831     +        ;
25832     +        *** get the localized label column;
25833     +        _name_=upcase(_name_) ;
25834     +        if _name_ eq "MEMNAME"         then label="%sysfunc(sasmsg(sashelp.dmine, rpt_dataname_vlabel, NOQUOTE))" ;
25835     +        if _name_ eq "MEMTYPE"         then label="%sysfunc(sasmsg(sashelp.dmine, rpt_datatype_vlabel, NOQUOTE))" ;
25836     +        if _name_ eq "MEMLABEL"        then label="%sysfunc(sasmsg(sashelp.dmine, rpt_datalabel_vlabel, NOQUOTE))" ;
25837     +        if _name_ eq "TYPEMEM"         then delete ;
25838     +        if _name_ eq "ENGINE"          then label="%sysfunc(sasmsg(sashelp.dmine, rpt_engine_vlabel, NOQUOTE))" ;
25839     +        if _name_ eq "CRDATE"          then label="%sysfunc(sasmsg(sashelp.dmine, rpt_crdate_vlabel, NOQUOTE))" ;
25840     +        if _name_ eq "MODATE"          then label="%sysfunc(sasmsg(sashelp.dmine, rpt_datemode_vlabel, NOQUOTE))" ;
25841     +        if _name_ eq "NOBS"            then label="%sysfunc(sasmsg(sashelp.dmine, rpt_numrows_vlabel, NOQUOTE))" ;
25842     +        if _name_ eq "NCOLS"           then label="%sysfunc(sasmsg(sashelp.dmine, rpt_numcols_vlabel, NOQUOTE))" ;
25843     +        if _name_ eq "NBYTES"          then label="%sysfunc(sasmsg(sashelp.dmine, rpt_datasize_vlabel, NOQUOTE))" ;
25844     +        if _name_ eq "ROLE"            then label="%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))" ;
25845     +        if _name_ eq "USEEXTERNALDATA" then delete ;
25846     +        if _name_ eq "SAMPLINGRATE"    then delete ;
25847     +        if _name_ eq "SEGMENT"         then label="%sysfunc(sasmsg(sashelp.dmine, rpt_segment_vlabel, NOQUOTE))" ;
25848     +        if _name_ eq "LIBNAME"         then label="%sysfunc(sasmsg(sashelp.dmine, rpt_datalib_vlabel, NOQUOTE))" ;
25849     +    run;
25851     +    %EM_REPORT_TABLETEXT(subtitle=rpt_dataattributes_title);
25852     +    %EM_REPORT_makeMultiColumn(dat=temp_source, vars=label value, split=3);
25853     +    proc delete data=temp_source; run; quit;
25855     +%mend EM_REPORT_DATASOURCE ;
25857     +*---------------------------------------------------------*/
25858     + *  a utility macro for split table into multiple columns ;
MPRINT(EM_REPORT_CREATE):   *---------------------------------------------------------*/ * a utility macro for split table into multiple columns ;
25859     +/*---------------------------------------------------------*/
25861     +%macro em_report_makeMultiColumn(dat=,vars=,split=2);
25863     +    %let vars = %upcase(&vars);
25865     +    /*--- check if the variable existing in the table ---*/
25866     +    proc contents data=&dat out=_tmpms_content(keep=name) noprint;
25867     +    run;
25869     +    %let k = 1;
25870     +    %let vars2 = ;
25871     +    %do %while("%scan(&vars,&k,' ')" ne "");
25872     +        data _null_;
25873     +            set _tmpms_content;
25874     +            name=strip(upcase(name));
25875     +            if name eq "%scan(&vars,&k,' ')"
25876     +                then call symput('vars2',catx(' ',symget('vars2'),name));
25877     +        run;
25878     +        %let k = %eval(&k+1);
25879     +    %end;
25881     +    /*--- count the valid variables ---*/
25882     +    %let k = 1;
25883     +    %do %while("%scan(&vars2,&k,' ')" ne "");
25884     +        %let var&k = %scan(&vars2,&k,' ');
25885     +        %let k = %eval(&k+1);
25886     +    %end;
25887     +    %let numvars = %eval(&k-1);
25889     +    /* --- split the table ---*/
25890     +    %let dsid = %sysfunc(open(&dat));
25891     +    %let numobs = %sysfunc(attrn(&dsid, NOBS));
25892     +    %let numrows = %sysfunc(round(%sysevalf(&numobs/&split)));
25893     +    %if &dsid %then %let dsid = %sysfunc(close(&dsid));
25895     +    data %do d = 1 %to &split; _tmpms_dat&d.(rename=(%do k = 1 %to &numvars; &&&var&k=&&&var&k..&d %end;)) %end;;
25896     +        set &dat;
25897     +        keep &vars2 numrow;
25898     +        %do d = 1 %to &split;
25899     +            if _n_ gt %eval(&numrows*(&d-1)) and _n_ le %eval(&numrows*&d)
25900     +                then do; numrow = _n_-&numrows*(&d-1); output _tmpms_dat&d; end;
25901     +        %end;
25902     +    run;
25904     +    %do d = 1 %to &split;
25905     +        proc sort data=_tmpms_dat&d; by numrow; run;
25906     +    %end;
25908     +    /*--- merge and print ---*/
25909     +    data _tmpms_alldat;
25910     +        merge %do d = 1 %to &split; _tmpms_dat&d %end;;
25911     +        by numrow;
25912     +    run;
25914     +    proc print data=_tmpms_alldat noobs label contents='';
25915     +        var %do d = 1 %to &split; %do k = 1 %to &numvars; &&&var&k..&d %end; %end;;
25916     +    run;
25918     +    proc datasets lib=work nolist;
25919     +        delete _tmpms_:;
25920     +    run; quit;
25922     +%mend em_report_makeMultiColumn;
25924     +*---------------------------------------------------------*/
25925     + *  basic print a data table ;
MPRINT(EM_REPORT_CREATE):   *---------------------------------------------------------*/ * basic print a data table ;
25926     +/*---------------------------------------------------------*/
25927     +%macro EM_REPORT_DATA(maxobs=100);
25929     +%local pd desc ;
25930     +%let pd=&em_report_lib..&EM_REPORT_KEY_FILE ;
25931     +%IF not %SYSFUNC(EXIST(&pd)) %then %goto skip;
25933     +%if (("&EM_REPORT_KEY_AUTODISPLAY" eq "Y") OR ("&EM_REPORT_SHOWALL" eq "Y")) %then %do;
25935     +    %let desc= %upcase(&em_report_key_description) ;
25937     +    %if "&desc" eq "VARIABLES" %then %do;
25938     +        /*--- NOOP: handled globally by EM_REPORT_NODE --*/
25939     +        %goto skip ;
25940     +    %end;
25941     +    %else %if (("&desc" eq "ITEMS") OR ("&desc" eq "OUTAOV16") OR ("&desc" eq "OUTGINT") OR ("&desc" eq "OUTGVAR")
25942     +              OR ("&desc" eq "HISTWEIGHT") OR ("&desc" eq "EMSTAT")) %then %do;;
25943     +        %goto skip;
25944     +    %end;
25945     +    %if (("&desc" eq "SAMPLE") AND (%substr(%upcase(%sysfunc(strip(&nodeid))), 1, 7) eq GRFEXPL)) %then %do;;
25946     +        %goto skip;
25947     +    %end;
25948     +    %else %if "&desc" eq "MODELDIAGNOSTICS" %then %do;
25950     +        %EM_REPORT_TABLETEXT(subtitle=views_descriptions_&em_report_key_description);
25952     +        proc print data=&pd(obs=&maxobs) noobs label contents='';
25953     +            by datarole;
25954     +            var cutoff sensitivity_tpr specificity_tnr one_specificity_fpr precision_event
25955     +                precision_non_event ovl_class_rate precision_overall;
25956     +        run ;
25957     +    %end;
25958     +    %else
25959     +    %if "&desc" eq "REPORTFITSTAT" %then %do ;
25961     +        /*--- should switch to proc tabulate ---*/
25962     +        /*--- often there is only one value of the by variable 'target', but there may be several ---*/
25963     +        data pd; set &pd ;
25964     +            where train ne . ;
25965     +            label _NOBS_  = "%sysfunc(sasmsg(sashelp.dmine, stat_nobs_vlabel, NOQUOTE))"
25966     +                  _MISC_  = "%sysfunc(sasmsg(sashelp.dmine, stat_misc_vlabel, NOQUOTE))"
25967     +                  _MAX_   = "%sysfunc(sasmsg(sashelp.dmine, stat_max_vlabel, NOQUOTE))"
25968     +                  _SSE_   = "%sysfunc(sasmsg(sashelp.dmine, stat_sse_vlabel, NOQUOTE))"
25969     +                  _ASE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_ase, NOQUOTE))"
25970     +                  _RASE_  = "%sysfunc(sasmsg(sashelp.dmine, stat_rase_vlabel, NOQUOTE))"
25971     +                  _DIV_   = "%sysfunc(sasmsg(sashelp.dmine, stat_div_vlabel, NOQUOTE))"
25972     +                  _DFT_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dft, NOQUOTE))"
25973     +                  _AIC_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_aic, NOQUOTE))"
25974     +                  _MSE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_mse, NOQUOTE))"
25975     +                  _RMSE_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_rmse, NOQUOTE))"
25976     +                  _AVERR_ = "%sysfunc(sasmsg(sashelp.dmine, stat_averr_vlabel, NOQUOTE))"
25977     +                  _DFE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dfe, NOQUOTE))"
25978     +                  _DFM_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dfm, NOQUOTE))"
25979     +                  _ERR_   = "%sysfunc(sasmsg(sashelp.dmine, stat_err_vlabel, NOQUOTE))"
25980     +                  _FPE_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_fpe, NOQUOTE))"
25981     +                  _NW_    = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_nw, NOQUOTE))"
25982     +                  _RFPE_  = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_rfpe, NOQUOTE))"
25983     +                  _SBC_   = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_sbc, NOQUOTE))"
25984     +            ;
25985     +            drop stat ;
25986     +        run;
25988     +        %EM_REPORT_TABLETEXT(subtitle=rpt_modelfitstat_title);
25990     +        proc sort data=pd;
25991     +            by target targetlabel;
25992     +        proc print data=pd noobs label contents='';
25993     +            label label="%sysfunc(sasmsg(sashelp.dmine, rpt_dmneural_label_statlabel, NOQUOTE))" ;
25994     +            by target targetlabel;
25995     +        run;
25997     +    %end ;
25998     +    %else %if "&desc" eq "CLUSMEAN" %then %do;
26000     +        /* determine number of segments to process */
26001     +        %let dsid = %sysfunc(open(&pd));
26002     +        %if &dsid %then %do;
26003     +            %let numseg = %sysfunc(ATTRN(&dsid, NOBS));
26004     +        %end;
26005     +        %if &dsid %then %let dsid = %sysfunc(close(&dsid));
26007     +        /* transpose data to have a row per segment value */
26008     +        proc transpose data=&pd out=clusmean name=VARIABLE;
26009     +        run;
26011     +        data clusmean;
26012     +            set clusmean;
26013     +            label _LABEL_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))"
26014     +                %do i=1 %to &numseg;
26015     +                    %let colname = COL&i;
26016     +                    &colname = "%sysfunc(sasmsg(sashelp.dmine, rpt_segcolname_vlabel, NOQUOTE, &i))"
26017     +                %end;
26018     +            ;
26019     +            if missing(_LABEL_) then _LABEL_ = VARIABLE;
26020     +            if VARIABLE="_SEGMENT_" then delete;
26021     +            drop VARIABLE;
26022     +       run;
26024     +       %EM_REPORT_TABLETEXT(subtitle=rpt_meanstats_title);
26025     +       proc print data=clusmean noobs label contents='' ;  run ;
26027     +    %end;
26028     +    %else %if "&desc" eq "COMPAREFIT" %then %do;
26030     +        %EM_REPORT_COMPAREFIT(data=&pd);
26032     +    %end;
26033     +    %else %if "&desc" eq "FITSTAT" %then %do;
26035     +        /*** only print the fitstat table for MDLCOMP nodes ***/
26036     +        %if %substr(%upcase(%sysfunc(strip(&nodeid))), 1, 7) eq MDLCOMP %then %do;
26038     +            data _null_ ;
26039     +                set &pd (obs=2) end=eof ;
26040     +                if eof then do ;
26041     +                    call symput("_misc_"      , strip(put(_misc_,best.))) ;
26042     +                    call symput("_vmisc_"     , strip(put(_vmisc_,best.))) ;
26043     +                    call symput("_aur_"       , strip(put(_aur_, best.)));
26044     +                    call symput("_gini_"      , strip(put(_gini_, best.)));
26045     +                end;
26046     +            run;
26048     +            %let loopflag  = 0; %let validflag = 0;
26049     +            %let ASEflag   = 0; %let VASEflag  = 0; %let MISCflag  = 0; %let VMISCflag = 0;
26050     +            %let KSflag    = 0; %let VKSflag   = 0; %let AURflag   = 0; %let GINIflag  = 0;
26051     +            %let dsid = %sysfunc(open(&pd));
26052     +            %if &dsid %then %do;
26053     +                %let loopflag  = %sysfunc(VARNUM(&dsid, _LOOP_));
26054     +                %let validflag = %sysfunc(VARNUM(&dsid, VKS));
26055     +                %let ASEflag   = %sysfunc(VARNUM(&dsid, _ASE_));
26056     +                %let MISCflag  = %sysfunc(VARNUM(&dsid, _MISC_));
26057     +                %let KSflag    = %sysfunc(VARNUM(&dsid, KS));
26058     +                %let VASEflag  = %sysfunc(VARNUM(&dsid, _VASE_));
26059     +                %let VMISCflag = %sysfunc(VARNUM(&dsid, _VMISC_));
26060     +                %let VKSflag   = %sysfunc(VARNUM(&dsid, VKS));
26061     +                %let AURflag   = %sysfunc(VARNUM(&dsid, _AUR_));
26062     +                %let GINIflag  = %sysfunc(VARNUM(&dsid, _GINI_));
26063     +            %end;
26064     +            %if &dsid %then %let dsid=%sysfunc(close(&dsid));
26066     +            %EM_REPORT_TABLETEXT(subtitle=rpt_fittable_title);
26068     +            proc print data=&pd(obs=&maxobs) noobs label contents='';
26069     +                id
26070     +                    %if &loopflag ne 0 %then %do; _LOOP_ _WHERE_ %end;
26071     +                    USE PARENT MODEL MODELDESCRIPTION TARGET TARGETLABEL _CRITERION_
26072     +                ;
26073     +                var
26074     +                %if &validflag ne 0 %then %do;
26075     +                    %if &ASEflag ne 0                         %then %do; _ASE_   %end;
26076     +                    %if &MISCflag ne 0  and "&_misc_" ne "."  %then %do; _MISC_  %end;
26077     +                    %if &KSflag ne 0                          %then %do; KS      %end;
26078     +                    %if &VASEflag ne 0                        %then %do; _VASE_  %end;
26079     +                    %if &VMISCflag ne 0 and "&_vmisc_" ne "." %then %do; _VMISC_ %end;
26080     +                    %if &VKSflag ne 0                         %then %do; VKS     %end;
26081     +                %end;
26082     +                %else %do;
26083     +                    %if &ASEflag ne 0                         %then %do; _ASE_   %end;
26084     +                    %if &MISCflag ne 0  and "&_misc_" ne "."  %then %do; _MISC_  %end;
26085     +                    %if &KSflag ne 0                          %then %do; KS      %end;
26086     +                    %if &AURflag ne 0   and "&_aur_" ne "."   %then %do; _AUR_  %end;
26087     +                    %if &GINIflag ne 0  and "&_gini_" ne "."  %then %do; _GINI_  %end;
26088     +                %end;
26089     +               ;
26090     +            run;
26091     +        %end;
26092     +        %else %do;
26093     +            %goto skip;
26094     +        %end;
26095     +    %end;
26096     +    %else %if "&desc" eq "RULETABLE" %then %do;
26098     +        %let dsid = %sysfunc(open(&pd));
26099     +        %let printflag = 0;
26100     +        %if &dsid %then %do;
26101     +          %let printflag = %sysfunc(VARNUM(&dsid, EXP_CONF));
26102     +          %let lhandflag = %sysfunc(VARNUM(&dsid, _lhand));
26103     +          %let rhandflag = %sysfunc(VARNUM(&dsid, _rhand));
26104     +        %end;
26105     +        %if &dsid %then %let dsid=%sysfunc(close(&dsid));
26107     +        %EM_REPORT_TABLETEXT(subtitle=views_descriptions_&em_report_key_description);
26109     +        proc print data=&pd(obs=&maxobs) noobs label contents='';
26110     +            %if &printflag ne 0 %then %do;
26111     +                var rule exp_conf support lift count
26112     +                %if &lhandflag ne 0 %then %do; _lhand %end;
26113     +                %if &rhandflag ne 0 %then %do; _rhand %end;
26114     +                ;
26115     +            %end;
26116     +            %else %do;
26117     +                var rule conf support count
26118     +                %if &lhandflag ne 0 %then %do; _lhand %end;
26119     +                %if &rhandflag ne 0 %then %do; _rhand %end;
26120     +                ;
26121     +            %end;
26122     +        run;
26123     +    %end;
26124     +    %else %do ;
26125     +        %EM_REPORT_TABLETEXT(subtitle=views_descriptions_&em_report_key_description);
26126     +        proc print data=&pd(obs=&maxobs) noobs label contents=''; run ;
26127     +    %end ;
26128     +    %end;
26129     +%skip:
26130     +%mend EM_REPORT_DATA;
26132     +/*---------------------------------------------------------*/
26133     + * EM_REPORT_VARS ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_VARS ;
26134     + * EM_REPORT_VARS_FLIP ;
MPRINT(EM_REPORT_CREATE):   * EM_REPORT_VARS_FLIP ;
26135     + *     Report on variables used by the node ;
MPRINT(EM_REPORT_CREATE):   * Report on variables used by the node ;
26136     +/*---------------------------------------------------------*/
26137     +%macro EM_REPORT_VARS_FLIP(data=,out=);
26139     +    proc sort data=&data;
26140     +        by descending role level name;
26141     +    run;
26143     +    data &out(keep=role level count names ) ;
26144     +        length role level $16 ;
26145     +        set &data end=eof ;
26146     +        length xrole role $32 count 8 names $200 ;
26147     +        krole= strip(role) !!' * ' !! strip(level) ;
26148     +        retain xrole ; if _n_ eq 1 then xrole=krole ;
26149     +        retain names ; if _n_ eq 1 then names=name ;
26150     +        retain count 0 ending 0 ;
26151     +        count+1 ;
26152     +        role=scan(xrole,1,'*') ;
26153     +        level=scan(xrole,2,'*') ;
26154     +        if xrole ne krole then do ;
26155     +            count=count-1 ;
26156     +            put _n_ "OUTPUT;" ;
26157     +            output ;
26158     +            xrole=krole ; names= strip(name) ;
26159     +            count=1  ; ending=0 ;
26160     +        end ;
26161     +        else if _n_ gt 1 then do ;
26162     +            if length(names) + length(name) lt 196 then
26163     +                names= strip(names) !! ' '  !! strip(name) ;
26164     +            else
26165     +            if not ending then do ;
26166     +                names= strip(names) !! ' ...' ;
26167     +                ending=1 ;
26168     +            end;
26169     +        end;
26170     +        role=scan(xrole,1,'*') ;
26171     +        level=scan(xrole,2,'*') ;
26172     +        if eof and count gt 0 then output ;
26173     +        label count = "%sysfunc(sasmsg(sashelp.dmine, rpt_count_vlabel, NOQUOTE)) "
26174     +              names = "%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name, NOQUOTE))"
26175     +              level = "%sysfunc(sasmsg(sashelp.dmine, rpt_level_vlabel, NOQUOTE))"
26176     +              role = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))";
26177     +    run ;
26178     +%mend EM_REPORT_VARS_FLIP ;
26180     +%macro EM_REPORT_VARS(varlist=0);
26182     +    %if not %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_NODEID._EMTRAINVARIABLE))
26183     +        %then %goto skip ;
26185     +    proc sql noprint;
26186     +        select count(*) into :tmp_numvar from &EM_REPORT_LIB..&EM_REPORT_NODEID._EMTRAINVARIABLE;
26187     +    quit;
26189     +    %if &tmp_numvar lt 1 %then %goto skip;
26190     +/*--- 1. get minimal set of vars -----------------------------------------*/
26192     +    data _tmpvl_pdv(drop=use newuse count) ;
26193     +        set &EM_REPORT_LIB..&EM_REPORT_NODEID._EMTRAINVARIABLE end=eof;
26194     +        length use newuse $1;
26195     +        label
26196     +            name   = "%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name, NOQUOTE))"
26197     +            level  = "%sysfunc(sasmsg(sashelp.dmine, rpt_level_vlabel, NOQUOTE))"
26198     +            role   = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))"
26199     +            length = "%sysfunc(sasmsg(sashelp.dmine, meta_length_vlabel, NOQUOTE))"
26200     +        ;
26201     +        if use eq "" then use="Y";
26202     +        newuse=use;
26203     +        if use eq "D" then do;
26204     +            if role="REJECT" then newuse="N";
26205     +            else if role="INPUT"    then newuse="Y";
26206     +            else if role="CROSSID"  then newuse="Y";
26207     +            else if role="TEXT"     then newuse="Y";
26208     +        end ;
26209     +        if newuse eq "Y" then do ;
26210     +            count+1 ;
26211     +            output;
26212     +        end;
26213     +        if eof then call symput("varcount",put(count,6.)) ;
26214     +    run;
26216     +    proc sort data=_tmpvl_pdv; by name; run ;
26218     +/*--- 2. Summarize the variables -----------------------------------------*/
26220     +    %if &varlist ne 1 or &varcount gt &EM_REPORT_PRINT_MAXVARS %then %do;
26222     +        /* why not update pdv here? mxx */
26223     +        %EM_REPORT_VARS_FLIP(data=_tmpvl_pdv,out=_tmpvl_pds);
26224     +        %EM_REPORT_TABLETEXT(subtitle=rpt_varsummary_title);
26225     +        proc print data=_tmpvl_pds noobs label contents=''; run;
26227     +    %end;
26228     +    %else %do;
26230     +        %if %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_NODEID._variableset)) %then %do;
26231     +            proc sort data=&EM_REPORT_LIB..&EM_REPORT_NODEID._variableset out=_tmpvl_vs;
26232     +                by name;
26233     +            data _tmpvl_pdv;
26234     +                update _tmpvl_pdv _tmpvl_vs;
26235     +                by name;
26236     +                label
26237     +                    type    = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel, NOQUOTE))"
26238     +                    format  = "%sysfunc(sasmsg(sashelp.dmine, meta_format_vlabel, NOQUOTE))"
26239     +                    creator = "%sysfunc(sasmsg(sashelp.dmine, meta_creator_vlabel, NOQUOTE))"
26240     +                    family  = "%sysfunc(sasmsg(sashelp.dmine, rpt_family_vlabel, NOQUOTE))"
26241     +                    label   = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))"
26242     +                ;
26243     +            run;
26244     +        %end;
26246     +        %EM_REPORT_TABLETEXT(subtitle=rpt_varlist_title);
26247     +        proc print data=_tmpvl_pdv noobs label contents='';
26248     +            var name label role level type length format creator;
26249     +        run;
26250     +    %end;
26252     +/*--- 3. for SVM node with EMSTAT table ----------------------------------*/
26254     +    %let emstat_exist = 0;
26255     +    %if %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_NODEID._emstat)) %then %do;
26256     +        proc sql noprint;
26257     +            select count(*) into :emstat_use from &em_report_lib..&nodeid._emreport
26258     +                where key="DESCRIPTION" and value="EMSTAT" ;
26259     +        quit;
26260     +        %if &emstat_use gt 0 %then %let emstat_exist = 1;
26261     +    %end;
26263     +    %if &emstat_exist eq 1 %then %do;
26265     +        /* check newname column */
26266     +        %let newname_exist = 0;
26267     +        %let newobs = 0;
26268     +        %let tsdsid = %sysfunc(open(work.pdv));
26269     +        %if &tsdsid %then %do;
26270     +            %let tsobs = %sysfunc(ATTRN(&tsdsid, NOBS));
26271     +            %let newobs = %sysfunc(varnum(&tsdsid, NEWNAME));
26272     +            %if &tsobs > 0 AND  &newobs > 0 %then %let newname_exist =1;
26273     +        %end;
26274     +        %if &tsdsid %then %let tsdsid = %sysfunc(close(&tsdsid));
26276     +        %if &newname_exist eq 1 %then %do;
26277     +            data _tmpvl_pdv; set _tmpvl_pdv(drop=name); run;
26278     +            proc sort data=_tmpvl_pdv(rename=(newname=NAME)); by name; run;
26279     +        %end;
26280     +        %else %do;
26281     +            proc sort data=_tmpvl_pdv; by name; run;
26282     +        %end;
26284     +        proc sort data=&EM_REPORT_LIB..&EM_REPORT_NODEID._VARIABLESET out=_tmpvl_v; by name; run;
26286     +        data _tmpvl_pdv ;
26287     +            update _tmpvl_pdv _tmpvl_v;
26288     +            by name;
26289     +            label label="%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
26290     +        run;
26292     +        proc sort data=_tmpvl_pdv; by name; run;
26293     +        proc sort data=&EM_REPORT_LIB..&EM_REPORT_NODEID._EMSTAT out=_tmpvl_tempsort; by name; run;
26295     +        data _tmpvl_pdv;
26296     +            merge _tmpvl_pdv(keep=name label role level type length format creator family) _tmpvl_tempsort;
26297     +            by name;
26298     +            label type    = "%sysfunc(sasmsg(sashelp.dmine, meta_type_vlabel, NOQUOTE))"
26299     +                  format  = "%sysfunc(sasmsg(sashelp.dmine, meta_format_vlabel, NOQUOTE))"
26300     +                  creator = "%sysfunc(sasmsg(sashelp.dmine, meta_creator_vlabel, NOQUOTE))"
26301     +                  family  = "%sysfunc(sasmsg(sashelp.dmine, rpt_family_vlabel, NOQUOTE))";
26302     +        run;
26304     +        proc sort data=_tmpvl_pdv; by descending role name; run;
26306     +        %EM_REPORT_TABLETEXT(subtitle=rpt_variable_interval_title);
26307     +        proc print data=_tmpvl_pdv(where=(LEVEL="INTERVAL")) noobs label contents='';
26308     +            var name label role level type length format creator pctmiss min max mean std skewness kurtosis;
26309     +        run;
26311     +        %EM_REPORT_TABLETEXT(subtitle=rpt_variable_class_title);
26312     +        proc print data=_tmpvl_pdv(where=(LEVEL^="INTERVAL")) noobs label contents='';
26313     +            var name label role level type length format creator nlevel pctmiss;
26314     +        run;
26315     +    %end;
26317     +/*--- 4. now get vars created by this node -------------------------------*/
26319     +    %if not %sysfunc(exist(&EM_REPORT_LIB..&EM_REPORT_NODEID._CMETA_TRAIN))
26320     +        %then %goto skip;
26322     +    %let pdvxnum = 0;
26324     +    data _tmpvl_pdvx;
26325     +        set &EM_REPORT_LIB..&EM_REPORT_NODEID._CMETA_TRAIN end=eof ;
26326     +        where upcase(creator) eq "&EM_REPORT_NODEID" ;
26327     +        if eof then call symput('pdvxnum',put(_N_,6.));
26328     +        label
26329     +            name   = "%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name, NOQUOTE))"
26330     +            label  = "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))"
26331     +            role   = "%sysfunc(sasmsg(sashelp.dmine, meta_role_vlabel, NOQUOTE))"
26332     +            level  = "%sysfunc(sasmsg(sashelp.dmine, rpt_level_vlabel, NOQUOTE))"
26333     +            type   = "%sysfunc(sasmsg(sashelp.dmine, rpt_type_vlabel, NOQUOTE))"
26334     +            length = "%sysfunc(sasmsg(sashelp.dmine, meta_length_vlabel, NOQUOTE))";
26335     +    run;
26337     +    %if pdvxnum gt 0 %then %do;
26338     +        %if &varlist ne 1 or &pdvxnum gt &EM_REPORT_PRINT_MAXVARS %then %do ;
26340     +            %EM_REPORT_VARS_FLIP(data=_tmpvl_pdvx,out=_tmpvl_pdvxp) ;
26342     +            proc sql noprint;
26343     +                select count(*) into :nobs from _tmpvl_pdvxp;
26344     +            quit;
26346     +            %if &nobs > 0 %then %do;
26347     +                %EM_REPORT_TABLETEXT(subtitle=rpt_createvarsummary_title);
26348     +                proc print data=_tmpvl_pdvxp noobs label contents=''; run ;
26349     +            %end;
26350     +        %end;
26351     +        %else %do ;
26353     +            %EM_REPORT_TABLETEXT(subtitle=rpt_createvarslist_title);
26354     +            proc print data=_tmpvl_pdvx noobs label contents='';
26355     +                var name label role type length ;
26356     +            run;
26357     +        %end;
26358     +    %end;
26360     +/*------------------------------------------------------------------------*/
26362     +    proc datasets lib=work nolist;
26363     +        delete _tmpvl_:;
26364     +    run; quit;
26365     +    %skip:
26367     +%mend EM_REPORT_VARS;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_REPORT_CREATE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_REPORT_CREATE):   filename temp catalog 'sashelp.emutil.reporter_rpmmacros.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_RPMMACROS.SOURCE.
26369     +%macro EM_REPORT_validSummaryPath(startNodeID =);
26370     +/*--- purpose: detect whether a flow is valid as a summary path ---*/
26372     +    %global EM_REPORT_NODES EM_REPORT_LIB RPM_REPORT_MODELNODE  RPM_REPORT_SCORENODE RPM_REPORT_MDLCOMP RPM_REPORT_VALIDSUMMARY;
26373     +    %local prednode em_report_mdlOutfit;
26374     +    %let RPM_REPORT_MODELNODE    = ;
26375     +    %let RPM_REPORT_SCORENODE    = ;
26376     +    %let RPM_REPORT_MDLCOMP      = ;
26377     +    %let RPM_REPORT_VALIDSUMMARY = 0;
26379     +    %if &EM_REPORT_NODES eq SUMMARY %then %do;
26381     +        %let predNode=;
26382     +        data _null_ ;
26383     +            set &EM_REPORT_LIB..em_dgraph(where=(to="&startNodeID"));
26384     +            call symput('predNode', strip(from));
26385     +        run;
26386     +        %let predNode = &predNode;
26388     +        /* if predecessor [to Reporter node] is MDLCOMP, RPM report is valid                           [MDLCOMP->Reporter]*/
26389     +        /* or if predecessor is SCORE and MODEL node is fed into score, RPM report is valid            [Score->Model->Reporter]*/
26390     +        /* or if MDLCOMP to SCORE to REPORTER, RPM report is valid, commented xxm                      [MDLCOMP->Score->Reporter]*/
26391     +        /* or if predecessor is MODEL node, RPM report is valid                                        ["model"->Reporter]*/
26392     +        /* or MDLCOMP->SCORE->CODEXPT->Reporter is valid*/
26394     +        %if %upcase(%substr(&prednode,1,7)) eq MDLCOMP %then %do;
26395     +            %let RPM_REPORT_MDLCOMP = &predNode;
26396     +            %let RPM_REPORT_VALIDSUMMARY=1;
26397     +            data _null_;
26398     +                set &EM_REPORT_LIB..&RPM_REPORT_MDLCOMP._emoutfit(where=(USE='Y'));
26399     +                call symput('RPM_REPORT_MODELNODE',strip(model));
26400     +            run;
26401     +        %end;
26402     +        %else %if %upcase(%substr(&prednode,1,5)) eq SCORE %then %do;
26403     +            %let RPM_REPORT_SCORENODE = &prednode;
26404     +            %let prednode = ;
26405     +            data _null_ ;
26406     +                set &EM_REPORT_LIB..em_dgraph(where=(to="&RPM_REPORT_SCORENODE"));
26407     +                call symput('predNode', strip(from));
26408     +            run;
26409     +            %let predNode = &predNode;
26411     +            %if &prednode ne %then %do;
26412     +                %if %upcase(%substr(&prednode,1,7)) eq MDLCOMP %then %do;
26413     +                    %let RPM_REPORT_MDLCOMP = &prednode;
26414     +                    %let RPM_REPORT_VALIDSUMMARY=1;
26415     +                    data _null_;
26416     +                        set &EM_REPORT_LIB..&RPM_REPORT_MDLCOMP._emoutfit(where=(USE='Y'));
26417     +                        call symput('RPM_REPORT_MODELNODE',strip(model));
26418     +                    run;
26419     +                %end;
26420     +                %else %do;
26421     +                    %let em_report_mdlOutfit = &EM_REPORT_LIB..&prednode._emoutfit;
26422     +                    %if %sysfunc(exist(&em_report_mdlOutfit))
26423     +                    %then %do;
26424     +                        %let RPM_REPORT_MODELNODE = &prednode;
26425     +                        %let RPM_REPORT_VALIDSUMMARY=1;
26426     +                    %end;
26427     +                %end;
26428     +            %end;
26429     +        %end;
26430     +        %else %if %upcase(%substr(&prednode,1,7)) eq CODEXPT %then %do;
26431     +            %let RPM_REPORT_SCOREXPTNODE = &prednode;
26432     +            %let prednode = ;
26433     +            data _null_ ;
26434     +                set &EM_REPORT_LIB..em_dgraph(where=(to="&RPM_REPORT_SCOREXPTNODE"));
26435     +                call symput('predNode', strip(from));
26436     +            run;
26437     +/*            %let predNode = &predNode;*/
26439     +            %if &prednode ne %then %do;
26440     +                %if %upcase(%substr(&prednode,1,5)) eq SCORE %then %do;
26441     +                    %let RPM_REPORT_SCORENODE = &prednode;
26442     +                    %let prednode = ;
26443     +                    data _null_ ;
26444     +                        set &EM_REPORT_LIB..em_dgraph(where=(to="&RPM_REPORT_SCORENODE"));
26445     +                        call symput('predNode', strip(from));
26446     +                    run;
26447     +/*                    %let predNode = &predNode; */
26449     +                    %if &prednode ne %then %do;
26450     +                        %if %upcase(%substr(&prednode,1,7)) eq MDLCOMP %then %do;
26451     +                            %let RPM_REPORT_MDLCOMP = &prednode;
26452     +                            %let RPM_REPORT_VALIDSUMMARY=1;
26453     +                            data _null_;
26454     +                                set &EM_REPORT_LIB..&RPM_REPORT_MDLCOMP._emoutfit(where=(USE='Y'));
26455     +                                call symput('RPM_REPORT_MODELNODE',strip(model));
26456     +                            run;
26457     +                        %end;
26458     +                    %end;
26459     +                %end;
26460     +            %end;
26461     +        %end;
26462     +        %else %do;
26463     +            %let em_report_mdlOutfit = &em_lib..&prednode._emoutfit;
26464     +            %if %sysfunc(exist(&em_report_mdlOutfit))
26465     +            %then %do;
26466     +                %let RPM_REPORT_MODELNODE = &prednode;
26467     +                %let RPM_REPORT_VALIDSUMMARY=1;
26468     +            %end;
26469     +        %end;
26470     +    %end;
26472     +    %let RPM_REPORT_MODELNODE = &RPM_REPORT_MODELNODE;
26473     +    %let RPM_REPORT_SCORENODE = &RPM_REPORT_SCORENODE;
26474     +    %let RPM_REPORT_MDLCOMP   = &RPM_REPORT_MDLCOMP;
26476     +%mend EM_REPORT_validSummaryPath;
26478     +%macro em_report_summary(runHP=0);
26480     +%global EM_REPORT_SUMMARY_TARGET RPM_REPORT_MDLCOMP RPM_REPORT_MODELNODE;
26481     +%local  IDSNode freqvar;
26483     +%if not %sysfunc(exist(emreportpath)) %then %goto skip ;
26485     +/*--- RPM-1. Identify the modeling node -------------------------------------*/
26487     +%let em_report_modelID = ;
26488     +%let em_report_modeldesc= ;
26490     +%if &RPM_REPORT_MDLCOMP ne %then %do;
26491     +    %let em_report_mdloutfit = &em_lib..&RPM_REPORT_MDLCOMP._emoutfit;
26492     +    %if %sysfunc(exist(&em_report_mdloutfit)) %then %do;
26493     +        data _null_;
26494     +           set &em_lib..&RPM_REPORT_MDLCOMP._emoutfit(where=(USE='Y'));
26495     +           call symput('em_report_modelID',   strip(model));
26496     +           call symput('em_report_modeldesc', strip(modeldescription));
26497     +        run;
26498     +    %end;
26499     +%end;
26500     +%else %if &RPM_REPORT_MODELNODE ne %then %do;
26501     +    %let em_report_mdloutfit = &em_lib..&RPM_REPORT_MODELNODE._emoutfit;
26502     +    %if %sysfunc(exist(&em_report_mdloutfit)) %then %do;
26503     +        %let em_report_modelID   = &RPM_REPORT_MODELNODE;
26504     +        %let em_report_modeldesc = ;
26505     +    %end;
26506     +%end;
26508     +/*--- RPM-2. Retrieve necessary information for the model--------------------*/
26510     +%if &em_report_modelId ne %then %do;
26512     +    /* RPM-2.1 save model information */
26514     +    %EM_GETNAME(key=MODELINFO, type=DATA);
26515     +    data &EM_USER_MODELINFO;
26516     +        format modelID $100. modeldesc $200.;
26517     +        modelid = "&em_report_modelID";
26518     +        modeldesc="&em_report_modeldesc";
26519     +    run;
26521     +    /* RPM-2.2 retrieve warning file if it exists */
26523     +    %let temp = %nrbquote(%sysfunc(PATHNAME(&em_report_lib)));
26524     +    %let path = %nrbquote(%sysfunc(tranwrd(&temp, %str(%"),"")));
26525     +    %let file = EMWARN.sas;
26526     +    %let warnfile = %nrbquote(&path&em_dsep&em_report_modelId&em_dsep&file);
26528     +    %if "&warnfile" ne "" %then %do;
26529     +        filename x "&warnfile" encoding='utf-8' NOBOM;
26530     +        data _null_;
26531     +            length string $1000;
26532     +            file PRINT;
26533     +            fid = fopen('x');
26534     +            do while (^fread(fid));
26535     +                rc= fget(fid, string, frlen(fid));
26536     +                string = tranwrd(string, "'", "''");
26537     +                if string eq '' then string = ' ';
26538     +                put string;
26539     +            end;
26540     +            fid = fclose(fid);
26541     +            put " ";
26542     +        run;
26543     +        filename x;
26544     +    %end;
26546     +    /* RPM-2.3 retrieve ID nodeid */
26548     +    data _null_;
26549     +        set emreportpath(where=(substr(upcase(strip(nodeid)),1,3) eq "IDS"));
26550     +        call symput("idsnode",strip(nodeid)) ;
26551     +    run;
26553     +        data _null_;
26554     +        set emreportpath(where=(substr(upcase(strip(nodeid)),1,7) eq "FIMPORT"));
26555     +        call symput("idsnode",strip(nodeid)) ;
26556     +        run;
26558     +%let fimnode=;
26559     +%if "%substr(%upcase(%sysfunc(strip(&idsnode))),1,7)" eq "FIMPORT" %then %do;
26560     +    %let idscmeta = &em_lib..&idsnode._emtrainvariable;
26561     +    %let idstmeta = &em_lib..&idsnode._emtmetadefault;
26562     +    %let fimnode = &idsnode;
26563     +    %let idsnode = &em_report_modelID;
26564     +%end;
26565     +%else %do;
26566     +    %let idscmeta = &em_lib..&idsnode._emcmetadefault;
26567     +    %let idstmeta = &em_lib..&idsnode._emtmetadefault;
26568     +%end;
26570     +    %if %sysfunc(exist(&idstmeta)) %then %do;
26571     +        data _null_;
26572     +            set  &idstmeta;
26573     +            call symput('rpt_rpm_data',    strip(MEMNAME));
26574     +            call symput('rpt_rpm_datalib', strip(LIBNAME));
26575     +            call symput('rpt_rpm_nobs',    strip(NOBS));
26576     +            call symput('rpt_rpm_ncols',   strip(NCOLS));
26577     +        run;
26578     +    %end;
26580     +    /* RPM-2.4 retrieve name of target to use in presense of multiple targets */
26581     +    /* prefer to use the target given by &EM_REPORT_SUMMARY_TARGET        */
26582     +    /* otherwise the last target modelled (by name) will be used          */
26584     +    %let mdlTarget = ;
26586     +    %if "&EM_REPORT_SUMMARY_TARGET" ne "" %then %do;
26587     +        proc sql noprint;
26588     +            select count(*) into :tmpn
26589     +            from &em_lib..&em_report_modelid._variableset;
26590     +                where name eq "&EM_REPORT_SUMMARY_TARGET" and upcase(role) eq "TARGET";
26591     +        quit;
26592     +        %if &tmpn eq 1 %then %let mdlTarget = &EM_REPORT_SUMMARY_TARGET;
26593     +    %end;
26595     +    %if "&mdlTarget" eq "" %then %do;
26596     +        data _null_;
26597     +            set &em_lib..&em_report_modelid._variableset(where=(role="TARGET" and use="Y"));
26598     +            call symput('mdlTarget', strip(name));
26599     +        run;
26600     +    %end;
26602     +    /* RPM-2.5 retrieve name of decmeta from eminfo of the chosen model */
26604     +    data _null_;
26605     +        set &em_lib..&em_report_modelid._eminfo;
26606     +        if KEY="DECMETA" %if "&mdlTarget" ne "" %then %do; and target="&mdlTarget" %end;
26607     +            then  call symput('rpt_rpm_mdldecmeta', strip(data));
26608     +        if KEY="DECDATA" %if "&mdlTarget" ne "" %then %do; and target="&mdlTarget" %end;
26609     +            then  call symput('rpt_rpm_mdldecdata', strip(data));
26610     +    run;
26612     +    /* RPM-2.6 retrieve name of DECISION variable if it exists      */
26613     +    /*       - use this as target var for categorical target        */
26614     +    /*       - otherwise use INTO variable as class target var      */
26615     +    /* RPM-2.7 retrieve target event level, save TARGETINFO table   */
26616     +    /* RPM-2.8 retrieve name of the PREDICTED variable from decmeta */
26617     +    /*       - INTERVAL TARGET ONLY                                 */
26619     +    %let catTarget = ;
26621     +    data _null_;
26622     +        set &rpt_rpm_mdldecmeta;
26623     +        if _type_ eq "INTO"          then call symput('catTarget', strip(variable));
26624     +        if _type_ eq "MODELDECISION" then call symput('catTarget', strip(variable));
26626     +        if _type_ eq "TARGET" then do;
26627     +            call symput('rpt_rpm_eventlvl',    strip(event));
26628     +            call symput('rpt_rpm_targetName',  strip(variable));
26629     +            call symput('rpt_rpm_targetLevel', strip(level));
26630     +            call symput('rpt_rpm_targetLabel', strip(label));
26631     +        end;
26632     +    data _null_;
26633     +        set &rpt_rpm_mdldecmeta;
26634     +        %if "&rpt_rpm_targetLevel" eq "INTERVAL" %then %do;
26635     +            if _type_ eq "PREDICTED"
26636     +                then call symput('rpt_rpm_predvar', strip(variable));
26637     +        %end;
26638     +    run;
26640     +    %EM_GETNAME(key=TARGETINFO, type=DATA);
26641     +    data &EM_USER_TARGETINFO;
26642     +        set &rpt_rpm_mdldecmeta;
26643     +    run;
26645     +    /* RPM-2.9 retrieve freq variable name if it exists */
26647     +    %let freqvar=;
26648     +    data _null_;
26649     +        set &em_lib..&em_report_modelid._variableset(where=(role eq "FREQ"));
26650     +        call symput('freqvar', strip(name));
26651     +    run;
26653     +    /* RPM-2.10 retrieve listing of all inputs into the model */
26654     +    /*     process only when SCORENODE exists                 */
26656     +    %if &RPM_REPORT_SCORENODE ne %then %do;
26658     +        %EM_REGISTER(key=tempvar,  type=DATA);
26659     +        %EM_REGISTER(key=tempmeta, type=DATA);
26660     +        %EM_GETNAME( key=tempvar,  type=DATA);
26661     +        %EM_GETNAME( key=tempmeta, type=DATA);
26663     +        data &EM_USER_tempvar;
26664     +            %if %sysfunc(exist(&em_lib..&rpm_report_scorenode._eminputvars)) %then %do;
26665     +                set &em_lib..&rpm_report_scorenode._eminputvars(where=(scorevar="Y"));
26666     +            %end;
26667     +            %else %do;
26668     +                set &em_lib..&idsnode._variableset(where=(upcase(role)='INPUT') keep=role name);
26669     +            %end;
26670     +        run;
26672     +        proc sql noprint;
26673     +            select count(distinct name) into :n_svars from &EM_USER_tempvar;
26674     +        quit;
26676     +        proc sort data=&EM_USER_tempvar;       by name; run;
26678     +%if %sysfunc(exist(&idscmeta)) %then %do;
26679     +        proc sort data=&idscmeta out=tempmeta; by name; run;
26680     +        data &EM_USER_tempmeta;
26681     +            merge &EM_USER_tempvar(in=_a) tempmeta;
26682     +            by name;
26683     +            if _a;
26684     +        run;
26685     +%end;
26686     +%else %do;
26687     +        data &EM_USER_tempmeta;
26688     +            set &EM_USER_tempvar;
26689     +            by name;
26690     +        run;
26691     +%end;
26693     +        proc delete data=tempmeta; run;
26694     +    %end;
26696     +    /* RPM-2.11 is HPRPM or not */
26698     +    proc sql noprint;
26699     +        %if "&fimnode" ne "" %then %do;
26700     +            select count(*) into :rpt_rpm_isHP from &em_lib..&em_report_modelid._eminfo
26701     +        %end;
26702     +        %else %do;
26703     +            select count(*) into :rpt_rpm_isHP from &em_lib..&idsnode._eminfo
26704     +        %end;
26705     +                where upcase(key) eq 'HPDMSAMPLE';
26706     +    quit;
26708     +    %if &rpt_rpm_isHP ne 0 %then %let rpt_rpm_isHP = 1;
26710     +    /* RPM-2.12 determine if vvn variables are present in ids node */
26712     +    %let vvnflag = 0;
26713     +    %let cmdsid = %sysfunc(open(&idscmeta));
26714     +    %if &cmdsid %then %do;
26715     +        %let newnum = %sysfunc(varnum(&cmdsid, newname));
26716     +        %if &newnum gt 0 %then %let vvnflag = 1;
26717     +    %end;
26718     +    %if &cmdsid %then %let cmdsid = %sysfunc(close(&cmdsid));
26720     +    %if &vvnflag eq 0
26721     +        %then %let name_to_use = name;
26722     +        %else %let name_to_use = newname;
26724     +/* end of 2. Retrieve necessary information for the model */
26725     +%end;
26727     +/*******************************************************************************************/
26729     +%if &em_report_modelId ne  and %sysfunc(exist(&idstmeta)) %then %do;
26731     +    %if &EM_PROPERTY_SUMMARIZATION eq Y %then %do;
26733     +        %EM_GETNAME(key=DATASUM,   type=DATA);
26734     +        %EM_GETNAME(key=TARGETSUM, type=DATA);
26735     +        %EM_GETNAME(key=VARSUM,    type=DATA);
26736     +        %let rpt_rpm_eventlvl = %nrbquote(&rpt_rpm_eventlvl);
26738     +        /* RPM-3.1 - output data summary ------------------------------------------------------------------*/
26740     +        data &EM_USER_DATASUM;
26741     +            length stat $200 value $200;
26742     +            label stat = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))"
26743     +                  value = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptvalue_vlabel, NOQUOTE))";
26745     +            stat  = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptinputdatasource_vlabel, NOQUOTE))";
26746     +            value = "&rpt_rpm_datalib..&rpt_rpm_data";
26747     +            output;
26749     +            stat = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpttargetvariable_vlabel, NOQUOTE))";
26750     +            %if "%nrbquote(&rpt_rpm_targetLabel)" ne "" %then %do;
26751     +                value = "%nrbquote(&rpt_rpm_targetLabel)";
26752     +            %end;
26753     +            %else %do;
26754     +                value = "&rpt_rpm_targetName";
26755     +            %end;
26756     +            output;
26758     +            %if "&rpt_rpm_targetLevel" ne "INTERVAL" %then %do;
26759     +                stat  = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpteventlevel_vlabel, NOQUOTE))";
26760     +                value = "&rpt_rpm_eventlvl";
26761     +                output;
26762     +            %end;
26764     +            stat  = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptobservations_vlabel, NOQUOTE))";
26765     +            value = "&rpt_rpm_nobs";
26766     +            output;
26768     +            stat = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptorigvars_vlabel, NOQUOTE))";
26769     +            value = "&rpt_rpm_ncols";
26770     +            output;
26772     +            %if &RPM_REPORT_SCORENODE ne %then %do;
26773     +                %if &n_svars ne %then %do;
26774     +                    stat="%sysfunc(sasmsg(sashelp.dmine, rpt_rptselectedvars_vlabel, NOQUOTE))";
26775     +                    value="&n_svars";
26776     +                    output;
26777     +                %end;
26778     +            %end;
26779     +        run;
26781     +        ods &EM_REPORT_FORMAT text=" ";
26782     +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodelsummarization_title, NOQUOTE))";
26783     +        ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptdata_title, NOQUOTE))";
26784     +        ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodelsummarization_title, NOQUOTE)) %sysfunc(sasmsg(sashelp.dmine, rpt_rptdata_title, NOQUOTE))";
26786     +        proc print data=&EM_USER_DATASUM noobs label style=[outputwidth=50%]; run;
26788     +        /* RPM-3.2 - output target summary -----------------------------------------------------------------*/
26790     +       ods &EM_REPORT_FORMAT text=" ";
26791     +       %if "%nrbquote(&rpt_rpm_targetLabel)" ne "" %then %do;
26792     +           ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttarget_title, NOQUOTE, %nrstr(&rpt_rpm_targetLabel)))";
26793     +           ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttarget_title, NOQUOTE, %nrstr(&rpt_rpm_targetLabel)))";
26794     +       %end;
26795     +       %else %do;
26796     +           ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttarget_title, NOQUOTE, &rpt_rpm_targetName))";
26797     +           ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttarget_title, NOQUOTE, &rpt_rpm_targetName))";
26798     +       %end;
26800     +        %if "&rpt_rpm_targetLevel" ne "INTERVAL"
26801     +        %then %do;
26802     +            /* target summary for for non-interval target */
26804     +            %let useD = N;
26805     +            data _null_;
26806     +                set &rpt_rpm_mdldecmeta(where=(_type_ in ('MATRIX'))) end=eof;
26807     +                if eof then call symput('useD', USE);
26808     +            run;
26810     +            %let useP = N;
26811     +            data _null_;
26812     +                set &rpt_rpm_mdldecmeta(where=(_type_ in ('DECPRIOR'))) end=eof;
26813     +                if eof then call symput('useP', USE);
26814     +            run;
26816     +            data &EM_USER_TARGETSUM;
26817     +                set &rpt_rpm_mdldecdata;
26818     +                label
26819     +                    &rpt_rpm_targetName = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptvalue_vlabel, NOQUOTE))"
26820     +                    count      = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptcount_vlabel, NOQUOTE))"
26821     +                    trainprior = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptdatapercentage_vlabel, NOQUOTE))"
26822     +                    decprior   = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptadjustedperc_vlabel, NOQUOTE))";
26823     +                ;
26824     +                %if &useD eq Y and &useP eq Y %then %do; drop dataprior;          %end;
26825     +                %if &useD eq Y and &useP eq N %then %do; drop decprior dataprior; %end;
26826     +                %if &useD eq N and &useP eq Y %then %do; keep &rpt_rpm_targetName count trainprior decprior; %end;
26827     +                %if &useD eq N and &useP eq N %then %do; keep &rpt_rpm_targetName count trainprior;          %end;
26828     +            run;
26830     +            proc print data=&EM_USER_TARGETSUM noobs label style=[outputwidth=50%]; run;
26831     +        %end;
26832     +        %else %do;
26833     +            /* target summary for interval target */
26835     +            data _null_;
26836     +                %if "&fimnode" ne "" %then %do;
26837     +                    set  &idscmeta(where=(ROLE='TARGET'));
26838     +                %end;
26839     +                %else %do;
26840     +                    set  &em_lib..&idsnode._cmeta_data(where=(ROLE='TARGET'));
26841     +                %end;
26842     +                    call symput('rpt_rpm_ids_target',    strip(name));
26843     +            run;
26845     +            %if &rpt_rpm_isHP eq 1 %then %do;
26846     +                ods &EM_REPORT_FORMAT exclude all;
26847     +                ods listing;
26848     +                proc hpdmdb data=&em_lib..&idsnode._data varout=temp1;
26849     +                    var &rpt_rpm_ids_target;
26850     +                proc transpose data=temp1
26851     +                    out=&EM_USER_TARGETSUM(rename=(col1=&rpt_rpm_ids_target _name_=_stat_));
26852     +                    by name notsorted;
26853     +                    var n min max mean std;
26854     +                run;
26855     +                ods listing close;
26856     +                ods &EM_REPORT_FORMAT select all;
26857     +                proc delete data=temp1; run;
26858     +            %end;
26859     +            %else %do;
26860     +                %if "&fimnode" ne "" %then %do;
26861     +                    proc means data=&em_lib..&fimnode._data noprint;
26862     +                %end;
26863     +                %else %do;
26864     +                    proc means data=&em_lib..&idsnode._data noprint;
26865     +                %end;
26866     +                    var &rpt_rpm_ids_target;
26867     +                    output out=&EM_USER_TARGETSUM;
26868     +                run;
26870     +                data &EM_USER_TARGETSUM;
26871     +                    format _stat_ $50.;
26872     +                    set &EM_USER_TARGETSUM;
26873     +                    if strip(upcase(_stat_)) eq "MIN"  then _stat_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
26874     +                    if strip(upcase(_stat_)) eq "MAX"  then _stat_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
26875     +                    if strip(upcase(_stat_)) eq "N"    then _stat_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_numObs_vlabel, NOQUOTE))";
26876     +                    if strip(upcase(_stat_)) eq "MEAN" then _stat_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel, NOQUOTE))";
26877     +                    if strip(upcase(_stat_)) eq "STD"  then _stat_ = "%sysfunc(sasmsg(sashelp.dmine, rpt_std_vlabel, NOQUOTE))";
26878     +                run;
26879     +            %end;
26881     +            proc print data=&EM_USER_TARGETSUM noobs label style=[outputwidth=50%];
26882     +                var _stat_ &rpt_rpm_ids_target;
26883     +                label _stat_        = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))"
26884     +                &rpt_rpm_ids_target = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptvalue_vlabel, NOQUOTE))";
26885     +            run;
26886     +        %end;
26888     +        /* RPM-3.3 - output variable summary ---------------------------------------------------------------*/
26890     +        %if &RPM_REPORT_SCORENODE ne %then %do;
26892     +            proc sql noprint;
26893     +                create table tempselected as
26894     +                    select a.*, b.name as selected
26895     +                    from &em_lib..&idsnode._variableset as a left join &EM_USER_tempmeta as b
26896     +                        on a.name eq b.name
26897     +                ;
26898     +                create table &EM_USER_VARSUM as
26899     +                    select role,level, count(distinct name) as count, sum(selected ne ' ') as sel_count
26900     +                    from tempselected
26901     +                    group by role, level
26902     +                    order by role, level
26903     +                ;
26904     +            quit;
26906     +            ods &EM_REPORT_FORMAT text=" ";
26907     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptvarsummary_title, NOQUOTE))";
26908     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptvarsummary_title, NOQUOTE))";
26910     +            data &EM_USER_VARSUM;
26911     +                format role $50. level $50.;
26912     +                set &EM_USER_VARSUM;
26914     +                role  = upcase(strip(role));
26915     +                level = upcase(strip(level));
26917     +                     if role eq 'ASSESS'         then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_assess_vlabel, NOQUOTE))";
26918     +                else if role eq 'COST'           then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_cost_vlabel, NOQUOTE))";
26919     +                else if role eq 'CENSOR'         then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_censor_vlabel, NOQUOTE))";
26920     +                else if role eq 'CROSSID'        then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_crossid_vlabel, NOQUOTE))";
26921     +                else if role eq 'FREQ'           then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_freq_vlabel, NOQUOTE))";
26922     +                else if role eq 'GROUP'          then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_group_vlabel, NOQUOTE))";
26923     +                else if role eq 'DECISION'       then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_decision_vlabel, NOQUOTE))";
26924     +                else if role eq 'CLASSIFICATION' then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_classification_vlabel, NOQUOTE))";
26925     +                else if role eq 'KEY'            then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_key_vlabel, NOQUOTE))";
26926     +                else if role eq 'MISSING'        then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_missing_vlabel, NOQUOTE))";
26927     +                else if role eq 'PREDICT'        then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_predict_vlabel, NOQUOTE))";
26928     +                else if role eq 'REFERRER'       then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_referrer_vlabel, NOQUOTE))";
26929     +                else if role eq 'REJECTED'       then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_rejected_vlabel, NOQUOTE))";
26930     +                else if role eq 'SEGMENT'        then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_segment_vlabel, NOQUOTE))";
26931     +                else if role eq 'SEQUENCE'       then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_sequence_vlabel, NOQUOTE))";
26932     +                else if role eq 'TEXT'           then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_text_vlabel, NOQUOTE))";
26933     +                else if role eq 'TIMEID'         then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_timeid_vlabel, NOQUOTE))";
26934     +                else if role eq 'TRIAL'          then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_trial_vlabel, NOQUOTE))";
26935     +                else if role eq 'ID'             then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_id_vlabel, NOQUOTE))";
26936     +                else if role eq 'INPUT'          then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_input_vlabel, NOQUOTE))";
26937     +                else if role eq 'TARGET'         then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_target_vlabel, NOQUOTE))";
26938     +                else if role eq 'TREATMENT'      then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_treatment_vlabel, NOQUOTE))";
26939     +                else if role eq 'RESIDUAL '      then role= "%sysfunc(sasmsg(sashelp.dmine, rpt_residual_vlabel, NOQUOTE))";
26940     +                else if role eq 'LABEL'          then role= "%sysfunc(sasmsg(sashelp.dmine, meta_label_vlabel, NOQUOTE))";
26942     +                     if level eq 'INTERVAL'  then level = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpm_interval_vlabel , NOQUOTE))";
26943     +                else if level eq 'NOMINAL'   then level = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpm_nominal_vlabel , NOQUOTE))";
26944     +                else if level eq 'ORDINAL'   then level = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpm_ordinal_vlabel , NOQUOTE))";
26945     +                else if level eq 'BINARY'    then level = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpm_binary_vlabel , NOQUOTE))";
26946     +                else if level eq 'UNARY'     then level = "%sysfunc(sasmsg(sashelp.dmine, rpt_rpm_unary_vlabel , NOQUOTE))";
26948     +                role  = strip(role);
26949     +                level = strip(level);
26950     +            run;
26952     +            proc print data=&EM_USER_VARSUM label noobs style=[outputwidth=50%];
26953     +                var role level count sel_count;
26954     +                label role      = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptrole_vlabel, NOQUOTE))"
26955     +                      level     = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptlevel_vlabel, NOQUOTE))"
26956     +                      count     = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptorigcount_vlabel, NOQUOTE))"
26957     +                      sel_count = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptselcount_vlabel, NOQUOTE))";
26958     +            run;
26960     +            proc delete data=tempselected; run;
26961     +        %end;
26962     +    %end;  /* end of --&EM_PROPERTY_SUMMARIZATION eq Y           --*/
26963     +/* three output in this section: datasum, targetsum, varsum      --*/
26964     +%end; /* end of &em_report_modelId ne - end of block 3.1,3.2,3.3 --*/
26967     +/***** RPM-4. varRank and Scorecard ************************************************************************/
26969     +%if &em_report_modelId ne  and %sysfunc(exist(&idstmeta)) and &RPM_REPORT_SCORENODE ne  %then %do;
26971     +    %EM_GETNAME(key=VARRANK,   type=DATA);
26972     +    %EM_GETNAME(key=SCORECARD, type=DATA);
26974     +    %if "&rpt_rpm_targetLevel" ne "INTERVAL"
26975     +        %then %let scorecard_target = &catTarget;
26976     +        %else %let scorecard_target = &rpt_rpm_predvar;
26978     +    %if &runHP eq 0 %then %do;
26980     +        %global EM_SUMMARY_REPORT_MAXOBS  EM_SUMMARY_REPORT_SAMPLEMETHOD ;
26982     +        %if &EM_SUMMARY_REPORT_MAXOBS ne  %then %do;
26983     +            %let maxobs = &EM_SUMMARY_REPORT_MAXOBS;
26984     +        %end;
26985     +        %else %do;
26986     +            %exploreObs(data=&em_lib..&em_report_modelid._train);
26987     +            %let maxobs = &_EXPLOREOBS_MAX;
26988     +        %end;
26990     +        %if "&EM_SUMMARY_REPORT_SAMPLEMETHOD" ne ""
26991     +            %then  %let sampleMethod = &EM_SUMMARY_REPORT_SAMPLEMETHOD;
26992     +            %else  %let sampleMethod = RANDOM;
26994     +        %exploreSample(
26995     +            data     = &em_lib..&em_report_modelid._train,
26996     +            seed     = 12345,
26997     +            output   = &em_report_modelid._trainsample,
26998     +            method   = &sampleMethod,
26999     +            size     = &maxobs,
27000     +            sizetype = obs,
27001     +            metaData = &em_lib..&em_report_modelid._cmeta_train
27002     +        );
27004     +        %em_reporter_scorecard(
27005     +            indata        = %str(&em_report_modelid._trainsample),
27006     +            indata2       = %str(&em_lib..&em_report_modelid._train),
27007     +            inVariableSet = &EM_USER_tempmeta,
27008     +            name          = &name_to_use,
27009     +            libname       = work,
27010     +            crosstab      = &EM_PROPERTY_CROSSTABS,
27011     +            targetVar     = &scorecard_target,
27012     +            targetVar2    = &rpt_rpm_targetName,
27013     +            targetLevel   = &rpt_rpm_targetLevel,
27014     +            freqVar       = &freqVar,
27015     +            outVarRank    = &EM_USER_VarRank,
27016     +            outScoreCard  = &EM_USER_ScoreCard
27017     +        );
27019     +        proc sort data=&em_lib..&idsnode._variableset
27020     +            out=templabel(keep=&name_to_use label %if &vvnflag eq 1 %then %do; name %end;);
27021     +            by &name_to_use;
27022     +        run;
27024     +        %if %sysfunc(exist(&EM_USER_ScoreCard)) ne 0 %then %do;
27026     +            proc sort data=&EM_USER_ScoreCard;
27027     +                by displayVar;
27028     +            data &EM_USER_ScoreCard;
27029     +                merge &EM_USER_ScoreCard(in=_a) templabel(rename=(&name_to_use=displayVar label=emrpmtmp_lbael));
27030     +                by displayVar;
27031     +                if _a;
27032     +                %if &vvnflag eq 1 %then %do;
27033     +                    if ^missing(name)  then displayvar=name;
27034     +                %end;
27035     +                if ^missing(emrpmtmp_lbael) then displayvar=emrpmtmp_lbael;
27036     +                drop emrpmtmp_lbael name;
27037     +            run;
27039     +        %end;
27041     +        %if %sysfunc(exist(&EM_USER_VarRank)) ne 0 %then %do;
27043     +            proc sort data=&EM_USER_VarRank;
27044     +                by variable;
27045     +            data &EM_USER_VarRank;
27046     +                merge &EM_USER_VarRank(in=_a) templabel(rename=(&name_to_use=variable));
27047     +                by variable;
27048     +                if _a;
27049     +                if missing(label) then do;
27050     +                    label = variable;
27051     +                    %if &vvnflag eq 1 %then %do;
27052     +                        if ^missing(name) then label=name;
27053     +                    %end;
27054     +                end;
27055     +            proc sort data=&EM_USER_VarRank;
27056     +                by descending rank;
27057     +            run;
27059     +        %end;
27061     +        %if %sysfunc(exist(&EM_USER_VarRank)) ne 0 and &EM_PROPERTY_VARRANKING eq Y %then %do;
27062     +            /* generate gtable like listing of variable importance */
27063     +            ods path(prepend) work.templat(update);
27064     +            proc template;
27065     +                define statgraph Rules / store=work.templat ;
27066     +                    begingraph / designheight=470px;
27067     +                        %if "&EM_REPORT_TITLE" ne ""
27068     +                            %then %do; entrytitle "&EM_REPORT_TITLE"; %end;
27069     +                            %else %do; entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
27070     +                        entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_rptvarranking_title, NOQUOTE))";
27071     +                        layout lattice / columns=2 rowdatarange=union columnweights=(0.9 0.1) columngutter=0;
27072     +                            rowaxes; rowaxis; endrowaxes;
27073     +                            layout overlay / xaxisopts=(display=(line));
27074     +                                barchart x=label y=worth / orient=horizontal;
27075     +                            endlayout;
27076     +                        endlayout;
27077     +                    endgraph;
27078     +                end;
27079     +            run;
27080     +            proc sgrender data=&EM_USER_VARRANK template=Rules; run;
27081     +        %end;
27082     +    %end;
27083     +    %else %do;
27085     +        %if &rpt_rpm_isHP eq 1
27086     +            %then %let scorecard_lib = &rpt_rpm_datalib;
27087     +            %else %let scorecard_lib = work;
27089     +        ods &EM_REPORT_FORMAT exclude all;
27090     +        ods listing;
27091     +        %hpdm_scorecard(
27092     +            indata        = %str(&em_lib..&em_report_modelID._train),
27093     +            inVariableSet = &EM_USER_tempmeta,
27094     +            name          = &name_to_use,
27095     +            libname       = &scorecard_lib,
27096     +            crosstab      = &EM_PROPERTY_CROSSTABS,
27097     +            targetVar     = &scorecard_target,
27098     +            targetVar2    = &rpt_rpm_targetName,
27099     +            targetLevel   = &rpt_rpm_targetLevel,
27100     +            freqVar       = &freqVar,
27101     +            outVarRank    = &EM_USER_VarRank,
27102     +            outScoreCard  = &EM_USER_ScoreCard
27103     +        );
27104     +        ods listing close;
27105     +        ods &EM_REPORT_FORMAT select all;
27107     +        /* 3.4 - Variable Ranking from PROC HPREDUCE */
27109     +        %if &EM_PROPERTY_VARRANKING eq Y %then %do;
27110     +            ods &EM_REPORT_FORMAT text=" ";
27111     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptvarranking_title, NOQUOTE))";
27112     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptvarranking_title, NOQUOTE))";
27113     +            proc print data=&EM_USER_VARRANK noobs;
27114     +                var number variable;
27115     +            run;
27116     +        %end;
27117     +    %end;
27118     + %end;
27121     +/* RPM-5. Cumulative Lift chart *********************************************************************/
27123     +%if &EM_PROPERTY_LIFTCHART eq Y %then %do;
27125     +    %let em_rank = &em_lib..%sysfunc(trim(&em_report_modelid))_emrank;
27127     +    %if %sysfunc(exist(&em_rank)) %then %do;
27129     +        %EM_GETNAME(key=LIFT, type=DATA);
27130     +        data &EM_USER_LIFT;
27131     +            set &em_rank end=eof;
27132     +            if eof then call symput("_tarexists_", strip(target));
27134     +                 if upcase(strip(datarole)) eq 'TRAIN'    then datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_roletrain_value,    NOQUOTE))";
27135     +            else if upcase(strip(datarole)) eq 'RAW'      then datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_roleraw_value,      NOQUOTE))";
27136     +            else if upcase(strip(datarole)) eq 'VALIDATE' then datarole = "%sysfunc(sasmsg(sashelp.dmine, rpt_rolevalidate_value, NOQUOTE))";
27137     +            datarole = strip(datarole);
27138     +        run;
27140     +        %let em_class=&em_lib..%sysfunc(trim(&em_report_modelid))_emclassification;
27142     +        %if (%sysfunc(exist(&em_class)) and "&rpt_rpm_targetLevel" ne "INTERVAL" )
27143     +        %then %do;
27144     +            %let this_title = rpt_rptcumliftchart_title;
27145     +            %let this_plotY = liftc;
27146     +        %end;
27147     +        %else %do;
27148     +            %let this_title = rpt_rptmeanpredresp_title;
27149     +            %let this_plotY = _MEANP_;
27150     +        %end;
27152     +        ods path(prepend) work.templat(update);
27153     +        proc template;
27154     +            define statgraph liftplot / store=work.templat;
27155     +                begingraph / designheight=470px;
27156     +                    %if "&EM_REPORT_TITLE" ne ""
27157     +                        %then %do; entrytitle "&EM_REPORT_TITLE"; %end;
27158     +                        %else %do; entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
27159     +                    entrytitle "%sysfunc(sasmsg(sashelp.dmine, &this_title, NOQUOTE))";
27160     +                    layout overlay;
27161     +                        seriesplot x=decile y=&this_plotY
27162     +                            / group =datarole lineattrs=(pattern=solid) name='lift';
27163     +                        discretelegend 'lift' ;
27164     +                    endlayout;
27165     +                endgraph;
27166     +            end;
27167     +        run;
27169     +        proc sgrender data=&EM_USER_LIFT
27170     +            %if "&_tarexists_" ne "." %then %do; (where=(target="&rpt_rpm_targetName")) %end;
27171     +            template=liftplot;
27172     +        run;
27173     +    %end;
27174     +%end;
27176     +/* RPM-6. Cumulative captured response chart *********************************************************/
27178     +%if &EM_PROPERTY_BASICOUTPUT eq Y %then %do;
27180     +    %EM_GETNAME(key=CAPRESPONSE, type=DATA);
27182     +    %let em_report_rank = &em_lib..%sysfunc(trim(&em_report_modelid))_emrank;
27184     +    %if %sysfunc(exist(&em_report_rank)) %then %do;
27186     +        %let em_report_class = &em_lib..%sysfunc(trim(&em_report_modelid))_emclassification;
27188     +        %if (%sysfunc(exist(&em_report_class)) and "&rpt_rpm_targetLevel" ne "INTERVAL" ) %then %do;
27190     +            /* generate % values and create categorical x values for plotting purposes */
27191     +            data &EM_USER_CAPRESPONSE;
27192     +                set &em_report_rank end=eof;
27193     +                length baseCat bestCat capCat decCat liftCat liftCCat $5;
27194     +                format basecapcp bestcapcp capcp decilep PERCENT6.0;
27195     +                basecapcp = basecapc / 100;  baseCat= put(basecapcp, PERCENT6.0 -L);
27196     +                bestcapcp = bestcapc / 100;  bestCat= put(bestcapcp, PERCENT6.0 -L);
27197     +                capcp     = capc / 100;      capCat = put(capcp, PERCENT6.0 -L);
27198     +                decilep   = decile / 100;    decCat = put(decilep, PERCENT6.0 -L);
27199     +                liftCat = lift;
27200     +                liftCCat= liftC;
27201     +                if eof then call symput("_tarexists_", strip(target));
27202     +            run;
27204     +            /* create template for Captured Response Plot */
27206     +            ods path(prepend) work.templat(update);
27207     +            proc template;
27208     +                define statgraph reg_emrank / store=work.templat;
27209     +                    begingraph / designheight=470px;
27210     +                    %if "&EM_REPORT_TITLE" ne ""
27211     +                        %then %do; entrytitle "&EM_REPORT_TITLE"; %end;
27212     +                        %else %do; entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
27213     +                        entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodelgains_title, NOQUOTE))";
27214     +                        layout overlay / cycleattrs=true xaxisopts=(display=(LINE)) yaxisopts=(label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcumcaptresponse_vlabel, NOQUOTE))");
27215     +                            seriesplot x=deccat y=basecapcp / lineattrs=(pattern=solid) name='base'  legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_rptbase_vlabel, NOQUOTE))";
27216     +                            seriesplot x=deccat y=bestcapcp / lineattrs=(pattern=solid) name='best'  legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_rptbest_vlabel, NOQUOTE))";
27217     +                            seriesplot x=deccat y=capcp     / lineattrs=(pattern=solid) name='model' legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodel_vlabel, NOQUOTE))";
27218     +                            innermargin / align=bottom;
27219     +                                blockplot x=deccat block=liftCcat / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcumlift_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
27220     +                                                                    repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata5 altfillattrs=graphdata5;
27221     +                                blockplot x=deccat block=liftcat  / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptlift_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
27222     +                                                                    repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata4 altfillattrs=graphdata4;
27223     +                                blockplot x=deccat block=capcat   / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodel_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
27224     +                                                                    repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata3 altfillattrs=graphdata3;
27225     +                                blockplot x=deccat block=bestcat  / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptbest_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
27226     +                                                                    repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata2 altfillattrs=graphdata2;
27227     +                                blockplot x=deccat block=deccat   / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptdecile_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
27228     +                                                                    repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdatadefault altfillattrs=graphdatadefault;
27229     +                            endinnermargin;
27230     +                            * discretelegend "base" "best" "model" / across=1 location=inside halign=right valign=bottom;
27231     +                        endlayout;
27232     +                    endgraph;
27233     +                end;
27234     +            run;
27235     +        %end;
27236     +        %else %do;
27238     +            /* generate % values and create categorical x values for plotting purposes */
27239     +            data &EM_USER_CAPRESPONSE;
27240     +                set &em_report_rank end=eof;
27241     +                length decCat $5;
27242     +                format  decilep PERCENT6.0;
27243     +                decilep = decile / 100;
27244     +                decCat = put(decilep, PERCENT6.0 -L);
27245     +                if eof then call symput("_tarexists_", strip(target));
27246     +            run;
27248     +            /* create template for Captured Response Plot */
27249     +            ods path(prepend) work.templat(update);
27250     +            proc template;
27251     +                define statgraph reg_emrank / store=work.templat;
27252     +                    begingraph / designheight=470px ;
27253     +                    %if "&EM_REPORT_TITLE" ne ""
27254     +                        %then %do; entrytitle "&EM_REPORT_TITLE"; %end;
27255     +                        %else %do; entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
27256     +                        entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_rptmodelgainspred_title, NOQUOTE))";
27257     +                        layout overlay / cycleattrs=true xaxisopts=(display=(LINE)) yaxisopts=(label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptpredresp_vlabel, NOQUOTE))");
27258     +                            seriesplot x=deccat y=_meanp_ / lineattrs=(pattern=solid) name='mean' legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_mean_vlabel, NOQUOTE))";
27259     +                            seriesplot x=deccat y=_minp_ / lineattrs=(pattern=solid) name='min' legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_minimum_vlabel, NOQUOTE))";
27260     +                            seriesplot x=deccat y=_maxp_     / lineattrs=(pattern=solid) name='max' legendlabel="%sysfunc(sasmsg(sashelp.dmine, rpt_maximum_vlabel, NOQUOTE))";
27261     +                            innermargin / align=bottom;
27262     +                                blockplot x=deccat block=_targetmean_  / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttargetmean_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
27263     +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata5 altfillattrs=graphdata5;
27264     +                                blockplot x=deccat block=_targetmin_   / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttargetmin_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
27265     +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata4 altfillattrs=graphdata4;
27266     +                                blockplot x=deccat block=_targetmax_   / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rpttargetmax_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
27267     +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata3 altfillattrs=graphdata3;
27268     +                                blockplot x=deccat block=_meanp_       / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptpredmean_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
27269     +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata5 altfillattrs=graphdata5;
27270     +                                blockplot x=deccat block=_minp_        / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptpredmin_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
27271     +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata4 altfillattrs=graphdata4;
27272     +                                blockplot x=deccat block=_maxp_        / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptpredmax_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
27273     +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdata3 altfillattrs=graphdata3;
27274     +                                blockplot x=deccat block=deccat        / label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptdecile_vlabel, NOQUOTE))" valuehalign=center filltype=alternate
27275     +                                                                         repeatedvalues=true valueattrs=(size=7) VALUEFITPOLICY=SHRINK  fillattrs=graphdatadefault altfillattrs=graphdatadefault;
27276     +                            endinnermargin;
27277     +                            * discretelegend "mean" "min" "max" / across=1 location=inside halign=left valign=bottom;
27278     +                        endlayout;
27279     +                    endgraph;
27280     +                end;
27281     +            run;
27282     +        %end;
27284     +        /* render plot */
27286     +        %let validflag=0;
27287     +        data tempvalid;
27288     +            set &EM_USER_CAPRESPONSE(where=(datarole="VALIDATE"));
27289     +        run;
27291     +        %let dsid = %sysfunc(open(work.tempvalid));
27292     +        %if &dsid %then %do;
27293     +            %let validobs = %sysfunc(attrn(&dsid, NOBS));
27294     +            %if &validobs gt 0 %then %let validflag = 1;
27295     +        %end;
27296     +        %if &dsid %then %let dsid = %sysfunc(close(&dsid));
27298     +        proc sgrender data=&EM_USER_CAPRESPONSE
27299     +            %if "&_tarexists_" ne "." %then %do; (where=(target="&rpt_rpm_targetName"))%end;
27300     +            template=reg_emrank;
27301     +            %if &validflag eq 1
27302     +                %then %do; where datarole="VALIDATE"; %end;
27303     +                %else %do; where datarole="TRAIN";    %end;
27304     +        run;
27305     +    %end;
27306     +%end;
27309     +/* RPM-7. ROC CHART ******************************************************************************************/
27311     +%if ((&RPM_REPORT_MDLCOMP ne ) or (&em_report_modelid ne )) and (&EM_PROPERTY_BASICOUTPUT eq Y) %then %do;
27313     +    %let em_report_roc = &em_lib..&RPM_REPORT_MDLCOMP._emroc;
27314     +    %let em_report_hpassess = &em_lib..%sysfunc(trim(&em_report_modelid))_hpassess;
27315     +    %let em_report_hpstats  = &em_lib..%sysfunc(trim(&em_report_modelid))_hpreportstats;
27317     +    %EM_GETNAME(key=ROC, type=DATA);
27318     +    %let plot_KS  = 0;
27319     +    %let plot_ROC = 0;
27320     +    %let train_X  = 0; %let train_Y  = 0; %let train_KS = 0;
27321     +    %let valid_X  = 0; %let valid_Y  = 0; %let valid_KS = 0;
27323     +    %if %sysfunc(exist(&em_report_roc)) %then %do;
27325     +        proc sql noprint;
27326     +            select count(*) into :validroc from &em_report_roc where datarole eq "VALIDATE";
27327     +        quit;
27329     +        /* make the ROC table */
27330     +        data &EM_USER_ROC;
27331     +            length group $32 diff 8;
27332     +            label group="&em_report_modeldesc %sysfunc(sasmsg(sashelp.dmine, rpt_rptmodel_vlabel, NOQUOTE))";
27333     +            set &em_report_roc;
27334     +            if strip(model)='_Baseline_'
27335     +                then group='Baseline';
27336     +                else group=Datarole;
27337     +            where (strip(model) ='_Baseline_' and DataRole='TRAIN') or (strip(model)= "&em_report_modelid" and DataRole in('TRAIN','VALIDATE'));
27338     +            diff = sensitivity-oneminusspecificity;
27339     +        run;
27341     +        /* get KS statistics */
27343     +        proc sql noprint;
27344     +            create table ks_stat as
27345     +                select distinct datarole, max(diff) as ks from &EM_USER_ROC group by datarole;
27346     +            select round(ks, 0.00001) into :train_ks
27347     +                from ks_stat where datarole eq 'TRAIN';
27348     +            select round(ks, 0.00001) into :valid_ks
27349     +                from ks_stat where datarole eq 'VALIDATE';
27350     +            select oneMinusSpecificity, sensitivity into :train_x, :train_y
27351     +                from &EM_USER_ROC where datarole eq 'TRAIN' and round(diff, 0.00001) eq &train_ks;
27352     +            select oneMinusSpecificity, sensitivity into :valid_x, :valid_y
27353     +                from &EM_USER_ROC where datarole eq 'VALIDATE' and round(diff, 0.00001) eq &valid_ks;
27354     +        quit;
27356     +        %let plot_KS = 1;
27357     +        %let plot_ROC = 1;
27358     +    %end;
27359     +    %else %if %sysfunc(exist(&em_report_hpassess)) and "&rpt_rpm_targetLevel" ne "INTERVAL" %then %do;
27361     +        /* make the ROC table */
27363     +        proc sql noprint;
27364     +            select count(*) into :validroc from &em_report_hpassess where datarole eq "VALIDATE";
27365     +        quit;
27367     +        data &EM_USER_ROC;
27368     +            length group $32;
27369     +            group='Baseline';
27370     +            sensitivity = 0; oneminusspecificity = 0; output;
27371     +            sensitivity = 1; oneminusspecificity = 1; output;
27372     +        run;
27374     +        data &EM_USER_ROC;
27375     +            length group $32;
27376     +            set &em_report_hpassess(in=in1 rename=(one_minus_specificity=oneminusspecificity)) &EM_USER_ROC;
27377     +            if in1 then group=datarole;
27378     +            label group="&em_report_modeldesc %sysfunc(sasmsg(sashelp.dmine, rpt_rptmodel_vlabel, NOQUOTE))";
27379     +        run;
27381     +        /* get KS statistics */
27383     +        %if %sysfunc(exist(&em_report_hpstats)) %then %do;
27385     +             data _null_;
27386     +                set &em_report_hpstats;
27387     +                if upcase(stat) eq 'KSREF' then call symput('train_X', put(train,best24.));
27388     +                if upcase(stat) eq 'KSR'   then call symput('train_KS',round(train,0.00001));
27389     +                %if &validroc ge 1 %then %do;
27390     +                    if upcase(stat) eq 'KSREF' then call symput('valid_X', put(validate,best24.));
27391     +                    if upcase(stat) eq 'KSR'   then call symput('valid_KS',round(validate,0.00001));
27392     +                %end;
27393     +            run;
27395     +            data _null_;
27396     +                tmp=&train_X+&train_KS/100; call symput('train_Y',put(tmp,best24.));
27397     +                tmp=&valid_X+&valid_KS/100; call symput('valid_Y',put(tmp,best24.));
27398     +            run;
27400     +            %if &train_Y gt 0 %then %let plot_KS = 1;
27401     +            %let plot_ROC = 1;
27402     +        %end;
27403     +    %end;
27405     +    %if &plot_ROC eq 1 %then %do;
27407     +        /* add coordinates for ref lines */
27408     +        data refline;
27409     +            length oneminusspecificity sensitivity x y 8 datarole $8 group $32 text $60;
27410     +            %if &train_Y gt 0 %then %do;
27411     +                oneminusspecificity=&TRAIN_X; sensitivity=&TRAIN_Y; datarole='TRAIN'; group='TRAIN';
27412     +                text=""; x=.; y=.; output;
27413     +                oneminusspecificity=&TRAIN_X; sensitivity=&TRAIN_X; datarole='TRAIN'; group='TRAIN';
27414     +                text=catx(' = ',"%sysfunc(sasmsg(sashelp.dmine, rpt_trainks_vlabel, NOQUOTE))","&train_KS"); x=&TRAIN_X; y=&TRAIN_X - 0.05; output;
27415     +                oneminusspecificity=&TRAIN_X; sensitivity=&TRAIN_Y; datarole='TRAIN'; group='TRAIN';
27416     +                text=""; x=.; y=.; output;
27417     +            %end;
27418     +            %if &validroc ge 1 and &valid_Y gt 0 %then %do;
27419     +                oneminusspecificity=&VALID_X; sensitivity=&VALID_Y; datarole='VALIDATE'; group='VALIDATE';
27420     +                text=""; x=.; y=.; output;
27421     +                oneminusspecificity=&VALID_X; sensitivity=&VALID_X; datarole='VALIDATE'; group='VALIDATE';
27422     +                text=catx(' = ',"%sysfunc(sasmsg(sashelp.dmine, rpt_validks_vlabel, NOQUOTE))","&valid_KS"); x=&VALID_X; y=&VALID_X - 0.05; output;
27423     +                oneminusspecificity=&VALID_X; sensitivity=&VALID_Y; datarole='VALIDATE'; group='VALIDATE';
27424     +                text=""; x=.; y=.; output;
27425     +            %end;
27426     +        data &EM_USER_ROC;
27427     +           set &EM_USER_ROC refline;
27428     +           if group eq 'TRAIN'    then group = "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel, NOQUOTE))";
27429     +           if group eq 'VALIDATE' then group = "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel, NOQUOTE))";
27430     +           if group eq 'Baseline' then group = "%sysfunc(sasmsg(sashelp.dmine, rpt_baselineroc_value, NOQUOTE))";
27431     +        run;
27433     +        /* plot ROC chart */
27434     +        ods path(prepend) work.templat(update);
27435     +        proc template;
27436     +            define statgraph rocplot / store=work.templat;
27437     +                begingraph / designheight=470px;
27438     +                    %if "&EM_REPORT_TITLE" ne ""
27439     +                        %then %do; entrytitle "&EM_REPORT_TITLE"; %end;
27440     +                        %else %do; entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_reporttitleone_title, NOQUOTE))"; %end;
27441     +                    entrytitle "%sysfunc(sasmsg(sashelp.dmine, rpt_rptroc_title, NOQUOTE))";
27442     +                    layout overlay;
27443     +                        seriesplot x=oneminusspecificity y=sensitivity / group =group lineattrs=(pattern=solid) name='series';
27444     +                        %if &plot_ks eq 1 %then %do;
27445     +                            scatterplot x=x y=y / group=group datalabel=text  datalabelattrs=(weight=bold) markerattrs=(size=0px);
27446     +                        %end;
27447     +                        discretelegend 'series' / title="&em_report_modeldesc  %sysfunc(sasmsg(sashelp.dmine, rpt_rptmodel_vlabel, NOQUOTE))";
27448     +                    endlayout;
27449     +                endgraph;
27450     +            end;
27451     +        run;
27453     +        proc sort data=&EM_USER_ROC; by group oneminusspecificity; run;
27454     +        proc sgrender data=&EM_USER_ROC template=rocplot; run;
27455     +        title1; title2;
27456     +    %end;
27457     +%end;
27459     +/* RPM-8. Scorecard *****************************************************************************************/
27461     +%if &EM_PROPERTY_BASICOUTPUT eq Y %then %do;
27463     +    %if %sysfunc(exist(&EM_USER_ScoreCard)) ne 0 and &runHP eq 0 %then %do;
27465     +        %let ColPercNum = 0;
27466     +        %let sdsid = %sysfunc(open(&EM_USER_SCORECARD));
27467     +        %let colPercnum = %sysfunc(varnum(&sdsid, colPercent));
27468     +        %if &sdsid %then %let sdsid = %sysfunc(close(&sdsid));
27470     +        %let tmpstr1 = %sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_scpoints, NOQUOTE));
27471     +        %let tmpstr2 = %sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_overall, NOQUOTE));
27472     +        %let tmpstr3 = %sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_singleN, NOQUOTE));
27474     +        %if &EM_PROPERTY_CROSSTABS eq Y and "&rpt_rpm_targetLevel" ne "INTERVAL" and &colPercnum gt 0
27475     +        %then %do;
27477     +            ods &EM_REPORT_FORMAT text=" ";
27478     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_crosstab_title, NOQUOTE))";
27479     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_crosstab_title, NOQUOTE))";
27481     +            proc tabulate data=&EM_USER_SCORECARD order=data noseps;
27482     +                class displayvar rowVariable varvalue &rpt_rpm_targetName / missing;
27483     +                var allfreq allPercent scorepoints colpercent frequency;
27484     +                keylabel sum=" ";
27485     +                table displayvar*varvalue,
27486     +                    (scorepoints="&tmpstr1" allfreq="&tmpstr2 &tmpstr3" allpercent="&tmpstr2 %" )
27487     +                    &rpt_rpm_targetName*(frequency="&tmpstr3" colPercent="%" )
27488     +                    / indent=3 rtspace=32 style=[outputwidth=100%];
27489     +            run; quit;
27490     +        %end;
27491     +        %else %do;
27493     +            ods &EM_REPORT_FORMAT text=" ";
27494     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptrpmscorecard_title, NOQUOTE))";
27495     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptrmpscorecard_title, NOQUOTE))";
27497     +            proc tabulate data = &EM_USER_SCORECARD order=data noseps;
27498     +                class displayvar / missing;
27499     +                keylabel sum=" ";
27500     +                class varvalue / missing;
27501     +                var scorepoints;
27502     +                table displayvar*varvalue, (scorepoints="&tmpstr1")*sum
27503     +                    / misstext = " " indent = 3 rtspace=32;
27504     +            run; quit;
27505     +         %end;
27506     +    %end;
27509     +    %if %sysfunc(exist(&EM_USER_ScoreCard)) ne 0 and &runHP eq 1 %then %do;
27511     +        %if &EM_PROPERTY_CROSSTABS eq Y and "&rpt_rpm_targetLevel" ne "INTERVAL" %then %do;
27512     +            ods &EM_REPORT_FORMAT text=" ";
27513     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_crosstab_title, NOQUOTE))";
27514     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_crosstab_title, NOQUOTE))";
27515     +            proc tabulate data=&EM_USER_SCORECARD order=data noseps;
27516     +                class displayvar rowVariable displayLvl &rpt_rpm_targetName / MISSING;
27517     +                var allfreq allPercent scorepoints colpercent frequency;
27518     +                keylabel sum=" ";
27519     +                table displayvar * displayLvl, (scorepoints="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_scpoints, NOQUOTE))" allfreq="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_overall, NOQUOTE)) N"
27519    !+allpercent="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_overall, NOQUOTE)) %" )
27520     +                    &rpt_rpm_targetName*(frequency="N" colPercent="%" )
27521     +                    / indent=3 rtspace=32 style=[outputwidth=100%];
27522     +            run; quit;
27523     +        %end;
27524     +        %else %do;
27525     +            ods &EM_REPORT_FORMAT text=" ";
27526     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptrpmscorecard_title, NOQUOTE))";
27527     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptrpmscorecard_title, NOQUOTE))";
27528     +            proc tabulate data = &EM_USER_SCORECARD order=data noseps;
27529     +                class displayvar / MISSING;
27530     +                keylabel sum=" ";
27531     +                class displayLvl / missing;
27532     +                var SCOREPOINTS;
27533     +                table displayvar * displayLvl, (scorepoints="%sysfunc(sasmsg(sashelp.dmine, rpt_rptscorecard_scpoints, NOQUOTE))")  * sum / misstext = " "
27534     +                      indent = 3 rtspace=32 style=[outputwidth=50%];
27535     +            run; quit;
27536     +        %end;
27537     +    %end;
27538     +%end;
27540     +%if &RPM_REPORT_SCORENODE ne %then %do;
27542     +    /* RPM-9. Classification matrix *********************************************************************/
27544     +    %if &EM_PROPERTY_CLASSIFICATION eq Y %then %do;
27546     +        %let em_report_class = &em_lib..%sysfunc(trim(&em_report_modelid))_emclassification;
27548     +        %if %sysfunc(exist(&em_report_class)) %then %do;
27550     +            %EM_GETNAME(key=MISCLASS, type=DATA);
27551     +            data &EM_USER_MISCLASS;
27552     +                set &em_report_class;
27553     +                where _TYPE_="PREDICTION" AND TARGET="&rpt_rpm_targetName";
27554     +            run;
27556     +            %let numobs=0;
27557     +            %let dsid = %sysfunc(open(&EM_USER_MISCLASS));
27558     +            %let numobs = %sysfunc(attrn(&dsid, NOBS));
27559     +            %if &dsid %then %let dsid = %sysfunc(close(&dsid));
27561     +            %if (%sysfunc(exist(&em_USER_MISCLASS)) and &numobs gt 0) %then %do;
27563     +                ods &EM_REPORT_FORMAT text=" ";
27564     +                %if "%nrbquote(&rpt_rpm_targetLabel)" ne "" %then %do;
27565     +                    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptclassmatrix_title, NOQUOTE, %nrstr(&rpt_rpm_targetLabel)))";
27566     +                    ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptclassmatrix_title, NOQUOTE, %nrstr(&rpt_rpm_targetLabel)))";
27567     +                %end;
27568     +                %else %do;
27569     +                    ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptclassmatrix_title, NOQUOTE, &rpt_rpm_targetName))";
27570     +                    ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptclassmatrix_title, NOQUOTE, &rpt_rpm_targetName))";
27571     +                %end;
27573     +                proc tabulate data=&EM_USER_MISCLASS order=data noseps;
27574     +                    keylabel sum=" ";
27575     +                    class from into datarole;
27576     +                    var pct_col;
27577     +                    table from , (datarole*into='Predicted') * pct_col="" / style=[outputwidth=50%];
27578     +                run; quit;
27579     +            %end;
27580     +        %end;
27581     +    %end;
27583     +    /* RPM-10. Fit Statistics **************************************************************************/
27585     +    %if &EM_PROPERTY_FITSTAT eq Y %then %do;
27587     +        %let fitdat1 =&em_lib..&RPM_REPORT_MDLCOMP._emreportfit;
27588     +        %let fitdat2 =&em_lib..&em_report_modelid._emreportfit;
27590     +        /* prefer to use HPREPORTSTATS table from the modeling nodel */
27592     +        %if %sysfunc(exist(&em_lib..&em_report_modelid._hpreportstats)) %then %do;
27594     +            %EM_GETNAME(key=REPORTFIT, type=DATA);
27596     +            data &EM_USER_REPORTFIT;
27597     +                set &em_lib..&em_report_modelid._hpreportstats;
27598     +            run;
27600     +            %let validfit=0;
27601     +            %let dsid = %sysfunc(open(&EM_USER_REPORTFIT));
27602     +            %if &dsid %then %do;
27603     +                %let validnum = %sysfunc(VARNUM(&dsid, VALIDATE));
27604     +                %if &validnum %then %let validfit = 1;
27605     +            %end;
27606     +            %if &dsid %then %let dsid = %sysfunc(close(&dsid));
27608     +            ods &EM_REPORT_FORMAT text=" ";
27609     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_modelfitstat_title, NOQUOTE))";
27610     +            ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelfitstat_title, NOQUOTE))";
27612     +            proc print data=&EM_USER_REPORTFIT label noobs style=[outputwidth=50%];
27613     +                %if &validfit eq 1 %then %do;
27614     +                    var Label Train Validate;
27615     +                    format Train 12.4 Validate 12.4;
27616     +                    label Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))"
27617     +                        train = "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , NOQUOTE))"
27618     +                        validate = "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel , NOQUOTE))";
27619     +                %end;
27620     +                %else %do;
27621     +                    var Label Train;
27622     +                    label Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))"
27623     +                        train = "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , NOQUOTE))";
27624     +                    format Train 12.4;
27625     +                %end;
27626     +            run;
27627     +        %end;
27628     +        %else %if %sysfunc(exist(&fitdat1)) or %sysfunc(exist(&fitdat2)) %then %do;
27630     +            %EM_GETNAME(key=REPORTFIT, type=DATA);
27632     +            data &EM_USER_REPORTFIT;
27633     +                length Label $40;
27634     +                label Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))";
27635     +                %if %sysfunc(exist(&fitdat1)) eq 1
27636     +                    %then %do; set &fitdat1; %end;
27637     +                    %else %do; set &fitdat2.(rename=(stat=fitstat)); %end;
27639     +                if FitStat='_LIFT_'  then Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptlift10_vlabel, NOQUOTE))";
27640     +                if FitStat='_LIFTC_' then Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcumlift10_vlabel, NOQUOTE))";
27641     +                if FitStat='_CAP_'  then Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcaptresp10_vlabel, NOQUOTE))";
27642     +                if FitSTat='_CAPC_' then Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcumcaptresp10_vlabel, NOQUOTE))";
27643     +                if FitSTat='_NOBS_' then Label="%sysfunc(sasmsg(sashelp.dmine, stat_nobs_vlabel, NOQUOTE))";
27644     +                if FitSTat='_MISC_' then Label= "%sysfunc(sasmsg(sashelp.dmine, stat_misc_vlabel, NOQUOTE))";
27645     +                if FitSTat='_MAX_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, stat_max_vlabel, NOQUOTE))";
27646     +                if FitSTat='_SSE_'  then Label= "%sysfunc(sasmsg(sashelp.dmine, stat_sse_vlabel, NOQUOTE))";
27647     +                if FitSTat='_ASE_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_ase, NOQUOTE))";
27648     +                if FitSTat='_RASE_' then Label = "%sysfunc(sasmsg(sashelp.dmine, stat_rase_vlabel, NOQUOTE))";
27649     +                if FitSTat='_DIV_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, stat_div_vlabel, NOQUOTE))";
27650     +                if FitSTat='_DFT_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dft, NOQUOTE))";
27651     +                if FitSTat='_AIC_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_aic, NOQUOTE))";
27652     +                if FitSTat='_MSE_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_mse, NOQUOTE))";
27653     +                if FitSTat='_RMSE_' then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_rmse, NOQUOTE))";
27654     +                if FitSTat='_AVERR_' then Label = "%sysfunc(sasmsg(sashelp.dmine, stat_averr_vlabel, NOQUOTE))";
27655     +                if FitSTat='_DFE_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dfe, NOQUOTE))";
27656     +                if FitSTat='_DFM_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_dfm, NOQUOTE))";
27657     +                if FitSTat='_ERR_'  then Label= "%sysfunc(sasmsg(sashelp.dmine, stat_err_vlabel, NOQUOTE))";
27658     +                if FitSTat='_FPE_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_fpe, NOQUOTE))";
27659     +                if FitSTat='_NW_'   then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_nw, NOQUOTE))";
27660     +                if FitSTat='_RFPE_' then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_rfpe, NOQUOTE))";
27661     +                if FitSTat='_SBC_'  then Label = "%sysfunc(sasmsg(sashelp.dmine, rpt_fitstat_label_sbc, NOQUOTE))";
27662     +            run;
27664     +            %let validfit=0;
27665     +            %let dsid = %sysfunc(open(&EM_USER_REPORTFIT));
27666     +            %if &dsid %then %do;
27667     +                %let validnum = %sysfunc(VARNUM(&dsid, VALIDATE));
27668     +                %if &validnum %then %let validfit = 1;
27669     +            %end;
27670     +            %if &dsid %then %let dsid = %sysfunc(close(&dsid));
27672     +            ods &EM_REPORT_FORMAT text=" ";
27673     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_modelfitstat_title, NOQUOTE))";
27674     +            ods proclabel = "%sysfunc(sasmsg(sashelp.dmine, rpt_modelfitstat_title, NOQUOTE))";
27676     +            proc print data=
27677     +                %if %sysfunc(exist(&em_lib..&RPM_REPORT_MDLCOMP._emreportfit)) eq 1
27678     +                %then %do;
27679     +                    &EM_USER_REPORTFIT(where=(MODEL="&em_report_modelId" AND TARGET="&rpt_rpm_targetName"))
27680     +                %end;
27681     +                %else %do;
27682     +                    &EM_USER_REPORTFIT(where=(TARGET="&rpt_rpm_targetName"))
27683     +                %end;
27684     +                label noobs style=[outputwidth=50%];
27685     +                %if &validfit eq 1 %then %do;
27686     +                    var Label Train Validate;
27687     +                    format Train 12.4 Validate 12.4;
27688     +                    label Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))"
27689     +                        train = "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , NOQUOTE))"
27690     +                        validate = "%sysfunc(sasmsg(sashelp.dmine, rpt_validate_vlabel , NOQUOTE))"
27691     +                    ;
27692     +                %end;
27693     +                %else %do;
27694     +                    var Label Train;
27695     +                    format Train 12.4;
27696     +                    label Label="%sysfunc(sasmsg(sashelp.dmine, rpt_rptstatistic_vlabel, NOQUOTE))"
27697     +                        train = "%sysfunc(sasmsg(sashelp.dmine, rpt_train_vlabel , NOQUOTE))";
27698     +                %end;
27699     +                %if %sysfunc(exist(&em_lib..&RPM_REPORT_MDLCOMP._emreportfit)) eq 1
27700     +                %then %do;
27701     +                    where FitStat in ('_NOBS_', '_MISC_', '_LOSS_', '_ALOSS_', '_ASE_', '_AUR_', '_GINI_', 'KS',
27702     +                                      '_KS_PROB_CUTOFF', '_LIFT_', '_LIFTC_', '_CAP_', '_CAPC_', '_AIC_', '_AVERR_',
27703     +                                      '_MAX_','_MSE_', '_RASE_', '_RMSE_', '_SBC_', '_SSE_') and TRAIN ne .;
27704     +                %end;
27705     +                %else %do;
27706     +                    where FitStat in ('_NOBS_', '_MISC_', '_LOSS_', '_ALOSS_', '_ASE_', '_AIC_', '_AVERR_', '_MAX_',
27707     +                                      '_MSE_', '_RASE_', '_RMSE_', '_SBC_', '_SSE_') and TRAIN ne .;
27708     +                %end;
27709     +            run;
27710     +        %end;
27711     +    %end;
27713     +    /* RPM-11. Model Comparison Table */
27715     +    %if &EM_PROPERTY_COMPAREMDL eq Y and RPM_REPORT_MDLCOMP ne %then %do;
27717     +        %EM_GETNAME(KEY=COMPAREMDL, TYPE=DATA);
27719     +        %let em_report_mdlOutfit = &em_lib..&RPM_REPORT_MDLCOMP._emoutfit;
27721     +        %if %sysfunc(exist(&em_report_mdlOutfit)) %then %do;
27723     +            /* determine model selection criterion - to included in print */
27724     +            %em_modelprops(dgmid=&em_lib, modelid=&RPM_REPORT_MDLCOMP, output=%nrbquote(work.modelprop));
27726     +            %let selectcrit = ;
27727     +            data _null_;
27728     +                set work.modelprop(where=(NAME="ModelCriteria")) end=eof;
27729     +                if eof then call symput('selectcrit', VALUE);
27730     +            run;
27732     +            %let selectstat=;
27733     +            %let choice = USE="Y";
27734     +            %let dsid = %sysfunc(open(&em_report_mdlOutfit(where=(&choice))));
27735     +            %if &dsid %then %do;
27736     +                %let obs = %sysfunc(fetchobs(&dsid, 1));
27737     +                %let selectstat = %sysfunc(VARNAME(&dsid, 6));
27738     +            %end;
27739     +            %if &dsid %then %let dsid = %sysfunc(close(&dsid));
27741     +            %let validflag=0;
27742     +            %let dsid = %sysfunc(open(&em_lib..&RPM_REPORT_MDLCOMP._emreportfit));
27743     +            %if &dsid %then %do;
27744     +                %let validnum = %sysfunc(VARNUM(&dsid, VALIDATE));
27745     +                %if &validnum %then %let validflag = 1;
27746     +            %end;
27747     +            %if &dsid %then %let dsid = %sysfunc(close(&dsid));
27749     +            data &EM_USER_COMPAREMDL;
27750     +                set &em_report_mdlOutfit;
27751     +                keep use model modelDescription &selectstat
27752     +                %if "&rpt_rpm_targetLevel" ne "INTERVAL" %then %do;
27753     +                    %if &selectstat ne _LIFT_ %then %do; _LIFT_ %end;
27754     +                    %if &validflag eq 1 %then %do;
27755     +                        %if &selectstat ne _VLIFT_ %then %do; _VLIFT_ %end;
27756     +                    %end;
27757     +                    %if &selectstat ne _AIC_ %then %do; _AIC_  %end;
27758     +                %end;
27759     +                %else %do;
27760     +                    %if &selectstat ne _ASE_ %then %do; _ASE_ %end;
27761     +                    %if &validflag eq 1 %then %do;
27762     +                        %if &selectstat ne _VASE_ %then %do; _VASE_ %end;
27763     +                    %end;
27764     +                %end;
27765     +                ;
27766     +            run;
27768     +            ods &EM_REPORT_FORMAT text=" ";
27769     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcomparemdl_title, NOQUOTE, &selectcrit))";
27770     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptcomparemdl_title, NOQUOTE, &selectcrit))";
27772     +            proc print data=&EM_USER_COMPAREMDL label noobs style=[outputwidth=50%]; run;
27773     +        %end;
27774     +    %end;
27776     +    /* RPM-12. Project Info */
27778     +    %if &EM_PROPERTY_BASICOUTPUT eq Y %then %do;
27780     +        %let pos = %index(&em_nodedir, Workspaces);
27781     +        %if &pos %then %do;
27783     +            %let projpath = %nrbquote(%sysfunc(trim(%sysfunc(substr(&em_nodedir, 1, %eval(&pos-2))))));
27784     +            %let reverse = %nrbquote(%sysfunc(reverse(&projpath)));
27785     +            %let pos2 = %index(&reverse, &em_dsep);
27786     +            %let len = %length(&projpath);
27787     +            %let projname = %nrbquote(%substr(&projpath, %eval(2+ &len-&pos2)));
27788     +            %let projname =%nrbquote(%sysfunc(tranwrd(%nrstr(&projname), %str(%"),"")));
27789     +            %let wsname  = %nrbquote(%sysfunc(tranwrd(%nrstr(&em_wsname), %str(%"),"")));
27791     +            %EM_GETNAME(key=PROJINFO, type=DATA);
27792     +            data &EM_USER_PROJINFO;
27793     +                length stat $200 value $200;
27794     +                stat="%sysfunc(sasmsg(sashelp.dmine, rpt_varsel_label_name, NOQUOTE))";
27795     +                value="&projname";
27796     +                output;
27798     +                stat="%sysfunc(sasmsg(sashelp.dmine, views_descriptions_diagram, NOQUOTE))";
27799     +                value="&wsname";
27800     +                output;
27802     +                stat="%sysfunc(sasmsg(sashelp.dmine, rpt_rptpath_title, NOQUOTE))";
27803     +                value="&projpath";
27804     +                output;
27806     +                %let createTime = %sysfunc(left(%sysfunc(putn(%sysfunc(dateTime()), NLDATM24.0))));
27807     +                stat="%sysfunc(sasmsg(sashelp.dmine, rpt_crdate_vlabel, NOQUOTE))";
27808     +                value="&createTime";
27809     +                output;
27811     +                label stat="%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))"
27812     +                      value="%sysfunc(sasmsg(sashelp.dmine, rpt_rptvalue_vlabel, NOQUOTE))";
27814     +            run;
27816     +            ods &EM_REPORT_FORMAT text=" ";
27817     +            ods &EM_REPORT_FORMAT text="%sysfunc(sasmsg(sashelp.dmine, rpt_rptprojinfo_title, NOQUOTE))";
27818     +            ods proclabel ="%sysfunc(sasmsg(sashelp.dmine, rpt_rptprojinfo_title, NOQUOTE))";
27820     +            proc print data=&EM_USER_PROJINFO noobs label style=[outputwidth=50%]; run;
27821     +        %end;
27822     +    %end;
27823     +%end;
27825     +%skip:
27827     +%mend em_report_summary;
27830     +%macro em_reporter_scorecard(
27831     +/**----------------------------------------------------------------------**/
27832     +/*  EM_REPORTER_SCORECARD                                                 */
27833     +/*    generate scorecard report for EM RPM flows. currently this is an    */
27834     +/*    interval macro for RPM and does not perform any argument checking.  */
27835     +/**----------------------------------------------------------------------**/
27836     +inData           = ,     /* input training data set                       */
27837     +inData2          = ,
27838     +inVariableSet    = ,     /* input variable metadata, must have the three  */
27839     +                         /* columns: level, role and &name                */
27840     +name             = name, /* variable name column in the metadata          */
27841     +libname          = work, /* libname to save the temporary binned data     */
27842     +crosstab         = Y,    /* create cross-tabulation or not. Default = Y   */
27843     +targetVar        = ,     /* target variable for regressions and scores    */
27844     +targetVar2       = ,     /* target variable for cross-tabulations         */
27845     +targetLevel      = ,     /* target level                                  */
27846     +freqVar          = ,     /* frequency variable                            */
27847     +outVarRank       = ,     /* output dataset for variable ranking (HPREDUCE)*/
27848     +outScorecard     =       /* output dataset for scorecard report           */
27849     +/**----------------------------------------------------------------------**/
27850     +/* Created: 08/20/2012, XXM                                               */
27851     +/**----------------------------------------------------------------------**/
27852     +);
27854     +/**--------------------------------------------------------------------------------------**/
27855     +/** 0. Configurations                                                                    **/
27856     +/**--------------------------------------------------------------------------------------**/
27858     +** get target level;
27859     +%let targetVar   = &targetVar;
27860     +%let targetVar2  = &targetVar2;
27861     +%let targetLevel = &targetLevel;
27863     +** check valid target name and level;    /* TBA */
27865     +** check VariableSet has LEVEL and NAME; /* TBA */
27867     +/**--------------------------------------------------------------------------------------**/
27868     +/** 1. Get the input variables from variable set                                         **/
27869     +/**--------------------------------------------------------------------------------------**/
27871     +%let nom_vars = ;
27872     +%let ord_vars = ;
27873     +%let int_vars = ;
27874     +%let n_nomvars = 0;
27875     +%let n_ordvars = 0;
27876     +%let n_intvars = 0;
27878     +data _null_;
27879     +    set &inVariableSet(where=(LEVEL in ('NOMINAL', 'BINARY') and upcase(&name) ne "&targetVar")) end=eof;
27880     +    call symput('nom_vars'!!strip(put(_N_,BEST.)), strip(&name));
27881     +    if eof then call symput('n_nomvars', strip(put(_N_,BEST.)));
27882     +data _null_;
27883     +    set &inVariableSet(where=(LEVEL='ORDINAL' and upcase(&name) ne "&targetVar")) end=eof;
27884     +    call symput('ord_vars'!!strip(put(_N_,BEST.)), strip(&name));
27885     +    if eof then call symput('n_ordvars', strip(put(_N_,BEST.)));
27886     +data _null_;
27887     +    set &inVariableSet(where=(LEVEL='INTERVAL' and upcase(&name) ne "&targetVar")) end=eof;
27888     +    call symput('int_vars'!!strip(put(_N_,BEST.)), strip(&name));
27889     +    if eof then call symput('n_intvars', strip(put(_N_,BEST.)));
27890     +run;
27892     +%let n_svars = %eval(&n_nomvars+&n_ordvars+&n_intvars);
27894     +%if ((&n_nomvars gt 0) OR (&n_ordvars gt 0) OR (&n_intvars gt 0)) %then %do;
27896     +    /**----------------------------------------------------------------------------------**/
27897     +    /** 2. PROC ARBOR                                                                    **/
27898     +    /**----------------------------------------------------------------------------------**/
27900     +    proc arbor data=&indata
27901     +        alpha=1 leafsize=5 mincatsize=5 maxbranch=8 maxdepth=1 NORULELIMIT
27902     +        maxrules=&n_svars maxsurrs=0 missing=USEINSEARCH exhaustive=5000
27903     +    ;
27904     +        %if &n_nomvars gt 0 %then %do;
27905     +            input %do i=1 %to &n_nomvars; &&nom_vars&i %end; / level = nominal;
27906     +        %end;
27907     +        %if &n_ordvars gt 0 %then %do;
27908     +            input %do i=1 %to &n_ordvars; &&ord_vars&i %end; / level = ordinal;
27909     +        %end;
27910     +        %if &n_intvars gt 0 %then %do;
27911     +            input %do i=1 %to &n_intvars; &&int_vars&i %end; / level = interval;
27912     +        %end;
27913     +        %if &freqvar ne %then %do; freq &freqvar; %end;
27914     +        target &targetVar / level=&targetLevel;
27915     +        save importance=importance rules=rules;
27916     +    run;
27918     +    /**----------------------------------------------------------------------------------**/
27919     +    /** 2. get VarRank output table                                                      **/
27920     +    /**----------------------------------------------------------------------------------**/
27922     +    /* keep only the top 50 input variables - based on rank */
27924     +    data &outVarRank(where=(rank le 50));
27925     +        length variable $32 worth 8;
27926     +        set rules;
27927     +        by rank;
27928     +        retain variable worth;
27929     +        label variable = "%sysfunc(sasmsg(sashelp.dmine, rpt_variable_vlabel, NOQUOTE))";
27930     +        keep variable rank worth;
27932     +        if STAT="VARIABLE" then variable=Character_value;
27933     +        if STAT="WORTH" then worth=Numeric_value;
27934     +        if last.rank then output;
27935     +    run;
27937     +    data &outVarRank;
27938     +        set &outVarRank;
27939     +        if worth=. then do;
27940     +            worth = 0.00;
27941     +            rank  = _N_;
27942     +        end;
27943     +    run;
27945     +    /* selected interval and class input variables */
27946     +    proc sql noprint;
27947     +        create table tempclass(drop=&name) as
27948     +            select a.*, b.*  from &outVarRank as a left join &inVariableSet as b
27949     +                on upcase(a.variable) eq upcase(b.&name)
27950     +            where level ne "INTERVAL"
27951     +            order by a.variable
27952     +        ;
27953     +        create table tempinterval(drop=&name) as
27954     +            select a.*, b.*  from &outVarRank as a left join &inVariableSet as b
27955     +                on upcase(a.variable) eq upcase(b.&name)
27956     +            where level eq "INTERVAL"
27957     +            order by a.variable
27958     +        ;
27959     +    quit;
27961     +    /* create array of class variables names */
27962     +    %let class_vars=;
27963     +    %let n_classvars=0;
27964     +    data _null_;
27965     +        set tempclass end=eof;
27966     +        call symput('class_vars'!!strip(put(_N_,BEST.)), strip(variable));
27967     +        if eof then call symput('n_classvars', strip(put(_N_,BEST.)));
27968     +    run;
27970     +    /**----------------------------------------------------------------------------------**/
27971     +    /** 3. Get Bining information                                                        **/
27972     +    /**----------------------------------------------------------------------------------**/
27974     +    %let dsid = %sysfunc(open(work.rules));
27975     +    %let numobs = %sysfunc(attrn(&dsid, NOBS));
27976     +    %let numvars = %sysfunc(attrn(&dsid, NVARS));
27977     +    %if &dsid %then %let dsid = %sysfunc(close(&dsid));
27979     +    %if %sysfunc(exist(&outVarRank)) and (&numobs gt 0) and (&numvars gt 0) %then %do;
27981     +        data rules;
27982     +            set rules;
27983     +            where STAT in ('VARIABLE', 'INTERVAL', 'MISSING');
27984     +            numeric_value = round(numeric_value, 0.001);
27985     +        proc sort data=rules;
27986     +            by rank numeric_value;
27987     +        run;
27989     +        data binning_rules;
27990     +            length origVar $32;
27991     +            set rules;
27992     +            by rank;
27993     +            retain origVar oldLB;
27994     +            keep origVar LB UB;
27996     +            if STAT="VARIABLE" then origVar = Character_value;
27997     +            if first.rank then oldLB=.;
27998     +            if STAT="INTERVAL" then do;
27999     +                LB = oldLB;
28000     +                UB = Numeric_value;
28001     +                oldLB=UB;
28002     +                output;
28003     +            end;
28004     +            if last.rank then do;
28005     +                LB=oldLB;
28006     +                UB = .;
28007     +                output;
28008     +            end;
28009     +        run;
28011     +        /* names for binning */
28012     +        proc sql noprint;
28013     +            create table tempbinnames(drop=variable) as
28014     +                select distinct origVar, role from binning_rules as a inner join tempinterval as b
28015     +                  on a.OrigVar eq b.variable;
28016     +        quit;
28018     +        /* get name server */
28019     +        proc dmdb data=tempbinnames outtable=tempbinnames nameserver;
28020     +            names origVar;
28021     +            prefix BIN_;
28022     +        run;
28024     +        /* merge binned names back to temp */
28025     +        proc sql noprint;
28026     +            create table binning_rules_names as
28027     +                select a.*, b.bin as binVar from binning_rules as a right join tempbinnames as b
28028     +                    on a.origVar eq b.origVar
28029     +                order by a.origVar, a.LB, a.UB;
28030     +        quit;
28032     +        /* create array of bin variables names */
28033     +        %let bin_vars=;
28034     +        %let n_binvars=0;
28035     +        data _null_;
28036     +            set tempbinnames end=eof;
28037     +            call symput('bin_vars'!!strip(put(_N_,BEST.)), strip(bin));
28038     +            if eof then call symput('n_binvars', strip(put(_N_,BEST.)));
28039     +        run;
28041     +    /**----------------------------------------------------------------------------------**/
28042     +    /** 4. Bin the interval variables                                                    **/
28043     +    /**    note that binned is used for DMREG, binned_full is used for CROSSTAB          **/
28044     +    /**----------------------------------------------------------------------------------**/
28046     +    data binned;
28047     +        set &indata;
28049     +        %if &n_binvars gt 0 %then %do;
28050     +            length %do i=1 %to &n_binvars; &&bin_vars&i %end; $50;
28051     +        %end;
28053     +        %let dsid = %sysfunc(open(binning_rules_names));
28054     +        %if &dsid %then %do;
28055     +            %let orignum = %sysfunc(VARNUM(&dsid, origVar));
28056     +            %let binnum  = %sysfunc(VARNUM(&dsid, binVar));
28057     +            %let lbnum   = %sysfunc(VARNUM(&dsid, LB));
28058     +            %let ubnum   = %sysfunc(VARNUM(&dsid, UB));
28060     +            %let obs     = %sysfunc(fetch(&dsid));
28061     +            %do %while(&obs=0);
28062     +                %let origvar = %sysfunc(getvarc(&dsid, &orignum));
28063     +                %let binvar  = %sysfunc(getvarc(&dsid, &binnum));
28064     +                %let lb   = %sysfunc(getvarn(&dsid, &lbnum));
28065     +                %let ub   = %sysfunc(getvarn(&dsid, &ubnum));
28067     +                %if "&lb" eq "." AND "&ub" ne "." %then %do;
28068     +                    %let count = 1;
28069     +                    if &origvar < &ub then &binvar = "&count: low - &ub";
28070     +                %end;
28071     +                %else %if "&lb" ne "." AND "&ub" eq "." %then %do;
28072     +                    %let count = %eval(&count+1);
28073     +                    else if &origvar >= &lb then &binvar = "&count: &lb - high";
28074     +                %end;
28075     +                %else %if "&lb" eq "." AND "&ub" eq "." %then %do;
28076     +                    %let count = 1;
28077     +                    &binvar = "&count: low - high";
28078     +                %end;
28079     +                %else %do;
28080     +                    %let count = %eval(&count+1);
28081     +                    else if &origvar < &ub AND &origvar >= &lb then &binvar = "&count: &lb - &ub";
28082     +                %end;
28084     +                %let obs = %sysfunc(fetch(&dsid));
28085     +            %end;
28086     +        %end;
28087     +        %if &dsid %then %let dsid = %sysfunc(close(&dsid));
28088     +    run;
28090     +    data binned_full;
28091     +        set &indata2;
28093     +        %if &n_binvars gt 0 %then %do;
28094     +            length %do i=1 %to &n_binvars; &&bin_vars&i %end; $50;
28095     +        %end;
28097     +        %let dsid = %sysfunc(open(binning_rules_names));
28098     +        %if &dsid %then %do;
28099     +            %let orignum = %sysfunc(VARNUM(&dsid, origVar));
28100     +            %let binnum  = %sysfunc(VARNUM(&dsid, binVar));
28101     +            %let lbnum   = %sysfunc(VARNUM(&dsid, LB));
28102     +            %let ubnum   = %sysfunc(VARNUM(&dsid, UB));
28104     +            %let obs     = %sysfunc(fetch(&dsid));
28105     +            %do %while(&obs=0);
28106     +                %let origvar = %sysfunc(getvarc(&dsid, &orignum));
28107     +                %let binvar  = %sysfunc(getvarc(&dsid, &binnum));
28108     +                %let lb   = %sysfunc(getvarn(&dsid, &lbnum));
28109     +                %let ub   = %sysfunc(getvarn(&dsid, &ubnum));
28111     +                %if "&lb" eq "." AND "&ub" ne "." %then %do;
28112     +                    %let count = 1;
28113     +                    if &origvar < &ub then &binvar = "&count: low - &ub";
28114     +                %end;
28115     +                %else %if "&lb" ne "." AND "&ub" eq "." %then %do;
28116     +                    %let count = %eval(&count+1);
28117     +                    else if &origvar >= &lb then &binvar = "&count: &lb - high";
28118     +                %end;
28119     +                %else %if "&lb" eq "." AND "&ub" eq "." %then %do;
28120     +                    %let count = 1;
28121     +                    &binvar = "&count: low - high";
28122     +                %end;
28123     +                %else %do;
28124     +                    %let count = %eval(&count+1);
28125     +                    else if &origvar < &ub AND &origvar >= &lb then &binvar = "&count: &lb - &ub";
28126     +                %end;
28128     +                %let obs     = %sysfunc(fetch(&dsid));
28129     +            %end;
28130     +        %end;
28131     +        %if &dsid %then %let dsid = %sysfunc(close(&dsid));
28132     +    run;
28134     +    /**----------------------------------------------------------------------------------**/
28135     +    /** 5. Generate scores                                                               **/
28136     +    /**----------------------------------------------------------------------------------**/
28138     +    proc dmdb batch data=binned dmdbcat=score_dmdb maxlevel=513 classout=_classout;
28139     +        class
28140     +            %if &n_classvars gt 0 %then %do; %do i=1 %to &n_classvars; &&class_vars&i %end; %end;
28141     +            %if &n_binvars gt 0   %then %do; %do i=1 %to &n_binvars;   &&bin_vars&i   %end; %end;
28142     +            %if "&targetLevel" ne "INTERVAL" %then %do; &targetVar %end;
28143     +        ;
28144     +        %if &freqvar ne %then %do; freq &freqvar; %end;
28145     +        %if "&targetLevel" eq  "INTERVAL" %then %do; var &targetVar; %end;
28146     +        target &targetVar;
28147     +    run; quit;
28149     +    proc dmreg data=binned dmdbcat=score_dmdb outest=coeff_est outterms=outterms noprint descending;
28150     +        class
28151     +            %if &n_classvars gt 0 %then %do; %do i=1 %to &n_classvars; &&class_vars&i %end; %end;
28152     +            %if &n_binvars gt 0   %then %do; %do i=1 %to &n_binvars;   &&bin_vars&i   %end; %end;
28153     +            %if "&targetLevel" ne "INTERVAL" %then %do; &targetVar %end;
28154     +        ;
28155     +        %if &freqvar ne %then %do; freq &freqvar; %end;
28156     +        model &targetVar =
28157     +            %if &n_classvars gt 0 %then %do; %do i=1 %to &n_classvars; &&class_vars&i %end; %end;
28158     +            %if &n_binvars gt 0   %then %do; %do i=1 %to &n_binvars;   &&bin_vars&i   %end; %end;
28159     +            / coding=glm
28160     +        ;
28161     +    run;
28165     +    proc sql noprint;
28166     +        create table _score_tmp1 as
28167     +            select *, min(coefficient) as min_est,
28168     +                case when calculated min_est = coefficient then 0
28169     +                     else coefficient-calculated min_est
28170     +                end as est1
28171     +            from outterms
28172     +            where variable ne 'Intercept'
28173     +            group by variable
28174     +        ;
28175     +        create table _score_tmp2 as
28176     +            select *, max(est1) as max_est1, count(*) as counter
28177     +            from _score_tmp1
28178     +            group by variable
28179     +        ;
28180     +%if "&fimnode" eq "" %then %do;
28181     +        create table _classout2(rename=(name=variable level=value)) as
28182     +            select a.*, b.format
28183     +                from _classout as a left join &inVariableSet(keep=&name format) as b
28184     +                on a.name eq b.&name
28185     +            order by a.name, a.level
28186     +        ;
28187     +%end;
28189     +        create table &outScorecard(rename=(classlevel=value)) as
28190     +            select *, sum(max_est1/counter) as sum_max,
28191     +                case when est1=max_est1 then 1 else 0 end as max_cat,
28192     +                round(1000*((est1) / calculated sum_max)) as score
28193     +            from _score_tmp2
28194     +            order by variable, classlevel
28195     +        ;
28197     +    quit;
28199     +    data &outScorecard;
28200     +%if "&fimnode" ne "" %then %do;
28201     +        set &outScorecard;
28202     +        by variable value;
28203     +%end;
28204     +%else %do;
28205     +        merge &outScorecard(in=_a) _classout2;
28206     +        by variable value;
28207     +        if _a;
28208     +%end;
28209     +        value = tranwrd(value, "'", "''");
28210     +        rename frequency   = AllFreq
28211     +               freqpercent = AllPercent;
28212     +        label  score       = "%sysfunc(sasmsg(sashelp.dmine, rpt_scorecardpoints_vlabel, NOQUOTE))"
28213     +               frequency   = "%sysfunc(sasmsg(sashelp.dmine, rpt_numObs_vlabel, NOQUOTE))"
28214     +               freqpercent = "%sysfunc(sasmsg(sashelp.dmine, rpt_rptperctobs_vlabel, NOQUOTE))";
28215     +    run;
28217     +    /* replace binned named with original var name instead */
28219     +    proc sort data=tempbinnames; by bin; run;
28221     +    data &outScorecard;
28222     +        merge &outScorecard(in=_a) tempbinnames(rename=(bin=variable origvar=displayVar)) ;
28223     +        by variable;
28224     +        if _a;
28225     +        if displayVar="" then displayVar=variable;
28226     +    run;
28228     +    /**----------------------------------------------------------------------------------**/
28229     +    /** 6. Generate crosstabs                                                            **/
28230     +    /**----------------------------------------------------------------------------------**/
28232     +    %if "&targetLevel" ne "INTERVAL" %then %do;
28234     +        ods &EM_REPORT_FORMAT exclude all;
28235     +        ods listing;
28237     +        data _null_;
28238     +            set &outScorecard end=eof;
28239     +            by variable;
28240     +            if _n_=1          then call execute("proc freq data=work.binned_full order=formatted addnames;");
28241     +            if first.variable then call execute("table "||variable||" * &targetVar2 / missing;");
28242     +            if eof then do;
28243     +                %if &freqvar ne %then %do; call execute("weight &freqvar;"); %end;
28244     +                call execute("ods output crosstabfreqs=tempfreq;");
28245     +                call execute("run;");
28246     +            end;
28247     +        run;
28249     +        data _null_;
28250     +            set &outScorecard end=eof;
28251     +            by variable value;
28253     +            if _n_=1 then do;
28254     +                call execute("data crosstabs;");
28255     +                call execute("  length varvalue $200 displayVar $32;");
28256     +                call execute("  set tempfreq(where=(_type_='11'));");
28257     +            end;
28259     +            if type="N" AND format eq "" then do;
28260     +                call execute("if "||Variable||" = "||value||" then do;");
28261     +            end;
28262     +            else do;
28263     +                if format ne ""
28264     +                    then call execute("%DMNORMCP(put("||variable||","||format||"), _normvar);");
28265     +                    else call execute("%DMNORMCP("||variable||", _normvar);");
28266     +                call execute("if strip(_normvar) = '"||strip(value)||"' then do;");
28267     +            end;
28269     +            call execute("  varvalue='"||strip(value)||"';");
28270     +            call execute("  scorepoints="||score||";");
28271     +            call execute("  allfreq="||allfreq||";");
28272     +            call execute("  allpercent="||allpercent||";");
28273     +            call execute("  displayVar='"||displayVar||"';");
28274     +            call execute("end;");
28276     +            if eof then call execute("run;");
28277     +        run;
28279     +        ods &EM_REPORT_FORMAT select all;
28280     +        ods listing close;
28282     +        proc sort data=crosstabs; by rowVariable varvalue; run;
28284     +        data &outScoreCard;
28285     +            set crosstabs;
28286     +            by rowVariable varvalue;
28287     +            if missing(scorepoints) then delete;
28288     +            if ^first.varvalue then do;
28289     +                 scorepoints=.;
28290     +                 allfreq=.;
28291     +                 allpercent=.;
28292     +            end;
28293     +            keep displayvar rowVariable varValue &targetVar2 scorepoints frequency colPercent allfreq allpercent ;
28294     +        run;
28295     +    %end;
28296     +    %else %do;
28297     +        data &outScoreCard;
28298     +            set &outScoreCard;
28299     +            rename value=varvalue score=scorepoints;
28300     +        run;
28301     +    %end;
28302     +%end;
28304     +/*    proc datasets lib=work nolist;*/
28305     +/*    run; quit;*/
28306     +%end;
28308     +%mend em_reporter_scorecard;
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_REPORT_CREATE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_REPORT_CREATE):   filename temp catalog 'sashelp.emutil.em_gettrainpath.source' ;
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.EM_GETTRAINPATH.SOURCE.
28309     +%macro EM_GETTRAINPATH(NODEID=, OUTPATH=);
28310     +   proc display c=sashelp.emcore.pathscorecode.scl;
28311     +   run;
28312     +%mend EM_GETTRAINPATH;
28313     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_REPORT_CREATE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_REPORT_CREATE):   filename temp catalog 'sashelp.emutil.reporter_tagset_template.source';
NOTE: %INCLUDE (level 1) file TEMP is file SASHELP.EMUTIL.REPORTER_TAGSET_TEMPLATE.SOURCE.
28314     +Ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_CREATE):   Ods path(prepend) work.templat(update);
28315     +
28316     +/* emgraph.tpl */
28317     +proc template;
MPRINT(EM_REPORT_CREATE):   proc template;
28318     +define tagset tagsets.gtl / store=work.templat;
MPRINT(EM_REPORT_CREATE):   define tagset tagsets.gtl / store=work.templat;
28319     +parent=tagsets.odsgraph;
MPRINT(EM_REPORT_CREATE):   parent=tagsets.odsgraph;
28320     +%let  map =<>%nrstr(&)%str(%')%str(%");
28321     +map="&map";
MPRINT(EM_REPORT_CREATE):   map="<>&'"";
28322     +mapsub = '/&lt;/&gt;/&amp;/&#39;/&quot;/';
MPRINT(EM_REPORT_CREATE):   mapsub = '/&lt;/&gt;/&amp;/&#39;/&quot;/';
28323     +nobreakspace = ' ' no_byte_order_mark = yes;
MPRINT(EM_REPORT_CREATE):   nobreakspace = ' ' no_byte_order_mark = yes;
28324     +split = '<br/>';
MPRINT(EM_REPORT_CREATE):   split = '<br/>';
28325     +output_type = 'xml';
MPRINT(EM_REPORT_CREATE):   output_type = 'xml';
28326     +indent=2;
MPRINT(EM_REPORT_CREATE):   indent=2;
28327     +
28328     +define event options_set;
MPRINT(EM_REPORT_CREATE):   define event options_set;
28329     +    do / if $options['X'];
MPRINT(EM_REPORT_CREATE):   do / if $options['X'];
28330     +         set $xvar $options['X'];
MPRINT(EM_REPORT_CREATE):   set $xvar $options['X'];
28331     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28332     +         unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
28333     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28334     +
28335     +    do / if $options['Y'];
MPRINT(EM_REPORT_CREATE):   do / if $options['Y'];
28336     +         set $yvar $options['Y'];
MPRINT(EM_REPORT_CREATE):   set $yvar $options['Y'];
28337     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28338     +         unset $yvar;
MPRINT(EM_REPORT_CREATE):   unset $yvar;
28339     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28340     +
28341     +    do / if $options['CATEGORY'];
MPRINT(EM_REPORT_CREATE):   do / if $options['CATEGORY'];
28342     +         set $category $options['CATEGORY'];
MPRINT(EM_REPORT_CREATE):   set $category $options['CATEGORY'];
28343     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28344     +         unset $category;
MPRINT(EM_REPORT_CREATE):   unset $category;
28345     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28346     +
28347     +    do / if $options['RESPONSE'];
MPRINT(EM_REPORT_CREATE):   do / if $options['RESPONSE'];
28348     +         set $response $options['RESPONSE'];
MPRINT(EM_REPORT_CREATE):   set $response $options['RESPONSE'];
28349     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28350     +         unset $response;
MPRINT(EM_REPORT_CREATE):   unset $response;
28351     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28352     +
28353     +    do / if $options['LIMITUPPER'];
MPRINT(EM_REPORT_CREATE):   do / if $options['LIMITUPPER'];
28354     +         set $limitupper $options['LIMITUPPER'];
MPRINT(EM_REPORT_CREATE):   set $limitupper $options['LIMITUPPER'];
28355     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28356     +         unset $limitupper;
MPRINT(EM_REPORT_CREATE):   unset $limitupper;
28357     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28358     +
28359     +    do / if $options['LIMITLOWER'];
MPRINT(EM_REPORT_CREATE):   do / if $options['LIMITLOWER'];
28360     +         set $limitlower $options['LIMITLOWER'];
MPRINT(EM_REPORT_CREATE):   set $limitlower $options['LIMITLOWER'];
28361     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28362     +         unset $limitlower;
MPRINT(EM_REPORT_CREATE):   unset $limitlower;
28363     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28364     +
28365     +    do / if $options['WIDTH'];
MPRINT(EM_REPORT_CREATE):   do / if $options['WIDTH'];
28366     +         set $graphwidth $options['WIDTH'];
MPRINT(EM_REPORT_CREATE):   set $graphwidth $options['WIDTH'];
28367     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28368     +         unset $graphwidth;
MPRINT(EM_REPORT_CREATE):   unset $graphwidth;
28369     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28370     +
28371     +    do / if $options['HEIGHT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['HEIGHT'];
28372     +         set $graphheight $options['HEIGHT'];
MPRINT(EM_REPORT_CREATE):   set $graphheight $options['HEIGHT'];
28373     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28374     +         unset $graphheight;
MPRINT(EM_REPORT_CREATE):   unset $graphheight;
28375     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28376     +
28377     +    do / if $options['ROWS'];
MPRINT(EM_REPORT_CREATE):   do / if $options['ROWS'];
28378     +         set $rows $options['ROWS'];
MPRINT(EM_REPORT_CREATE):   set $rows $options['ROWS'];
28379     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28380     +         unset $rows;
MPRINT(EM_REPORT_CREATE):   unset $rows;
28381     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28382     +
28383     +    do / if $options['COLUMNS'];
MPRINT(EM_REPORT_CREATE):   do / if $options['COLUMNS'];
28384     +         set $columns $options['COLUMNS'];
MPRINT(EM_REPORT_CREATE):   set $columns $options['COLUMNS'];
28385     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28386     +         unset $columns;
MPRINT(EM_REPORT_CREATE):   unset $columns;
28387     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28388     +
28389     +    do / if $options['TITLE'];
MPRINT(EM_REPORT_CREATE):   do / if $options['TITLE'];
28390     +         set $title $options['TITLE'];
MPRINT(EM_REPORT_CREATE):   set $title $options['TITLE'];
28391     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28392     +         unset $title;
MPRINT(EM_REPORT_CREATE):   unset $title;
28393     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28394     +
28395     +    do / if $options['TITLE2'];
MPRINT(EM_REPORT_CREATE):   do / if $options['TITLE2'];
28396     +         set $title2 $options['TITLE2'];
MPRINT(EM_REPORT_CREATE):   set $title2 $options['TITLE2'];
28397     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28398     +         unset $title2;
MPRINT(EM_REPORT_CREATE):   unset $title2;
28399     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28400     +
28401     +do / if $options['TITLE3'];
MPRINT(EM_REPORT_CREATE):   do / if $options['TITLE3'];
28402     +         set $title3 $options['TITLE3'];
MPRINT(EM_REPORT_CREATE):   set $title3 $options['TITLE3'];
28403     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28404     +         unset $title3;
MPRINT(EM_REPORT_CREATE):   unset $title3;
28405     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28406     +
28407     +do / if $options['TITLE4'];
MPRINT(EM_REPORT_CREATE):   do / if $options['TITLE4'];
28408     +         set $title4 $options['TITLE4'];
MPRINT(EM_REPORT_CREATE):   set $title4 $options['TITLE4'];
28409     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28410     +         unset $title4;
MPRINT(EM_REPORT_CREATE):   unset $title4;
28411     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28412     +
28413     +    do / if $options['ID'];
MPRINT(EM_REPORT_CREATE):   do / if $options['ID'];
28414     +         set $id $options['ID'];
MPRINT(EM_REPORT_CREATE):   set $id $options['ID'];
28415     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28416     +         unset $id;
MPRINT(EM_REPORT_CREATE):   unset $id;
28417     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28418     +
28419     +    do / if $options['PARENT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['PARENT'];
28420     +         set $parent $options['PARENT'];
MPRINT(EM_REPORT_CREATE):   set $parent $options['PARENT'];
28421     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28422     +         unset $parent;
MPRINT(EM_REPORT_CREATE):   unset $parent;
28423     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28424     +
28425     +    do / if $options['PARENT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['PARENT'];
28426     +         set $parent $options['PARENT'];
MPRINT(EM_REPORT_CREATE):   set $parent $options['PARENT'];
28427     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28428     +         unset $parent;
MPRINT(EM_REPORT_CREATE):   unset $parent;
28429     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28430     +
28431     +    do / if $options['ABOVETEXT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['ABOVETEXT'];
28432     +         set $abovetext $options['ABOVETEXT'];
MPRINT(EM_REPORT_CREATE):   set $abovetext $options['ABOVETEXT'];
28433     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28434     +         unset $abovetext;
MPRINT(EM_REPORT_CREATE):   unset $abovetext;
28435     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28436     +
28437     +    do / if $options['BELOWTEXT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['BELOWTEXT'];
28438     +         set $belowtext $options['BELOWTEXT'];
MPRINT(EM_REPORT_CREATE):   set $belowtext $options['BELOWTEXT'];
28439     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28440     +         unset $belowtext;
MPRINT(EM_REPORT_CREATE):   unset $belowtext;
28441     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28442     +
28443     +    do / if $options['LINKWIDTH'];
MPRINT(EM_REPORT_CREATE):   do / if $options['LINKWIDTH'];
28444     +         set $linkwidth $options['LINKWIDTH'];
MPRINT(EM_REPORT_CREATE):   set $linkwidth $options['LINKWIDTH'];
28445     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28446     +         unset $linkwidth;
MPRINT(EM_REPORT_CREATE):   unset $linkwidth;
28447     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28448     +
28449     +    do / if $options['NODECOLOR'];
MPRINT(EM_REPORT_CREATE):   do / if $options['NODECOLOR'];
28450     +         set $nodecolor $options['NODECOLOR'];
MPRINT(EM_REPORT_CREATE):   set $nodecolor $options['NODECOLOR'];
28451     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28452     +         unset $nodecolor;
MPRINT(EM_REPORT_CREATE):   unset $nodecolor;
28453     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28454     +
28455     +    do / if $options['NODESIZE'];
MPRINT(EM_REPORT_CREATE):   do / if $options['NODESIZE'];
28456     +         set $nodesize $options['NODESIZE'];
MPRINT(EM_REPORT_CREATE):   set $nodesize $options['NODESIZE'];
28457     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28458     +         unset $nodesize;
MPRINT(EM_REPORT_CREATE):   unset $nodesize;
28459     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28460     +
28461     +    do / if $options['NODETEXT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['NODETEXT'];
28462     +         set $nodetext $options['NODETEXT'];
MPRINT(EM_REPORT_CREATE):   set $nodetext $options['NODETEXT'];
28463     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28464     +         unset $nodetext;
MPRINT(EM_REPORT_CREATE):   unset $nodetext;
28465     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28466     +
28467     +    do / if $options['PFDITEMS'];
MPRINT(EM_REPORT_CREATE):   do / if $options['PFDITEMS'];
28468     +         set $pfditems $options['PFDITEMS'];
MPRINT(EM_REPORT_CREATE):   set $pfditems $options['PFDITEMS'];
28469     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28470     +         unset $pfditems;
MPRINT(EM_REPORT_CREATE):   unset $pfditems;
28471     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28472     +
28473     +    do / if $options['GRIDSTYLE'];
MPRINT(EM_REPORT_CREATE):   do / if $options['GRIDSTYLE'];
28474     +         set $gridstyle $options['GRIDSTYLE'];
MPRINT(EM_REPORT_CREATE):   set $gridstyle $options['GRIDSTYLE'];
28475     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28476     +         unset $gridstyle;
MPRINT(EM_REPORT_CREATE):   unset $gridstyle;
28477     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28478     +
28479     +    do / if $options['GRIDHEIGHT'];
MPRINT(EM_REPORT_CREATE):   do / if $options['GRIDHEIGHT'];
28480     +         set $gridheight $options['GRIDHEIGHT'];
MPRINT(EM_REPORT_CREATE):   set $gridheight $options['GRIDHEIGHT'];
28481     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28482     +         unset $gridheight;
MPRINT(EM_REPORT_CREATE):   unset $gridheight;
28483     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28484     +
28485     +    do / if $options['GRIDWIDTH'];
MPRINT(EM_REPORT_CREATE):   do / if $options['GRIDWIDTH'];
28486     +         set $gridwidth $options['GRIDWIDTH'];
MPRINT(EM_REPORT_CREATE):   set $gridwidth $options['GRIDWIDTH'];
28487     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28488     +         unset $gridwidth;
MPRINT(EM_REPORT_CREATE):   unset $gridwidth;
28489     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28490     +
28491     +    do / if $options['ISGRIDVISIBLE'];
MPRINT(EM_REPORT_CREATE):   do / if $options['ISGRIDVISIBLE'];
28492     +         set $isGridVisible $options['ISGRIDVISIBLE'];
MPRINT(EM_REPORT_CREATE):   set $isGridVisible $options['ISGRIDVISIBLE'];
28493     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28494     +         unset $isGridVisible;
MPRINT(EM_REPORT_CREATE):   unset $isGridVisible;
28495     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28496     +
28497     +    do / if $options['LAYOUTACTIVATED'];
MPRINT(EM_REPORT_CREATE):   do / if $options['LAYOUTACTIVATED'];
28498     +         set $layoutActivated $options['LAYOUTACTIVATED'];
MPRINT(EM_REPORT_CREATE):   set $layoutActivated $options['LAYOUTACTIVATED'];
28499     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28500     +         unset $layoutActivated;
MPRINT(EM_REPORT_CREATE):   unset $layoutActivated;
28501     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28502     +
28503     +    do / if $options['PIELABELDISPLAY'];
MPRINT(EM_REPORT_CREATE):   do / if $options['PIELABELDISPLAY'];
28504     +         set $pieLabelDisplay $options['PIELABELDISPLAY'];
MPRINT(EM_REPORT_CREATE):   set $pieLabelDisplay $options['PIELABELDISPLAY'];
28505     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28506     +         unset $pieLabelDisplay;
MPRINT(EM_REPORT_CREATE):   unset $pieLabelDisplay;
28507     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28508     +
28509     +    do / if $options['COLORLIST'];
MPRINT(EM_REPORT_CREATE):   do / if $options['COLORLIST'];
28510     +         set $colorlist $options['COLORLIST'];
MPRINT(EM_REPORT_CREATE):   set $colorlist $options['COLORLIST'];
28511     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28512     +         unset $colorlist;
MPRINT(EM_REPORT_CREATE):   unset $colorlist;
28513     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28514     +
28515     +    do / if $options['COLORINDEX'];
MPRINT(EM_REPORT_CREATE):   do / if $options['COLORINDEX'];
28516     +         set $colorindex $options['COLORINDEX'];
MPRINT(EM_REPORT_CREATE):   set $colorindex $options['COLORINDEX'];
28517     +    else;
MPRINT(EM_REPORT_CREATE):   else;
28518     +         unset $colorindex;
MPRINT(EM_REPORT_CREATE):   unset $colorindex;
28519     +    done;
MPRINT(EM_REPORT_CREATE):   done;
28520     +
28521     +end;
MPRINT(EM_REPORT_CREATE):   end;
28522     +
28523     +define event doc;
MPRINT(EM_REPORT_CREATE):   define event doc;
28524     +   eval $silkindex 0;
MPRINT(EM_REPORT_CREATE):   eval $silkindex 0;
MPRINT(EM_REPORT_CREATE):   eval $level 0;
28525     +   eval $level 0;
28526     +end;
MPRINT(EM_REPORT_CREATE):   end;
28527     +
28528     +define event GraphStyle;
MPRINT(EM_REPORT_CREATE):   define event GraphStyle;
28529     +   pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28530     +   trigger StatXMLDecl;
MPRINT(EM_REPORT_CREATE):   trigger StatXMLDecl;
28531     +   put '<SASReport version="1.0" xmlns:style="http://www.sas.com/sasreportmodel/styles">' CR;
MPRINT(EM_REPORT_CREATE):   put '<SASReport version="1.0" xmlns:style="http://www.sas.com/sasreportmodel/styles">' CR;
28532     +   put '<style:Scheme name="StatGraphScheme" version="9.2">' CR;
MPRINT(EM_REPORT_CREATE):   put '<style:Scheme name="StatGraphScheme" version="9.2">' CR;
28533     +   trigger StatGraphScheme start;
MPRINT(EM_REPORT_CREATE):   trigger StatGraphScheme start;
28534     +   trigger StatDataDefaultScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatDataDefaultScheme;
28535     +   trigger StatTwoColorRampScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatTwoColorRampScheme;
28536     +   trigger StatTwoColorAltRampScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatTwoColorAltRampScheme;
28537     +   trigger StatThreeColorRampScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatThreeColorRampScheme;
28538     +   trigger StatThreeColorAltRampScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatThreeColorAltRampScheme;
28539     +   trigger StatAxisLineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatAxisLineScheme;
28540     +   trigger StatReferenceScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatReferenceScheme;
28541     +   trigger StatGridLineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatGridLineScheme;
28542     +   trigger StatOutlineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatOutlineScheme;
28543     +   trigger StatBorderLineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBorderLineScheme;
28544     +   trigger StatTitleTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatTitleTextScheme;
28545     +   trigger StatFootnoteTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatFootnoteTextScheme;
28546     +   trigger StatDataTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatDataTextScheme;
28547     +   trigger StatLabelTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatLabelTextScheme;
28548     +   trigger StatValueTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatValueTextScheme;
28549     +   trigger StatUnicodeTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatUnicodeTextScheme;
28550     +   trigger StatBackFillScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBackFillScheme;
28551     +   trigger StatWallFillScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatWallFillScheme;
28552     +   trigger StatFloorFillScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatFloorFillScheme;
28553     +   trigger StatLegendFillScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatLegendFillScheme;
28554     +   trigger StatHeaderFillScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatHeaderFillScheme;
28555     +   trigger StatOutlierScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatOutlierScheme;
28556     +   trigger StatFitScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatFitScheme;
28557     +   trigger StatFit2Scheme;
MPRINT(EM_REPORT_CREATE):   trigger StatFit2Scheme;
28558     +   trigger StatPredictionScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatPredictionScheme;
28559     +   trigger StatConfidenceScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatConfidenceScheme;
28560     +   trigger StatConfidence2Scheme;
MPRINT(EM_REPORT_CREATE):   trigger StatConfidence2Scheme;
28561     +   trigger StatPredictionLimitsScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatPredictionLimitsScheme;
28562     +   trigger StatErrorScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatErrorScheme;
28563     +   trigger StatBoxMedianScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBoxMedianScheme;
28564     +   trigger StatBoxMeanScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBoxMeanScheme;
28565     +   trigger StatBoxWhiskerScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBoxWhiskerScheme;
28566     +   trigger StatBoxScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBoxScheme;
28567     +   trigger StatHistogramScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatHistogramScheme;
28568     +   trigger StatBandScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBandScheme;
28569     +   trigger StatContourScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatContourScheme;
28570     +   trigger StatEllipseScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatEllipseScheme;
28571     +   trigger StatAnnoLineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatAnnoLineScheme;
28572     +   trigger StatAnnoTextScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatAnnoTextScheme;
28573     +   trigger StatAnnoShapeScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatAnnoShapeScheme;
28574     +   trigger StatSelectionScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatSelectionScheme;
28575     +   trigger StatConnectLineScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatConnectLineScheme;
28576     +   trigger StatMissingScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatMissingScheme;
28577     +   trigger StatControlLimitsScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatControlLimitsScheme;
28578     +   trigger StatRunTestScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatRunTestScheme;
28579     +   trigger StatStarsScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatStarsScheme;
28580     +   trigger StatClippingScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatClippingScheme;
28581     +   trigger StatBlockScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatBlockScheme;
28582     +   trigger StatAltBlockScheme;
MPRINT(EM_REPORT_CREATE):   trigger StatAltBlockScheme;
28583     +   trigger GraphDataStyle1;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle1;
28584     +   trigger GraphDataStyle2 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle2 / if !$stopDataStyles;
28585     +   trigger GraphDataStyle3 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle3 / if !$stopDataStyles;
28586     +   trigger GraphDataStyle4 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle4 / if !$stopDataStyles;
28587     +   trigger GraphDataStyle5 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle5 / if !$stopDataStyles;
28588     +   trigger GraphDataStyle6 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle6 / if !$stopDataStyles;
28589     +   trigger GraphDataStyle7 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle7 / if !$stopDataStyles;
28590     +   trigger GraphDataStyle8 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle8 / if !$stopDataStyles;
28591     +   trigger GraphDataStyle9 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle9 / if !$stopDataStyles;
28592     +   trigger GraphDataStyle10 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle10 / if !$stopDataStyles;
28593     +   trigger GraphDataStyle11 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle11 / if !$stopDataStyles;
28594     +   trigger GraphDataStyle12 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle12 / if !$stopDataStyles;
28595     +   trigger GraphDataStyle13 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle13 / if !$stopDataStyles;
28596     +   trigger GraphDataStyle14 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle14 / if !$stopDataStyles;
28597     +   trigger GraphDataStyle15 / if !$stopDataStyles;
MPRINT(EM_REPORT_CREATE):   trigger GraphDataStyle15 / if !$stopDataStyles;
28598     +   trigger StatGraphScheme finish;
MPRINT(EM_REPORT_CREATE):   trigger StatGraphScheme finish;
28599     +   put '</style:Scheme>' CR;
MPRINT(EM_REPORT_CREATE):   put '</style:Scheme>' CR;
28600     +   unset $stopDataStyles;
MPRINT(EM_REPORT_CREATE):   unset $stopDataStyles;
28601     +end;
MPRINT(EM_REPORT_CREATE):   end;
28602     +
28603     +%macro dataStyleAttrs(index);
28604     +    do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
28605     +        set $stopDataStyles 'true';
28606     +        break;
28607     +    done;
28608     +    put '<style:Style context="GraphDataStyle' &index '"';
28609     +    putq " color=" COLOR;
28610     +    putq " altColor=" CONTRASTCOLOR;
28611     +    putq " fillColor=" COLOR;
28612     +    putq " textColor=" CONTRASTCOLOR;
28613     +    putq " lineStyle=" LINESTYLE;
28614     +    putq " lineColor=" CONTRASTCOLOR;
28615     +    putq " markerSymbol=" MARKERSYMBOL;
28616     +    putq " markerColor=" CONTRASTCOLOR;
28617     +    put "/>" NL;
28618     +%mend;
28619     +
28620     + define event GraphDataStyle1;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle1;
28621     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28622     +    style=GraphData1;
MPRINT(EM_REPORT_CREATE):   style=GraphData1;
28623     +    %dataStyleAttrs(1);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 1 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28624     + end;
MPRINT(EM_REPORT_CREATE):   end;
28625     + define event GraphDataStyle2;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle2;
28626     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28627     +    style=GraphData2;
MPRINT(EM_REPORT_CREATE):   style=GraphData2;
28628     +    %dataStyleAttrs(2);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 2 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28629     + end;
MPRINT(EM_REPORT_CREATE):   end;
28630     +define event GraphDataStyle3;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle3;
28631     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28632     +    style=GraphData3;
MPRINT(EM_REPORT_CREATE):   style=GraphData3;
28633     +    %dataStyleAttrs(3);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 3 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28634     + end;
MPRINT(EM_REPORT_CREATE):   end;
28635     + define event GraphDataStyle4;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle4;
28636     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28637     +    style=GraphData4;
MPRINT(EM_REPORT_CREATE):   style=GraphData4;
28638     +    %dataStyleAttrs(4);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 4 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28639     + end;
MPRINT(EM_REPORT_CREATE):   end;
28640     + define event GraphDataStyle5;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle5;
28641     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28642     +    style=GraphData5;
MPRINT(EM_REPORT_CREATE):   style=GraphData5;
28643     +    %dataStyleAttrs(5);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 5 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28644     + end;
MPRINT(EM_REPORT_CREATE):   end;
28645     + define event GraphDataStyle6;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle6;
28646     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28647     +    style=GraphData6;
MPRINT(EM_REPORT_CREATE):   style=GraphData6;
28648     +    %dataStyleAttrs(6);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 6 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28649     + end;
MPRINT(EM_REPORT_CREATE):   end;
28650     + define event GraphDataStyle7;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle7;
28651     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28652     +    style=GraphData7;
MPRINT(EM_REPORT_CREATE):   style=GraphData7;
28653     +    %dataStyleAttrs(7);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 7 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28654     + end;
MPRINT(EM_REPORT_CREATE):   end;
28655     + define event GraphDataStyle8;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle8;
28656     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28657     +    style=GraphData8;
MPRINT(EM_REPORT_CREATE):   style=GraphData8;
28658     +    %dataStyleAttrs(8);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 8 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28659     + end;
MPRINT(EM_REPORT_CREATE):   end;
28660     + define event GraphDataStyle9;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle9;
28661     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28662     +    style=GraphData9;
MPRINT(EM_REPORT_CREATE):   style=GraphData9;
28663     +    %dataStyleAttrs(9);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 9 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28664     + end;
MPRINT(EM_REPORT_CREATE):   end;
28665     + define event GraphDataStyle10;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle10;
28666     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28667     +    style=GraphData10;
MPRINT(EM_REPORT_CREATE):   style=GraphData10;
28668     +    %dataStyleAttrs(10);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 10 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28669     + end;
MPRINT(EM_REPORT_CREATE):   end;
28670     + define event GraphDataStyle11;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle11;
28671     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28672     +    style=GraphData11;
MPRINT(EM_REPORT_CREATE):   style=GraphData11;
28673     +    %dataStyleAttrs(11);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 11 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28674     + end;
MPRINT(EM_REPORT_CREATE):   end;
28675     + define event GraphDataStyle12;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle12;
28676     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28677     +    style=GraphData12;
MPRINT(EM_REPORT_CREATE):   style=GraphData12;
28678     +    %dataStyleAttrs(12);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 12 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28679     + end;
MPRINT(EM_REPORT_CREATE):   end;
28680     + define event GraphDataStyle13;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle13;
28681     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28682     +    style=GraphData13;
MPRINT(EM_REPORT_CREATE):   style=GraphData13;
28683     +    %dataStyleAttrs(13);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 13 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28684     + end;
MPRINT(EM_REPORT_CREATE):   end;
28685     + define event GraphDataStyle14;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle14;
28686     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28687     +    style=GraphData14;
MPRINT(EM_REPORT_CREATE):   style=GraphData14;
28688     +    %dataStyleAttrs(14);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 14 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28689     + end;
MPRINT(EM_REPORT_CREATE):   end;
28690     + define event GraphDataStyle15;
MPRINT(EM_REPORT_CREATE):   define event GraphDataStyle15;
28691     +    pure_style;
MPRINT(EM_REPORT_CREATE):   pure_style;
28692     +    style=GraphData15;
MPRINT(EM_REPORT_CREATE):   style=GraphData15;
28693     +    %dataStyleAttrs(15);
MPRINT(DATASTYLEATTRS):   do / if !any(LINESTYLE, CONTRASTCOLOR, MARKERSYMBOL, COLOR);
MPRINT(DATASTYLEATTRS):   set $stopDataStyles 'true';
MPRINT(DATASTYLEATTRS):   break;
MPRINT(DATASTYLEATTRS):   done;
MPRINT(DATASTYLEATTRS):   put '<style:Style context="GraphDataStyle' 15 '"';
MPRINT(DATASTYLEATTRS):   putq " color=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " altColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " fillColor=" COLOR;
MPRINT(DATASTYLEATTRS):   putq " textColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " lineStyle=" LINESTYLE;
MPRINT(DATASTYLEATTRS):   putq " lineColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   putq " markerSymbol=" MARKERSYMBOL;
MPRINT(DATASTYLEATTRS):   putq " markerColor=" CONTRASTCOLOR;
MPRINT(DATASTYLEATTRS):   put "/>" NL;
MPRINT(EM_REPORT_CREATE):  ;
28694     + end;
MPRINT(EM_REPORT_CREATE):   end;
28695     +
28696     +define event BeginGraph;
MPRINT(EM_REPORT_CREATE):   define event BeginGraph;
28697     +putlog "BeginGraph";
MPRINT(EM_REPORT_CREATE):   putlog "BeginGraph";
28698     +   trigger GraphStyle;
MPRINT(EM_REPORT_CREATE):   trigger GraphStyle;
28699     +   put '<View>' CR;
MPRINT(EM_REPORT_CREATE):   put '<View>' CR;
28700     +   put '<StatGraph';
MPRINT(EM_REPORT_CREATE):   put '<StatGraph';
28701     +   put ' version="9.2_S2DVR"';
MPRINT(EM_REPORT_CREATE):   put ' version="9.2_S2DVR"';
28702     +   putq " designHeight=" $graphheight;
MPRINT(EM_REPORT_CREATE):   putq " designHeight=" $graphheight;
28703     +   putq " designWidth=" $graphwidth;
MPRINT(EM_REPORT_CREATE):   putq " designWidth=" $graphwidth;
28704     +   put ' style:style="StatGraphStyle';
MPRINT(EM_REPORT_CREATE):   put ' style:style="StatGraphStyle';
28705     +   put anchor '"';
MPRINT(EM_REPORT_CREATE):   put anchor '"';
28706     +   put '>' CR;
MPRINT(EM_REPORT_CREATE):   put '>' CR;
28707     +   set $graph_started "true";
MPRINT(EM_REPORT_CREATE):   set $graph_started "true";
28708     +   eval $level 0;
MPRINT(EM_REPORT_CREATE):   eval $level 0;
28709     +end;
MPRINT(EM_REPORT_CREATE):   end;
28710     +
28711     +define event LayoutOverlay;
MPRINT(EM_REPORT_CREATE):   define event LayoutOverlay;
28712     +   start:
28713     +      trigger BeginGraph / if !$graph_started;
MPRINT(EM_REPORT_CREATE):   start: trigger BeginGraph / if !$graph_started;
28714     +      put '<EntryTitle><EntryItem>' $title '</EntryItem></EntryTitle>' CR / if $title;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title '</EntryItem></EntryTitle>' CR / if $title;
28715     +      put '<EntryTitle><EntryItem>' $title2 '</EntryItem></EntryTitle>' CR / if $title2;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title2 '</EntryItem></EntryTitle>' CR / if $title2;
28716     +      put '<EntryTitle><EntryItem>' $title3'</EntryItem></EntryTitle>' CR / if $title3;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title3'</EntryItem></EntryTitle>' CR / if $title3;
28717     +      put '<EntryTitle><EntryItem>' $title4 '</EntryItem></EntryTitle>' CR / if $title4;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title4 '</EntryItem></EntryTitle>' CR / if $title4;
28718     +      put '<LayoutOverlay>' CR;
MPRINT(EM_REPORT_CREATE):   put '<LayoutOverlay>' CR;
28719     +      eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   unset $title;
MPRINT(EM_REPORT_CREATE):   unset $title2;
28720     +      unset $title;
MPRINT(EM_REPORT_CREATE):   unset $title3;
28721     +      unset $title2;
MPRINT(EM_REPORT_CREATE):   unset $title4;
28722     +      unset $title3;
MPRINT(EM_REPORT_CREATE):   finish: put '</LayoutOverlay>' CR;
28723     +      unset $title4;
MPRINT(EM_REPORT_CREATE):   eval $level $level-1;
28724     +   finish:
28725     +      put '</LayoutOverlay>' CR;
28726     +      eval $level $level-1;
MPRINT(EM_REPORT_CREATE):   trigger EndGraph / if $level=0;
28727     +      trigger EndGraph / if $level=0;
28728     +end;
MPRINT(EM_REPORT_CREATE):   end;
28729     +
28730     +define event LayoutRegion;
MPRINT(EM_REPORT_CREATE):   define event LayoutRegion;
28731     +   start:
28732     +      trigger BeginGraph / if !$graph_started;
MPRINT(EM_REPORT_CREATE):   start: trigger BeginGraph / if !$graph_started;
28733     +      put '<EntryTitle><EntryItem>' $title '</EntryItem></EntryTitle>' CR / if $title;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title '</EntryItem></EntryTitle>' CR / if $title;
28734     +      put '<EntryTitle><EntryItem>' $title2 '</EntryItem></EntryTitle>' CR / if $title2;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title2 '</EntryItem></EntryTitle>' CR / if $title2;
28735     +      put '<EntryTitle><EntryItem>' $title3'</EntryItem></EntryTitle>' CR / if $title3;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title3'</EntryItem></EntryTitle>' CR / if $title3;
28736     +      put '<EntryTitle><EntryItem>' $title4 '</EntryItem></EntryTitle>' CR / if $title4;
MPRINT(EM_REPORT_CREATE):   put '<EntryTitle><EntryItem>' $title4 '</EntryItem></EntryTitle>' CR / if $title4;
28737     +      put '<LayoutRegion>' CR;
MPRINT(EM_REPORT_CREATE):   put '<LayoutRegion>' CR;
28738     +      eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   unset $title;
MPRINT(EM_REPORT_CREATE):   unset $title2;
28739     +      unset $title;
MPRINT(EM_REPORT_CREATE):   unset $title3;
28740     +      unset $title2;
MPRINT(EM_REPORT_CREATE):   unset $title4;
28741     +      unset $title3;
MPRINT(EM_REPORT_CREATE):   finish: put '</LayoutRegion>' CR;
28742     +      unset $title4;
MPRINT(EM_REPORT_CREATE):   eval $level $level-1;
28743     +   finish:
28744     +      put '</LayoutRegion>' CR;
28745     +      eval $level $level-1;
MPRINT(EM_REPORT_CREATE):   trigger EndGraph / if $level=0;
28746     +      trigger EndGraph / if $level=0;
28747     +end;
MPRINT(EM_REPORT_CREATE):   end;
28748     +
28749     +define event LayoutLattice;
MPRINT(EM_REPORT_CREATE):   define event LayoutLattice;
28750     +   start:
28751     +      trigger BeginGraph / if !$graph_started;
MPRINT(EM_REPORT_CREATE):   start: trigger BeginGraph / if !$graph_started;
28752     +      put '<LayoutLattice';
MPRINT(EM_REPORT_CREATE):   put '<LayoutLattice';
28753     +      putq " rows=" $rows;
MPRINT(EM_REPORT_CREATE):   putq " rows=" $rows;
28754     +      putq " columns=" $columns;
MPRINT(EM_REPORT_CREATE):   putq " columns=" $columns;
28755     +      put '>' CR;
MPRINT(EM_REPORT_CREATE):   put '>' CR;
28756     +      unset $rows;
MPRINT(EM_REPORT_CREATE):   unset $rows;
28757     +      unset $columns;
MPRINT(EM_REPORT_CREATE):   unset $columns;
28758     +      eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   finish: put '</LayoutLattice>' CR;
MPRINT(EM_REPORT_CREATE):   eval $level $level-1;
28759     +   finish:
28760     +      put '</LayoutLattice>' CR;
28761     +      eval $level $level-1;
MPRINT(EM_REPORT_CREATE):   trigger EndGraph / if $level=0;
28762     +      trigger EndGraph / if $level=0;
28763     +end;
MPRINT(EM_REPORT_CREATE):   end;
28764     +
28765     +define event LayoutGridded;
MPRINT(EM_REPORT_CREATE):   define event LayoutGridded;
28766     +   start:
28767     +      trigger BeginGraph / if !$graph_started;
MPRINT(EM_REPORT_CREATE):   start: trigger BeginGraph / if !$graph_started;
28768     +      put '<LayoutGridded';
MPRINT(EM_REPORT_CREATE):   put '<LayoutGridded';
28769     +      putq " rows=" $rows;
MPRINT(EM_REPORT_CREATE):   putq " rows=" $rows;
28770     +      putq " columns=" $columns;
MPRINT(EM_REPORT_CREATE):   putq " columns=" $columns;
28771     +      put '>' CR;
MPRINT(EM_REPORT_CREATE):   put '>' CR;
28772     +      unset $rows;
MPRINT(EM_REPORT_CREATE):   unset $rows;
28773     +      unset $columns;
MPRINT(EM_REPORT_CREATE):   unset $columns;
28774     +      eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   eval $level $level+1;
MPRINT(EM_REPORT_CREATE):   finish: put '</LayoutGridded>' CR;
MPRINT(EM_REPORT_CREATE):   eval $level $level-1;
28775     +   finish:
28776     +      put '</LayoutGridded>' CR;
28777     +      eval $level $level-1;
MPRINT(EM_REPORT_CREATE):   trigger EndGraph / if $level=0;
28778     +      trigger EndGraph / if $level=0;
28779     +end;
MPRINT(EM_REPORT_CREATE):   end;
28780     +
28781     +define event EndGraph;
MPRINT(EM_REPORT_CREATE):   define event EndGraph;
28782     +   put '</StatGraph>' CR;
MPRINT(EM_REPORT_CREATE):   put '</StatGraph>' CR;
28783     +   put '</View>' CR;
MPRINT(EM_REPORT_CREATE):   put '</View>' CR;
28784     +   put "</SASReport>" CR;
MPRINT(EM_REPORT_CREATE):   put "</SASReport>" CR;
28785     +   unset $graph_started;
MPRINT(EM_REPORT_CREATE):   unset $graph_started;
28786     +end;
MPRINT(EM_REPORT_CREATE):   end;
28787     +
28788     +define event ScatterPlot;
MPRINT(EM_REPORT_CREATE):   define event ScatterPlot;
28789     +   put '<ScatterPlot';
MPRINT(EM_REPORT_CREATE):   put '<ScatterPlot';
28790     +   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
MPRINT(EM_REPORT_CREATE):   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
28791     +   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
MPRINT(EM_REPORT_CREATE):   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
28792     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28793     +   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
28794     +   unset $yvar;
MPRINT(EM_REPORT_CREATE):   unset $yvar;
28795     +end;
MPRINT(EM_REPORT_CREATE):   end;
28796     +
28797     +define event SeriesPlot;
MPRINT(EM_REPORT_CREATE):   define event SeriesPlot;
28798     +   put '<SeriesPlot';
MPRINT(EM_REPORT_CREATE):   put '<SeriesPlot';
28799     +   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
MPRINT(EM_REPORT_CREATE):   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
28800     +   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
MPRINT(EM_REPORT_CREATE):   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
28801     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28802     +   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
28803     +   unset $yvar;
MPRINT(EM_REPORT_CREATE):   unset $yvar;
28804     +end;
MPRINT(EM_REPORT_CREATE):   end;
28805     +
28806     +define event BandPlot;
MPRINT(EM_REPORT_CREATE):   define event BandPlot;
28807     +   put '<BandPlot';
MPRINT(EM_REPORT_CREATE):   put '<BandPlot';
28808     +   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
MPRINT(EM_REPORT_CREATE):   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
28809     +   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
MPRINT(EM_REPORT_CREATE):   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
28810     +   put ' limitUpper="StatGraphDataIDX#' $limitupper '"' / if $limitupper;
MPRINT(EM_REPORT_CREATE):   put ' limitUpper="StatGraphDataIDX#' $limitupper '"' / if $limitupper;
28811     +   put ' limitLower="StatGraphDataIDX#' $limitlower '"' / if $limitlower;
MPRINT(EM_REPORT_CREATE):   put ' limitLower="StatGraphDataIDX#' $limitlower '"' / if $limitlower;
28812     +   putq " lineAttrs=" $style;
MPRINT(EM_REPORT_CREATE):   putq " lineAttrs=" $style;
28813     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28814     +   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
28815     +   unset $yvar;
MPRINT(EM_REPORT_CREATE):   unset $yvar;
28816     +end;
MPRINT(EM_REPORT_CREATE):   end;
28817     +
28818     +define event Pie;
MPRINT(EM_REPORT_CREATE):   define event Pie;
28819     +   put '<Pie';
MPRINT(EM_REPORT_CREATE):   put '<Pie';
28820     +   put ' category="StatGraphDataIDX#' $category '"' / if $category;
MPRINT(EM_REPORT_CREATE):   put ' category="StatGraphDataIDX#' $category '"' / if $category;
28821     +   put ' response="StatGraphDataIDX#' $response '"' / if $response;
MPRINT(EM_REPORT_CREATE):   put ' response="StatGraphDataIDX#' $response '"' / if $response;
28822     +   putq " pieLabelComponents=" $pieLabelDisplay;
MPRINT(EM_REPORT_CREATE):   putq " pieLabelComponents=" $pieLabelDisplay;
28823     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28824     +   unset $category;
MPRINT(EM_REPORT_CREATE):   unset $category;
28825     +   unset $response;
MPRINT(EM_REPORT_CREATE):   unset $response;
28826     +end;
MPRINT(EM_REPORT_CREATE):   end;
28827     +
28828     +define event Bar;
MPRINT(EM_REPORT_CREATE):   define event Bar;
28829     +   put '<Bar';
MPRINT(EM_REPORT_CREATE):   put '<Bar';
28830     +   put ' category="StatGraphDataIDX#' $category '"' / if $category;
MPRINT(EM_REPORT_CREATE):   put ' category="StatGraphDataIDX#' $category '"' / if $category;
28831     +   put ' response="StatGraphDataIDX#' $response '"' / if $response;
MPRINT(EM_REPORT_CREATE):   put ' response="StatGraphDataIDX#' $response '"' / if $response;
28832     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28833     +   unset $category;
MPRINT(EM_REPORT_CREATE):   unset $category;
28834     +   unset $response;
MPRINT(EM_REPORT_CREATE):   unset $response;
28835     +end;
MPRINT(EM_REPORT_CREATE):   end;
28836     +
28837     +define event Histogram;
MPRINT(EM_REPORT_CREATE):   define event Histogram;
28838     +   put '<Histogram';
MPRINT(EM_REPORT_CREATE):   put '<Histogram';
28839     +   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
MPRINT(EM_REPORT_CREATE):   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
28840     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28841     +   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
28842     +end;
MPRINT(EM_REPORT_CREATE):   end;
28843     +
28844     +define event DecisionTree;
MPRINT(EM_REPORT_CREATE):   define event DecisionTree;
28845     +   put '<DecisionTree';
MPRINT(EM_REPORT_CREATE):   put '<DecisionTree';
28846     +   put ' id="StatGraphDataIDX#' $id '"' / if $id;
MPRINT(EM_REPORT_CREATE):   put ' id="StatGraphDataIDX#' $id '"' / if $id;
28847     +   put ' parent="StatGraphDataIDX#' $parent '"' / if $parent;
MPRINT(EM_REPORT_CREATE):   put ' parent="StatGraphDataIDX#' $parent '"' / if $parent;
28848     +   put ' aboveText="StatGraphDataIDX#' $abovetext '"' / if $abovetext;
MPRINT(EM_REPORT_CREATE):   put ' aboveText="StatGraphDataIDX#' $abovetext '"' / if $abovetext;
28849     +   put ' belowText="StatGraphDataIDX#' $belowtext '"' / if $belowtext;
MPRINT(EM_REPORT_CREATE):   put ' belowText="StatGraphDataIDX#' $belowtext '"' / if $belowtext;
28850     +   put ' linkWidth="StatGraphDataIDX#' $linkwidth '"' / if $linkwidth;
MPRINT(EM_REPORT_CREATE):   put ' linkWidth="StatGraphDataIDX#' $linkwidth '"' / if $linkwidth;
28851     +   put ' nodeColor="StatGraphDataIDX#' $nodecolor '"' / if $nodecolor;
MPRINT(EM_REPORT_CREATE):   put ' nodeColor="StatGraphDataIDX#' $nodecolor '"' / if $nodecolor;
28852     +   put ' nodeText="StatGraphDataIDX#' $nodetext '"' / if $nodetext;
MPRINT(EM_REPORT_CREATE):   put ' nodeText="StatGraphDataIDX#' $nodetext '"' / if $nodetext;
28853     +   put ' nodeSize="StatGraphDataIDX#' $nodesize '"' / if $nodesize;
MPRINT(EM_REPORT_CREATE):   put ' nodeSize="StatGraphDataIDX#' $nodesize '"' / if $nodesize;
28854     +   put ' fitToRegion="true"';
MPRINT(EM_REPORT_CREATE):   put ' fitToRegion="true"';
28855     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28856     +   unset $id;
MPRINT(EM_REPORT_CREATE):   unset $id;
28857     +   unset $parent;
MPRINT(EM_REPORT_CREATE):   unset $parent;
28858     +   unset $abovetext;
MPRINT(EM_REPORT_CREATE):   unset $abovetext;
28859     +   unset $belowtext;
MPRINT(EM_REPORT_CREATE):   unset $belowtext;
28860     +   unset $linkwidth;
MPRINT(EM_REPORT_CREATE):   unset $linkwidth;
28861     +   unset $nodecolor;
MPRINT(EM_REPORT_CREATE):   unset $nodecolor;
28862     +   unset $nodetext;
MPRINT(EM_REPORT_CREATE):   unset $nodetext;
28863     +end;
MPRINT(EM_REPORT_CREATE):   end;
28864     +
28865     +define event Icicle;
MPRINT(EM_REPORT_CREATE):   define event Icicle;
28866     +   put '<Icicle';
MPRINT(EM_REPORT_CREATE):   put '<Icicle';
28867     +   put ' id="StatGraphDataIDX#' $id '"' / if $id;
MPRINT(EM_REPORT_CREATE):   put ' id="StatGraphDataIDX#' $id '"' / if $id;
28868     +   put ' parent="StatGraphDataIDX#' $parent '"' / if $parent;
MPRINT(EM_REPORT_CREATE):   put ' parent="StatGraphDataIDX#' $parent '"' / if $parent;
28869     +   put ' nodeSize="StatGraphDataIDX#' $nodesize '"' / if $nodesize;
MPRINT(EM_REPORT_CREATE):   put ' nodeSize="StatGraphDataIDX#' $nodesize '"' / if $nodesize;
28870     +   put ' nodeColor="StatGraphDataIDX#' $nodecolor '"' / if $nodecolor;
MPRINT(EM_REPORT_CREATE):   put ' nodeColor="StatGraphDataIDX#' $nodecolor '"' / if $nodecolor;
28871     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28872     +   unset $id;
MPRINT(EM_REPORT_CREATE):   unset $id;
28873     +   unset $parent;
MPRINT(EM_REPORT_CREATE):   unset $parent;
28874     +   unset $nodecolor;
MPRINT(EM_REPORT_CREATE):   unset $nodecolor;
28875     +   unset $nodesize;
MPRINT(EM_REPORT_CREATE):   unset $nodesize;
28876     +end;
MPRINT(EM_REPORT_CREATE):   end;
28877     +
28878     +define event PFD;
MPRINT(EM_REPORT_CREATE):   define event PFD;
28879     +   put '<PFD';
MPRINT(EM_REPORT_CREATE):   put '<PFD';
28880     +   putq " id=" $id / if $id;
MPRINT(EM_REPORT_CREATE):   putq " id=" $id / if $id;
28881     +   put ' pfditems="StatGraphDataIDX#' $pfdItems '"' / if $pfdItems;
MPRINT(EM_REPORT_CREATE):   put ' pfditems="StatGraphDataIDX#' $pfdItems '"' / if $pfdItems;
28882     +   putq " isGridVisible=" $isgridvisible / if $isgridvisible;
MPRINT(EM_REPORT_CREATE):   putq " isGridVisible=" $isgridvisible / if $isgridvisible;
28883     +   putq " gridHeight=" $gridheight / if $gridheight;
MPRINT(EM_REPORT_CREATE):   putq " gridHeight=" $gridheight / if $gridheight;
28884     +   putq " gridWidth=" $gridwidth / if $gridwidth;
MPRINT(EM_REPORT_CREATE):   putq " gridWidth=" $gridwidth / if $gridwidth;
28885     +   putq " gridStyle=" $gridstyle / if $gridstyle;
MPRINT(EM_REPORT_CREATE):   putq " gridStyle=" $gridstyle / if $gridstyle;
28886     +   putq " layoutActivated=" $layoutActivated / if $layoutActivated;
MPRINT(EM_REPORT_CREATE):   putq " layoutActivated=" $layoutActivated / if $layoutActivated;
28887     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28888     +   unset $id;
MPRINT(EM_REPORT_CREATE):   unset $id;
28889     +   unset $parent;
MPRINT(EM_REPORT_CREATE):   unset $parent;
28890     +   unset $nodecolor;
MPRINT(EM_REPORT_CREATE):   unset $nodecolor;
28891     +   unset $nodesize;
MPRINT(EM_REPORT_CREATE):   unset $nodesize;
28892     +end;
MPRINT(EM_REPORT_CREATE):   end;
28893     +
28894     +define event HeatMap;
MPRINT(EM_REPORT_CREATE):   define event HeatMap;
28895     +   trigger BeginGraph / if !$graph_started;
MPRINT(EM_REPORT_CREATE):   trigger BeginGraph / if !$graph_started;
28896     +   put '<HeatmapClassic';
MPRINT(EM_REPORT_CREATE):   put '<HeatmapClassic';
28897     +   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
MPRINT(EM_REPORT_CREATE):   put ' x="StatGraphDataIDX#' $xvar '"' / if $xvar;
28898     +   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
MPRINT(EM_REPORT_CREATE):   put ' y="StatGraphDataIDX#' $yvar '"' / if $yvar;
28899     +   put ' response="StatGraphDataIDX#' $response '"' / if $response;
MPRINT(EM_REPORT_CREATE):   put ' response="StatGraphDataIDX#' $response '"' / if $response;
28900     +   putq ' colorList=' $colorlist / if $colorlist;
MPRINT(EM_REPORT_CREATE):   putq ' colorList=' $colorlist / if $colorlist;
28901     +   putq ' colorIndex=' $colorindex / if $colorindex;
MPRINT(EM_REPORT_CREATE):   putq ' colorIndex=' $colorindex / if $colorindex;
28902     +   put '/>' CR;
MPRINT(EM_REPORT_CREATE):   put '/>' CR;
28903     +   trigger EndGraph / if $level=0;
MPRINT(EM_REPORT_CREATE):   trigger EndGraph / if $level=0;
MPRINT(EM_REPORT_CREATE):   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $yvar;
28904     +   unset $xvar;
MPRINT(EM_REPORT_CREATE):   unset $response;
28905     +   unset $yvar;
MPRINT(EM_REPORT_CREATE):   unset $colorlist;
28906     +   unset $response;
MPRINT(EM_REPORT_CREATE):   unset $colorindex;
28907     +   unset $colorlist;
28908     +   unset $colorindex;
28909     +end;
MPRINT(EM_REPORT_CREATE):   end;
28910     +
28911     +end;
MPRINT(EM_REPORT_CREATE):   end;
NOTE: TAGSET 'Tagsets.Gtl' has been saved to: WORK.TEMPLAT
28912     +run;
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_CREATE):   run;
28913     +
28914     +
28915     +
28916     +
28917     +
28918     +
28919     +/* data_template.sas */
28920     +proc template;
MPRINT(EM_REPORT_CREATE):   proc template;
28921     +define statgraph dataonly / store=work.templat;
MPRINT(EM_REPORT_CREATE):   define statgraph dataonly / store=work.templat;
28922     +dynamic dummy1 dummy2 var1 var2 var3 var4 var5 var6 var7 var8 var9 var10;
MPRINT(EM_REPORT_CREATE):   dynamic dummy1 dummy2 var1 var2 var3 var4 var5 var6 var7 var8 var9 var10;
28923     +begingraph;
MPRINT(EM_REPORT_CREATE):   begingraph;
28924     +if (0)
28925     +layout overlay;
MPRINT(EM_REPORT_CREATE):   if (0) layout overlay;
28926     +   scatterplot x=dummy1 y=dummy2 /
28927     +      rolename=(a=var1 b=var2 c=var3 d=var4 e=var5 f=var6 g=var7 h=var8 i=var9 j=var10);
MPRINT(EM_REPORT_CREATE):   scatterplot x=dummy1 y=dummy2 / rolename=(a=var1 b=var2 c=var3 d=var4 e=var5 f=var6 g=var7 h=var8 i=var9 j=var10);
28928     +endlayout;
MPRINT(EM_REPORT_CREATE):   endlayout;
28929     +endif;
MPRINT(EM_REPORT_CREATE):   endif;
28930     +endgraph;
MPRINT(EM_REPORT_CREATE):   endgraph;
28931     +end;
MPRINT(EM_REPORT_CREATE):   end;
NOTE: STATGRAPH 'Dataonly' has been saved to: WORK.TEMPLAT
28932     +run;
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_CREATE):   run;
28933     +
NOTE: %INCLUDE (level 1) ending.
MPRINT(EM_REPORT_CREATE):   filename temp;
NOTE: Fileref TEMP has been deassigned.
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Report")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='REPORT';
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_CREATE):   ;
MPRINT(EM_REGISTER):   data WORK.EM_USER_KEY;
MPRINT(EM_REGISTER):   length KEY $32 TYPE $10 FILE $200 FOLDER $32 EXTENSION $8 AUTODELETE $1 property $1 action $8;
MPRINT(EM_REGISTER):   key = upcase("REPORT");
MPRINT(EM_REGISTER):   type = upcase("FILE");
MPRINT(EM_REGISTER):   file = "REPORT";
MPRINT(EM_REGISTER):   folder = "";
MPRINT(EM_REGISTER):   extension = "pdf";
MPRINT(EM_REGISTER):   AUTODELETE = "Y";
MPRINT(EM_REGISTER):   property = "N";
MPRINT(EM_REGISTER):   action = "";
MPRINT(EM_REGISTER):   run;

NOTE: The data set WORK.EM_USER_KEY has 1 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_PATH):   proc display c=sashelp.emutil.path.scl;
MPRINT(EM_PATH):   run;

28934      data emreportpath;
MPRINT(EM_PATH):   data emreportpath;
28935      length nodelabel $32 component $32;
MPRINT(EM_PATH):   length nodelabel $32 component $32;
28936      nodelabel="Ids";
MPRINT(EM_PATH):   nodelabel="Ids";
28937      component="DataSource";
MPRINT(EM_PATH):   component="DataSource";
28938      output;
MPRINT(EM_PATH):   output;
28939      nodelabel="Stat";
MPRINT(EM_PATH):   nodelabel="Stat";
28940      component="StatExplore";
MPRINT(EM_PATH):   component="StatExplore";
28941      output;
MPRINT(EM_PATH):   output;
28942      nodelabel="Part";
MPRINT(EM_PATH):   nodelabel="Part";
28943      component="Partition";
MPRINT(EM_PATH):   component="Partition";
28944      output;
MPRINT(EM_PATH):   output;
28945      nodelabel="Impt";
MPRINT(EM_PATH):   nodelabel="Impt";
28946      component="Impute";
MPRINT(EM_PATH):   component="Impute";
28947      output;
MPRINT(EM_PATH):   output;
28948      nodelabel="CNTRL";
MPRINT(EM_PATH):   nodelabel="CNTRL";
28949      component="";
MPRINT(EM_PATH):   component="";
28950      output;
MPRINT(EM_PATH):   output;
28951      nodelabel="Neural2";
MPRINT(EM_PATH):   nodelabel="Neural2";
28952      component="NeuralNetwork";
MPRINT(EM_PATH):   component="NeuralNetwork";
28953      output;
MPRINT(EM_PATH):   output;
28954      nodelabel="Neural";
MPRINT(EM_PATH):   nodelabel="Neural";
28955      component="NeuralNetwork";
MPRINT(EM_PATH):   component="NeuralNetwork";
28956      output;
MPRINT(EM_PATH):   output;
28957      nodelabel="Neural3";
MPRINT(EM_PATH):   nodelabel="Neural3";
28958      component="NeuralNetwork";
MPRINT(EM_PATH):   component="NeuralNetwork";
28959      output;
MPRINT(EM_PATH):   output;
28960      nodelabel="Trans";
MPRINT(EM_PATH):   nodelabel="Trans";
28961      component="Transform";
MPRINT(EM_PATH):   component="Transform";
28962      output;
MPRINT(EM_PATH):   output;
28963      nodelabel="BINNING";
MPRINT(EM_PATH):   nodelabel="BINNING";
28964      component="Binning";
MPRINT(EM_PATH):   component="Binning";
28965      output;
MPRINT(EM_PATH):   output;
28966      nodelabel="Varsel";
MPRINT(EM_PATH):   nodelabel="Varsel";
28967      component="VariableSelection";
MPRINT(EM_PATH):   component="VariableSelection";
28968      output;
MPRINT(EM_PATH):   output;
28969      nodelabel="Neural6";
MPRINT(EM_PATH):   nodelabel="Neural6";
28970      component="NeuralNetwork";
MPRINT(EM_PATH):   component="NeuralNetwork";
28971      output;
MPRINT(EM_PATH):   output;
28972      nodelabel="Neural5";
MPRINT(EM_PATH):   nodelabel="Neural5";
28973      component="NeuralNetwork";
MPRINT(EM_PATH):   component="NeuralNetwork";
28974      output;
MPRINT(EM_PATH):   output;
28975      nodelabel="Neural4";
MPRINT(EM_PATH):   nodelabel="Neural4";
28976      component="NeuralNetwork";
MPRINT(EM_PATH):   component="NeuralNetwork";
28977      output;
MPRINT(EM_PATH):   output;
28978      nodelabel="CNTRL2";
MPRINT(EM_PATH):   nodelabel="CNTRL2";
28979      component="";
MPRINT(EM_PATH):   component="";
28980      output;
MPRINT(EM_PATH):   output;
28981      nodelabel="CNTRL3";
MPRINT(EM_PATH):   nodelabel="CNTRL3";
28982      component="";
MPRINT(EM_PATH):   component="";
28983      output;
MPRINT(EM_PATH):   output;
28984      nodelabel="MdlComp";
MPRINT(EM_PATH):   nodelabel="MdlComp";
28985      component="ModelCompare";
MPRINT(EM_PATH):   component="ModelCompare";
28986      output;
MPRINT(EM_PATH):   output;
28987      run;
MPRINT(EM_PATH):   run;

NOTE: The data set WORK.EMREPORTPATH has 17 observations and 2 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.14 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_PATH):   
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):   data emreportpath;
MPRINT(EM_REPORT_CREATE):   set emreportpath;
MPRINT(EM_REPORT_CREATE):   rename nodelabel=nodeid;
MPRINT(EM_REPORT_CREATE):   nodeIndex = _n_;
MPRINT(EM_REPORT_CREATE):   run;

NOTE: There were 17 observations read from the data set WORK.EMREPORTPATH.
NOTE: The data set WORK.EMREPORTPATH has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_CREATE):   *** create new style template to address fonts in ods text;
MPRINT(EM_REPORT_CREATE):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_CREATE):   proc template ;
MPRINT(EM_REPORT_CREATE):   define style styles.em_style / store=work.templat;
MPRINT(EM_REPORT_CREATE):   parent= styles.LISTING;
MPRINT(EM_REPORT_CREATE):   style usertext from usertext / foreground=black font_size=10 pt font_face="Arial" font_weight=bold ;
MPRINT(EM_REPORT_CREATE):   style systemtitle from systemtitle / color=colors("systitlefg") backgroundcolor=colors("systitlebg") fontsize=10 pt font_face="Arial" font_weight=bold ;
MPRINT(EM_REPORT_CREATE):   style systemfooter from systemfooter / color=colors("systitlefg") backgroundcolor=colors("systitlebg") font_face="Arial" ;
MPRINT(EM_REPORT_CREATE):   style GraphFonts from GraphFonts / 'GraphTitleFont' = ("Arial", 10 pt) 'GraphTitle1Font' = ("Arial", 10 pt) 'GraphLabelFont' = ("Arial", 8 pt) 'GraphFootnoteFont' = ("Arial", 6 pt) 'GraphValueFont' = ("Arial", 6 pt) 
'GraphDataFont' = ("Arial", 6 pt) ;
MPRINT(EM_REPORT_CREATE):   style Fonts from Fonts/ 'TitleFont' = ("Arial", 10 pt) 'TitleFont2' = ("Arial", 10 pt) 'StrongFont' = ("Arial", 6 pt) 'EmphasisFont' = ("Arial", 6 pt) 'headingFont' = ("Arial", 6 pt) 'headingEmphasisFont' = ("Arial", 6 pt) 
'FixedEmphasisFont' = ("Arial", 6 pt) 'FixedStrongFont' = ("Arial", 6 pt) 'FixedHeadingFont' = ("Arial", 6 pt) 'FixedFont' = ("Arial", 6 pt) 'BatchFixedFont' = ("Arial", 6 pt) 'docFont' = ("Arial", 6 pt) ;
MPRINT(EM_REPORT_CREATE):   style GraphTitleText from GraphTitleText / font_face="Arial";
MPRINT(EM_REPORT_CREATE):   style data from data / font_size=6 pt;
MPRINT(EM_REPORT_CREATE):   style header from header / font_size=8 pt;
MPRINT(EM_REPORT_CREATE):   style rowheader from header;
MPRINT(EM_REPORT_CREATE):   end;
NOTE: STYLE 'Styles.Em_style' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_CREATE):   run;
MPRINT(EM_REPORT_CREATE):   quit;
MPRINT(EM_REPORT_CREATE):   *** options for page layout;
MPRINT(EM_REPORT_CREATE):   options nodate nocenter number ls=97 ;
MPRINT(EM_REPORT_CREATE):   *** get file name;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):   *** turn off LISTING and turn on the specified destination;
MPRINT(EM_REPORT_CREATE):   ods listing close;
MPRINT(EM_REPORT_CREATE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_CREATE):   ods PDF file="J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Report\REPORT.pdf" style=styles.em_style startpage=NO uniform NOTOC ;
NOTE: Writing ODS PDF output to DISK destination 
      "J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\REPORT.pdf", printer "PDF".
NOTE: This SAS session is using a registry in WORK.  All changes will be lost at the end of this 
      session.
MPRINT(EM_REPORT_CREATE):   *** titles and footnotes;
MPRINT(EM_REPORT_CREATE):   ods PDF text=" ";
MPRINT(EM_REPORT_CREATE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):   ods proclabel "Report Information";
MPRINT(EM_REPORT_CREATE):   data _null_;
MPRINT(EM_REPORT_CREATE):   call symput('report_date', strip(put(date(), NLDATE.)));
MPRINT(EM_REPORT_CREATE):   call symput('report_time', strip(put(datetime(), NLTIME.)));
MPRINT(EM_REPORT_CREATE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_CREATE):   data _null_;
MPRINT(EM_REPORT_CREATE):   file print ;
MPRINT(EM_REPORT_CREATE):   put "User       = jmmorr01" ;
MPRINT(EM_REPORT_CREATE):   put "Date       = 21:48:22  November 07" ;
MPRINT(EM_REPORT_CREATE):   put "Project    = CIS 445 Project 3 " ;
MPRINT(EM_REPORT_CREATE):   put "Diagram    = Project 3" / ;
MPRINT(EM_REPORT_CREATE):   put "Start Node = Report";
MPRINT(EM_REPORT_CREATE):   put "Node label = Reporter" ;
MPRINT(EM_REPORT_CREATE):   put "Nodes      = PATH" ;
MPRINT(EM_REPORT_CREATE):   put "Showall    = N" /;
MPRINT(EM_REPORT_CREATE):   put "Format     = PDF" ;
MPRINT(EM_REPORT_CREATE):   put "Style      = LISTING" /;
MPRINT(EM_REPORT_CREATE):   run ;

NOTE: 10 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REGISTER):   data WORK.EM_USER_KEY;
MPRINT(EM_REGISTER):   set WORK.EM_USER_KEY end=eof;
MPRINT(EM_REGISTER):   output;
MPRINT(EM_REGISTER):   if eof then do;
MPRINT(EM_REGISTER):   key = upcase("PFD");
MPRINT(EM_REGISTER):   type = upcase("FILE");
MPRINT(EM_REGISTER):   file = "PFD";
MPRINT(EM_REGISTER):   folder = "";
MPRINT(EM_REGISTER):   extension = "xml";
MPRINT(EM_REGISTER):   AUTODELETE = "Y";
MPRINT(EM_REGISTER):   property = "N";
MPRINT(EM_REGISTER):   action = "";
MPRINT(EM_REGISTER):   output;
MPRINT(EM_REGISTER):   end;
MPRINT(EM_REGISTER):   run;

NOTE: There were 1 observations read from the data set WORK.EM_USER_KEY.
NOTE: The data set WORK.EM_USER_KEY has 2 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_WORKSPACE_XML):  ;
MPRINT(EM_REPORT_WORKSPACE_XML):  ;
MPRINT(EM_REPORT_WORKSPACE_XML):   filename x "J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Report\PFD.xml" encoding="utf-8" NOBOM;
MPRINT(EM_REPORT_WORKSPACE_XML):   data _null_;
MPRINT(EM_REPORT_WORKSPACE_XML):   file x;
MPRINT(EM_REPORT_WORKSPACE_XML):   set EMWS1.EM_NODEID;
MPRINT(EM_REPORT_WORKSPACE_XML):   length string $400;
MPRINT(EM_REPORT_WORKSPACE_XML):   label = tranwrd(label, "&", "&amp;");
MPRINT(EM_REPORT_WORKSPACE_XML):   label = tranwrd(label, "<", "&lt;");
MPRINT(EM_REPORT_WORKSPACE_XML):   label = tranwrd(label, ">", "&gt;");
MPRINT(EM_REPORT_WORKSPACE_XML):   label = tranwrd(label, "'", "&#39;");
MPRINT(EM_REPORT_WORKSPACE_XML):   label = tranwrd(label, '"', '&quot;');
MPRINT(EM_REPORT_WORKSPACE_XML):   string = cats('<PFDNode x="',X,'" y="',Y,'" id="',NODEID,'" 
title="',LABEL,'"></PFDNode>');
MPRINT(EM_REPORT_WORKSPACE_XML):   put string;
MPRINT(EM_REPORT_WORKSPACE_XML):   run;

NOTE: The file X is:
      Filename=J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\PFD.xml,
      RECFM=V,LRECL=131068,File Size (bytes)=0,
      Last Modified=07Nov2018:21:48:22,
      Create Time=07Nov2018:21:48:22

NOTE: 18 records were written to the file X.
      The minimum record length was 56.
      The maximum record length was 75.
NOTE: There were 18 observations read from the data set EMWS1.EM_NODEID.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_WORKSPACE_XML):   data _null_;
MPRINT(EM_REPORT_WORKSPACE_XML):   file x mod;
MPRINT(EM_REPORT_WORKSPACE_XML):   set EMWS1.EM_DGRAPH(where=(TO ne ""));
MPRINT(EM_REPORT_WORKSPACE_XML):   length string $400;
MPRINT(EM_REPORT_WORKSPACE_XML):   string = cats("<PFDLink id='",_N_,"' fromId='",FROM,"' 
toId='",TO,"'></PFDLink>");
MPRINT(EM_REPORT_WORKSPACE_XML):   put string;
MPRINT(EM_REPORT_WORKSPACE_XML):   run;

NOTE: The file X is:
      Filename=J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\PFD.xml,
      RECFM=V,LRECL=131068,File Size (bytes)=1285,
      Last Modified=07Nov2018:21:48:22,
      Create Time=07Nov2018:21:48:22

NOTE: 22 records were written to the file X.
      The minimum record length was 51.
      The maximum record length was 58.
NOTE: There were 22 observations read from the data set EMWS1.EM_DGRAPH.
      WHERE TO not = ' ';
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_WORKSPACE_XML):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_MAKEDS):   data xmldata(keep=PFDItemList);
MPRINT(EM_REPORT_MAKEDS):   infile xmlref recfm=v lrecl=75 length=len;
MPRINT(EM_REPORT_MAKEDS):   length PFDItemList $256;
MPRINT(EM_REPORT_MAKEDS):   input record $varying5000. len;
MPRINT(EM_REPORT_MAKEDS):   recordNum+1;
MPRINT(EM_REPORT_MAKEDS):   do start=1 to len by 256 ;
MPRINT(EM_REPORT_MAKEDS):   end=start+256;
MPRINT(EM_REPORT_MAKEDS):   *put recordNum= start= end=;
MPRINT(EM_REPORT_MAKEDS):   PFDItemList=substr(record,start,end);
MPRINT(EM_REPORT_MAKEDS):   output;
MPRINT(EM_REPORT_MAKEDS):   end;
MPRINT(EM_REPORT_MAKEDS):   run;

NOTE: The infile XMLREF is:
      Filename=J:\JMMORR01\CIS 445\CIS 445 Project 3\Workspaces\EMWS1\Report\PFD.xml,
      RECFM=V,LRECL=300,File Size (bytes)=2567,
      Last Modified=07Nov2018:21:48:22,
      Create Time=07Nov2018:21:48:22

NOTE: 40 records were read from the infile XMLREF.
      The minimum record length was 51.
      The maximum record length was 75.
NOTE: The data set WORK.XMLDATA has 40 observations and 1 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   data temp;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   set EMWS1.EM_NODEID;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   if X = -1 AND Y= - 1 then delete;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   run;

NOTE: There were 18 observations read from the data set EMWS1.EM_NODEID.
NOTE: The data set WORK.TEMP has 18 observations and 8 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_WORKSPACE_RENDER):   title1;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   title2;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   title3;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods PDF exclude SGRENDER;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods tagsets.gtl file="J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Report\view.xml" data="J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Report\data.xml" encoding="utf-8" style=styles.em_style;
NOTE: Writing TAGSETS.GTL Data file: J:\JMMORR01\CIS 445\CIS 445 Project 
      3\Workspaces\EMWS1\Report\data.xml
NOTE: Writing TAGSETS.GTL Body file: J:\JMMORR01\CIS 445\CIS 445 Project 
      3\Workspaces\EMWS1\Report\view.xml
MPRINT(EM_REPORT_WORKSPACE_RENDER):   proc sgrender data=work.xmldata template=dataonly;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   dynamic var1="PFDItemList";
MPRINT(EM_REPORT_WORKSPACE_RENDER):   run;

WARNING: TAGSETS.GTL destination does not support images. Using the default format.
NOTE: There were 40 observations read from the data set WORK.XMLDATA.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods tagsets.gtl event=LayoutRegion(start) options(title 
="SAS Enterprise Miner Report" title2="Process Flow Diagram");
BeginGraph
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods tagsets.gtl event=PFD options(pfditems="PFDItemList" 
id="pfdView1");
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods tagsets.gtl event=LayoutRegion(finish);
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods tagsets.gtl close;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods PDF select ALL ;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   ods proclabel = "Process Flow Diagram";
MPRINT(EM_REPORT_WORKSPACE_RENDER):   proc sgsilk viewxml="J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Report\view.xml" dataxml="J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Report\data.xml";
MPRINT(EM_REPORT_WORKSPACE_RENDER):   run;

NOTE: PROCEDURE SGSILK used (Total process time):
      real time           4.01 seconds
      cpu time            0.21 seconds
      

MPRINT(EM_REPORT_WORKSPACE_RENDER):   title1;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   title2;
MPRINT(EM_REPORT_WORKSPACE_RENDER):   title3;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):   proc sql noprint;
MPRINT(EM_REPORT_CREATE):   select count(*) into :EM_REPORT_NODENUM from emreportpath where 
nodeID ne " ";
MPRINT(EM_REPORT_CREATE):   select strip(nodeID) into :EM_REPORT_NODELIST separated by ' ' from 
emreportpath where nodeID ne " " order by nodeIndex;
NOTE: The query as specified involves ordering by an item that doesn't appear in its SELECT 
      clause.
MPRINT(EM_REPORT_CREATE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Ids")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='IDS';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

28988      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
28989      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
28989    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
28989    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
28990      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
28991      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
28992      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
28993      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
28994      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
28995      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
28996      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
28997      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
28998      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
28999      output;
MPRINT(EM_GETTRAINPATH):   output;
29000      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 1 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 1 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Ids"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=HMEQ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Ids";
MPRINT(EM_REPORT_NODE):   put "Node label = HMEQ";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x "J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Ids\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

29001      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29002      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29003      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29003    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
29003    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
29004      Name = 'DataSource';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DataSource';
29005      Value = "%nrbquote(hmeq)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "hmeq";
29006      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29007      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29008      Name = 'Scope';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Scope';
29009      Value = "%nrbquote(LOCAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOCAL";
29010      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29011      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29012      Name = 'Role';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Role';
29013      Value = "%nrbquote(TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "TRAIN";
29014      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29015      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29016      Name = 'Library';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Library';
29017      Value = "%nrbquote(SAMPSIO)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "SAMPSIO";
29018      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29019      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29020      Name = 'Table';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Table';
29021      Value = "%nrbquote(HMEQ)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "HMEQ";
29022      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29023      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29024      Name = 'NCols';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NCols';
29025      Value = "%nrbquote(13)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "13";
29026      Default = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Default = ".";
29027      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29028      Name = 'NObs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NObs';
29029      Value = "%nrbquote(5960)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5960";
29030      Default = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Default = ".";
29031      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29032      Name = 'NBytes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NBytes';
29033      Value = "%nrbquote(656384)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "656384";
29034      Default = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Default = ".";
29035      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29036      Name = 'Segment';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Segment';
29037      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
29038      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29039      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29040      Name = 'DataSourceRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DataSourceRole';
29041      Value = "%nrbquote(TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "TRAIN";
29042      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29043      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29044      Name = 'OutputType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OutputType';
29045      Value = "%nrbquote(VIEW)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "VIEW";
29046      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29047      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29048      Name = 'ComputeStatistics';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ComputeStatistics';
29049      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29050      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29051      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29052      Name = 'DataSelection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DataSelection';
29053      Value = "%nrbquote(DATASOURCE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DATASOURCE";
29054      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29055      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29056      Name = 'NewTable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NewTable';
29057      Value = "%nrbquote( )";
MPRINT(EM_REPORT_PROPERTIES):   Value = " ";
29058      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29059      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29060      Name = 'MetaAdvisor';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MetaAdvisor';
29061      Value = "%nrbquote(BASIC)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "BASIC";
29062      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29063      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29064      Name = 'ApplyIntervalLevelLowerLimit';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ApplyIntervalLevelLowerLimit';
29065      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29066      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29067      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29068      Name = 'IntervalLowerLimit';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntervalLowerLimit';
29069      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
29070      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29071      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29072      Name = 'ApplyMaxPercentMissing';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ApplyMaxPercentMissing';
29073      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29074      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29075      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29076      Name = 'MaxPercentMissing';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxPercentMissing';
29077      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
29078      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29079      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29080      Name = 'ApplyMaxClassLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ApplyMaxClassLevels';
29081      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29082      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29083      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
3 The SAS System

29084      Name = 'MaxClassLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxClassLevels';
29085      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
29086      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29087      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29088      Name = 'IdentifyEmptyColumns';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IdentifyEmptyColumns';
29089      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29090      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29091      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29092      Name = 'VariableValidation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'VariableValidation';
29093      Value = "%nrbquote(STRICT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STRICT";
29094      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29095      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29096      Name = 'NewVariableRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NewVariableRole';
29097      Value = "%nrbquote(REJECT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "REJECT";
29098      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29099      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29100      Name = 'DropMapVariables';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DropMapVariables';
29101      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29102      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29103      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29104      Name = 'DsId';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsId';
29105      Value = "%nrbquote(hmeq)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "hmeq";
29106      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29107      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29108      Name = 'DsSampleName';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsSampleName';
29109      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
29110      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29111      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29112      Name = 'DsSampleSizeType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsSampleSizeType';
29113      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
29114      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29115      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29116      Name = 'DsSampleSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsSampleSize';
29117      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
29118      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29119      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29120      Name = 'DsCreatedBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsCreatedBy';
29121      Value = "%nrbquote(jmmorr01)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "jmmorr01";
29122      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29123      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29124      Name = 'DsCreateDate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsCreateDate';
29125      Value = "%nrbquote(1857243985)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1857243985";
29126      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29127      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29128      Name = 'DsModifiedBy';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsModifiedBy';
29129      Value = "%nrbquote(jmmorr01)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "jmmorr01";
29130      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29131      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29132      Name = 'DsModifyDate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsModifyDate';
29133      Value = "%nrbquote(1857243985.2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1857243985.2";
29134      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29135      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29136      Name = 'DsScope';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DsScope';
29137      Value = "%nrbquote(LOCAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "LOCAL";
29138      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29139      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29140      Name = 'Sample';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Sample';
29141      Value = "%nrbquote(D)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "D";
29142      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29143      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29144      Name = 'SampleSizeType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSizeType';
29145      Value = "%nrbquote(PERCENT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PERCENT";
29146      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29147      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29148      Name = 'SampleSizePercent';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSizePercent';
29149      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
29150      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29151      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29152      Name = 'SampleSizeObs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SampleSizeObs';
29153      Value = "%nrbquote(10000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10000";
29154      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29155      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29156      Name = 'DBPassThrough';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DBPassThrough';
29157      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29158      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29159      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29160      Name = 'Description';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Description';
29161      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
29162      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29163      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29164      Name = 'Data';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Data';
29165      Value = "%nrbquote(SAMPSIO.HMEQ)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "SAMPSIO.HMEQ";
29166      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29167      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29168      Name = 'CMeta';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CMeta';
29169      Value = "%nrbquote(WORK.M3RJ2XW_)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "WORK.M3RJ2XW_";
29170      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29171      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29172      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 42 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

29173      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
29174      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
29175      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 42 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 42 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29176      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
29177      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29178      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29178    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
29179      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
29180      Value = "DataSource";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DataSource";
29181      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
29182      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

29183      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29184      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
29185      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 42 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 43 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=HMEQ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=HMEQ Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 14 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-14*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 14 and _n_ le 28 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-14*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 28 and _n_ le 42 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-14*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 43 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 14 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 14 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 14 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 14 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 14 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 14 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 14 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 14 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 14 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_DATASOURCE):   proc transpose data=EMWS1.Ids_EMTMETADEFAULT out=temp_source;
MPRINT(EM_REPORT_DATASOURCE):   var _all_;
MPRINT(EM_REPORT_DATASOURCE):   format crdate NLDATM24.0 modate NLDATM24.0;
MPRINT(EM_REPORT_DATASOURCE):   run;

NOTE: Numeric variables in the input data set will be converted to character in the output data 
      set.
NOTE: There were 1 observations read from the data set EMWS1.IDS_EMTMETADEFAULT.
NOTE: The data set WORK.TEMP_SOURCE has 15 observations and 2 variables.
NOTE: PROCEDURE TRANSPOSE used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_DATASOURCE):   data temp_source;
MPRINT(EM_REPORT_DATASOURCE):   set temp_source;
MPRINT(EM_REPORT_DATASOURCE):   rename col1 = value;
MPRINT(EM_REPORT_DATASOURCE):   col1 = right(col1);
MPRINT(EM_REPORT_DATASOURCE):   format label $64.;
MPRINT(EM_REPORT_DATASOURCE):   label col1 = "Value" label = "Attribute" ;
MPRINT(EM_REPORT_DATASOURCE):   *** get the localized label column;
MPRINT(EM_REPORT_DATASOURCE):   _name_=upcase(_name_) ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MEMNAME" then label="Data Name" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MEMTYPE" then label="Data Type" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MEMLABEL" then label="Data Label" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "TYPEMEM" then delete ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "ENGINE" then label="Engine" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "CRDATE" then label="Date Created" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "MODATE" then label="Date Modified" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "NOBS" then label="Number Rows" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "NCOLS" then label="Number Columns" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "NBYTES" then label="Data Size" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "ROLE" then label="Role" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "USEEXTERNALDATA" then delete ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "SAMPLINGRATE" then delete ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "SEGMENT" then label="Segment" ;
MPRINT(EM_REPORT_DATASOURCE):   if _name_ eq "LIBNAME" then label="Data Library" ;
MPRINT(EM_REPORT_DATASOURCE):   run;

NOTE: There were 15 observations read from the data set WORK.TEMP_SOURCE.
NOTE: The data set WORK.TEMP_SOURCE has 12 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=HMEQ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Data Attributes";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=HMEQ Data Attributes";
MPRINT(EM_REPORT_DATASOURCE):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=temp_source 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "LABEL" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( LABEL=LABEL1 VALUE=VALUE1)) 
_tmpms_dat2(rename=( LABEL=LABEL2 VALUE=VALUE2)) _tmpms_dat3(rename=( LABEL=LABEL3 
VALUE=VALUE3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set temp_source;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep LABEL VALUE numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 4 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-4*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 4 and _n_ le 8 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-4*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 8 and _n_ le 12 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-4*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 12 observations read from the data set WORK.TEMP_SOURCE.
NOTE: The data set WORK._TMPMS_DAT1 has 4 observations and 3 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 4 observations and 3 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 4 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 4 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 4 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 4 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var LABEL1 VALUE1 LABEL2 VALUE2 LABEL3 VALUE3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 4 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_DATASOURCE):  ;
MPRINT(EM_REPORT_DATASOURCE):   proc delete data=temp_source;
MPRINT(EM_REPORT_DATASOURCE):   run;

NOTE: Deleting WORK.TEMP_SOURCE (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_DATASOURCE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Ids_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Ids_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 13 observations read from the data set EMWS1.IDS_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.11 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=EMWS1.Ids_variableset out=_tmpvl_vs;
MPRINT(EM_REPORT_VARS):   by name;

NOTE: There were 13 observations read from the data set EMWS1.IDS_VARIABLESET.
NOTE: The data set WORK._TMPVL_VS has 13 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   update _tmpvl_pdv _tmpvl_vs;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   label type = "Type" format = "Format" creator = "Creator" family = 
"Family" label = "Label" ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: There were 13 observations read from the data set WORK._TMPVL_VS.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=HMEQ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variables List";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=HMEQ Variables List";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pdv noobs label contents='';
MPRINT(EM_REPORT_VARS):   var name label role level type length format creator;
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Ids_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Ids_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey6
MPRINT(EM_REPORT_NODE):   from EMWS1.Ids_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.07 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Ids_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IDS_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

==10 : Viewtype = DATA EMSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Stat")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='STAT';
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

29186      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
29187      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
29187    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
29187    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
29188      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
29189      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
29190      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
29191      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
29192      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29193      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29194      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29195      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29196      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29197      output;
MPRINT(EM_GETTRAINPATH):   output;
29198      nodelabel="Stat";
MPRINT(EM_GETTRAINPATH):   nodelabel="Stat";
29199      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
29200      description="Statistics Exploration";
MPRINT(EM_GETTRAINPATH):   description="Statistics Exploration";
29201      component="StatExplore";
MPRINT(EM_GETTRAINPATH):   component="StatExplore";
29202      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
29203      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29204      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
29205      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29206      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29207      output;
MPRINT(EM_GETTRAINPATH):   output;
29208      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 2 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 2 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Stat"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=StatExplore";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Stat";
MPRINT(EM_REPORT_NODE):   put "Node label = StatExplore";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Stat";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   filename x "J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Stat\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

29209      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29210      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29211      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29211    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
29211    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
29212      Name = 'BySegment';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'BySegment';
29213      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29214      Default = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "Y";
29215      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29216      Name = 'Correlation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Correlation';
29217      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29218      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29219      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29220      Name = 'Spearman';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Spearman';
29221      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29222      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29223      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29224      Name = 'Pearson';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Pearson';
29225      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29226      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29227      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29228      Name = 'ChiSquare';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ChiSquare';
29229      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29230      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29231      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29232      Name = 'ChiSquareInterval';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ChiSquareInterval';
29233      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29234      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29235      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29236      Name = 'ChiSquareIntervalNBins';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ChiSquareIntervalNBins';
29237      Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
29238      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29239      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29240      Name = 'MaximumVars';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaximumVars';
29241      Value = "%nrbquote(1000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1000";
29242      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29243      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29244      Name = 'HideVariable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideVariable';
29245      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29246      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29247      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29248      Name = 'DropRejected';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DropRejected';
29249      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29250      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29251      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29252      Name = 'UseValidate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseValidate';
29253      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29254      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29255      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29256      Name = 'UseTest';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseTest';
29257      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29258      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29259      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29260      Name = 'UseScore';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseScore';
29261      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29262      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29263      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29264      Name = 'NObs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NObs';
29265      Value = "%nrbquote(100000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "100000";
29266      Default = "%nrbquote(1000000)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "1000000";
29267      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29268      Name = 'IntervalDistribution';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntervalDistribution';
29269      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29270      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29271      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29272      Name = 'ClassDistribution';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClassDistribution';
29273      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29274      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29275      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29276      Name = 'LevelSummary';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LevelSummary';
29277      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29278      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29279      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29280      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 17 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29281      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
29282      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
29283      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 17 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 17 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29284      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
29285      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29286      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29286    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
29287      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
29288      Value = "StatExplore";
MPRINT(EM_REPORT_PROPERTIES):   Value = "StatExplore";
29289      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
29290      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29291      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29292      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
29293      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 17 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 18 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=StatExplore";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=StatExplore Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 6 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-6*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 6 and _n_ le 12 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-6*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 12 and _n_ le 18 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-6*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 18 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 6 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 6 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 6 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 6 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 6 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 6 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 6 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 6 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 6 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 6 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 6 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 6 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 6 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 6 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Stat_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Stat_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 13 observations read from the data set EMWS1.STAT_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 12 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 12 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 12 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 12 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 12 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

11 OUTPUT;
NOTE: There were 12 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=StatExplore";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=StatExplore Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 2 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Stat_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Stat" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.STAT_CMETA_TRAIN.
      WHERE UPCASE(creator)='Stat';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
NOTE: Deleting WORK._TMPVL_VS (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Stat_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Stat_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey22
MPRINT(EM_REPORT_NODE):   from EMWS1.Stat_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==6 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==7 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==8 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==9 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==10 : Viewtype = DATA INTRVLSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==11 : Viewtype = DATA CLASSSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA CHI2
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 10 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==13 : Viewtype = LATTICE WORTH
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   title2 "Node=StatExplore";
MPRINT(EM_REPORT_NODE):   title3 "Variable Worth";
MPRINT(EM_REPORT_NODE):   ods proclabel = "Node=StatExplore Variable Worth";
MPRINT(EM_REPORT_NODE):   proc print data=EMWS1.Stat_WORTH noobs label contents='';
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 12 observations read from the data set EMWS1.STAT_WORTH.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 16 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

==14 : Viewtype = LATTICE CHIPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   title2 "Node=StatExplore";
MPRINT(EM_REPORT_NODE):   title3 "Chi-Square Plot";
MPRINT(EM_REPORT_NODE):   ods proclabel = "Node=StatExplore Chi-Square Plot";
MPRINT(EM_REPORT_NODE):   proc print data=EMWS1.Stat_CHIMEASURE noobs label contents='';
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 2 observations read from the data set EMWS1.STAT_CHIMEASURE.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 15 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

==15 : Viewtype = LATTICE CLASSDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct DATAROLE) into :numx from 
EMWS1.Stat_CLASS(where=(TARGET='BAD' and PLOT=1));
MPRINT(EM_REPORT_LATTICE):   select count(distinct VARIABLE) into :numy from 
EMWS1.Stat_CLASS(where=(TARGET='BAD' and PLOT=1));
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.07 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=StatExplore";
MPRINT(EM_REPORT_LATTICE):   title3 "Class Variables";
MPRINT(EM_REPORT_LATTICE):   title4 "TARGET='BAD' and PLOT=1";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel data=EMWS1.Stat_CLASS(where=(TARGET='BAD' and PLOT=1));
MPRINT(EM_REPORT_LATTICE):   panelby VARIABLE DATAROLE / uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar TARGETVALUE / response=WITHINPCT group=LEVEL ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           1.70 seconds
      cpu time            0.20 seconds
      
NOTE: There were 20 observations read from the data set EMWS1.STAT_CLASS.
      WHERE (TARGET='BAD') and (PLOT=1);

MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Stat_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.STAT_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==16 : Viewtype = LATTICE INTDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct DATAROLE) into :numx from 
EMWS1.Stat_INTERVAL(where=(TARGET='BAD'));
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Part")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='PART';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

29294      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
29295      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
29295    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
29295    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
29296      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
29297      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
29298      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
29299      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
29300      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29301      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29302      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29303      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29304      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29305      output;
MPRINT(EM_GETTRAINPATH):   output;
29306      nodelabel="Stat";
MPRINT(EM_GETTRAINPATH):   nodelabel="Stat";
29307      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
29308      description="Statistics Exploration";
MPRINT(EM_GETTRAINPATH):   description="Statistics Exploration";
29309      component="StatExplore";
MPRINT(EM_GETTRAINPATH):   component="StatExplore";
29310      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
29311      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29312      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
29313      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29314      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29315      output;
MPRINT(EM_GETTRAINPATH):   output;
29316      nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
29317      parent="Stat";
MPRINT(EM_GETTRAINPATH):   parent="Stat";
29318      description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
29319      component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
29320      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29321      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29322      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
29323      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29324      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29325      output;
MPRINT(EM_GETTRAINPATH):   output;
29326      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 3 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 3 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Part"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Data Partition";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Part";
MPRINT(EM_REPORT_NODE):   put "Node label = Data Partition";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Stat => Part";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x "J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Part\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

29327      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29328      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29329      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29329    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
29329    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
29330      Name = 'Method';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Method';
29331      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29332      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29333      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29334      Name = 'TrainPct';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainPct';
29335      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
29336      Default = "%nrbquote(40)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "40";
29337      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29338      Name = 'ValidatePct';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ValidatePct';
29339      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
29340      Default = "%nrbquote(30)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "30";
29341      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29342      Name = 'TestPct';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TestPct';
29343      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
29344      Default = "%nrbquote(30)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "30";
29345      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29346      Name = 'RandomSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandomSeed';
29347      Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
29348      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29349      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29350      Name = 'OutputType';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'OutputType';
29351      Value = "%nrbquote(DATA)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DATA";
29352      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29353      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29354      Name = 'IntervalDistribution';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IntervalDistribution';
29355      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29356      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29357      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29358      Name = 'ClassDistribution';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClassDistribution';
29359      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29360      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29361      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29362      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 8 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

29363      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
29364      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
29365      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 8 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 8 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29366      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
29367      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29368      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29368    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
29369      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
29370      Value = "Partition";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Partition";
29371      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
29372      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29373      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29374      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
29375      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 8 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 9 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.09 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Data Partition";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Data Partition Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 3 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-3*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 3 and _n_ le 6 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-3*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 6 and _n_ le 9 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-3*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 9 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 3 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 3 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 3 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 3 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 3 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 3 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 3 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 3 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Part_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Part_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 13 observations read from the data set EMWS1.PART_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

2 OUTPUT;
12 OUTPUT;
NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Data Partition";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Data Partition Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 3 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Part_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Part" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.PART_CMETA_TRAIN.
      WHERE UPCASE(creator)='Part';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Part_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Part_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey11
MPRINT(EM_REPORT_NODE):   from EMWS1.Part_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Part_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.PART_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Part_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.PART_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Part_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.PART_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Part_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.PART_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Part_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.PART_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Part_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.PART_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Part_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.PART_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Part_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.PART_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Part_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.PART_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Part_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.PART_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Part_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.PART_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Part_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.PART_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA INTRVLSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Part_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 11 observations read from the data set EMWS1.PART_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==13 : Viewtype = LATTICE CLASSSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Impt")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='IMPT';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

29376      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
29377      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
29377    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
29377    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
29378      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
29379      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
29380      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
29381      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
29382      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29383      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29384      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29385      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29386      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29387      output;
MPRINT(EM_GETTRAINPATH):   output;
29388      nodelabel="Stat";
MPRINT(EM_GETTRAINPATH):   nodelabel="Stat";
29389      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
29390      description="Statistics Exploration";
MPRINT(EM_GETTRAINPATH):   description="Statistics Exploration";
29391      component="StatExplore";
MPRINT(EM_GETTRAINPATH):   component="StatExplore";
29392      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
29393      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29394      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
29395      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29396      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29397      output;
MPRINT(EM_GETTRAINPATH):   output;
29398      nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
29399      parent="Stat";
MPRINT(EM_GETTRAINPATH):   parent="Stat";
29400      description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
29401      component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
29402      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29403      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29404      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
29405      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29406      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29407      output;
MPRINT(EM_GETTRAINPATH):   output;
29408      nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
29409      parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
29410      description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
29411      component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
29412      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
29413      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29414      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29415      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29416      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29417      output;
MPRINT(EM_GETTRAINPATH):   output;
29418      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 4 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 4 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Impt"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Impute";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Impt";
MPRINT(EM_REPORT_NODE):   put "Node label = Impute";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Stat => Part => Impt";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x "J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Impt\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

29419      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29420      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29421      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29421    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
29421    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
29422      Name = 'MethodInterval';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MethodInterval';
29423      Value = "%nrbquote(MEAN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "MEAN";
29424      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29425      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29426      Name = 'MethodClass';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MethodClass';
29427      Value = "%nrbquote(COUNT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "COUNT";
29428      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29429      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29430      Name = 'MethodTargetInterval';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MethodTargetInterval';
29431      Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
29432      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29433      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29434      Name = 'MethodTargetClass';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MethodTargetClass';
29435      Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
29436      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29437      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29438      Name = 'ABWTuning';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ABWTuning';
29439      Value = "%nrbquote(9)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "9";
29440      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29441      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29442      Name = 'AHUBERTuning';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AHUBERTuning';
29443      Value = "%nrbquote(1.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1.5";
29444      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29445      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29446      Name = 'AWAVETuning';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AWAVETuning';
29447      Value = "%nrbquote(6.2831853072)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "6.2831853072";
29448      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29449      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29450      Name = 'SpacingProportion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SpacingProportion';
29451      Value = "%nrbquote(90)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "90";
29452      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29453      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29454      Name = 'DefaultChar';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DefaultChar';
29455      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
29456      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29457      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29458      Name = 'DefaultNum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DefaultNum';
29459      Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
29460      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29461      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29462      Name = 'RandomSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandomSeed';
29463      Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
29464      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29465      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29466      Name = 'Normalize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Normalize';
29467      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29468      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29469      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29470      Name = 'ImputeNoMissing';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImputeNoMissing';
29471      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29472      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29473      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29474      Name = 'MaxPctMissing';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxPctMissing';
29475      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
29476      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29477      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29478      Name = 'ValidateTestMissing';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ValidateTestMissing';
29479      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29480      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29481      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29482      Name = 'DistributionMissing';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DistributionMissing';
29483      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29484      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29485      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29486      Name = 'LeafSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LeafSize';
29487      Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
29488      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29489      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29490      Name = 'Maxbranch';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxbranch';
29491      Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
29492      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29493      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29494      Name = 'Maxdepth';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxdepth';
29495      Value = "%nrbquote(6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "6";
29496      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29497      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29498      Name = 'MinCatSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinCatSize';
29499      Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
29500      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29501      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29502      Name = 'Nrules';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Nrules';
29503      Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
29504      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29505      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29506      Name = 'Nsurrs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Nsurrs';
29507      Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
29508      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29509      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29510      Name = 'Splitsize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Splitsize';
29511      Value = "%nrbquote(.)";
MPRINT(EM_REPORT_PROPERTIES):   Value = ".";
29512      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29513      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29514      Name = 'Indicator';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Indicator';
29515      Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
29516      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29517      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29518      Name = 'IndicatorRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IndicatorRole';
29519      Value = "%nrbquote(REJECTED)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "REJECTED";
29520      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29521      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29522      Name = 'ReplaceVariable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ReplaceVariable';
29523      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29524      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29525      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29526      Name = 'HideVariable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideVariable';
29527      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29528      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29529      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29530      Name = 'IndicatorSource';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'IndicatorSource';
29531      Value = "%nrbquote(IMPUTED)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "IMPUTED";
29532      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29533      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29534      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 28 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

29535      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
29536      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
29537      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 28 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 28 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

29538      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
29539      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29540      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29540    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
29541      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
29542      Value = "Impute";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Impute";
29543      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
29544      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

29545      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29546      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
29547      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 28 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 29 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.11 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Impute";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Impute Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 10 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-10*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 10 and _n_ le 20 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-10*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 20 and _n_ le 30 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-10*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 29 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 10 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 10 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 9 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 10 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 10 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 10 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 10 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 9 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 9 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 10 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 10 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 9 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 10 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 10 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Impt_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Impt_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 13 observations read from the data set EMWS1.IMPT_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 12 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 12 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 12 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 12 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 12 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

11 OUTPUT;
NOTE: There were 12 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Impute";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Impute Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 2 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Impt_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Impt" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.IMPT_CMETA_TRAIN.
      WHERE UPCASE(creator)='Impt';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Impt_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Impt_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey8
MPRINT(EM_REPORT_NODE):   from EMWS1.Impt_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Impt_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IMPT_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Impt_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.IMPT_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Impt_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IMPT_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Impt_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IMPT_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Impt_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IMPT_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Impt_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IMPT_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Impt_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IMPT_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Impt_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IMPT_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Impt_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IMPT_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Impt_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.IMPT_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Impt_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.IMPT_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Impt_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.IMPT_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA IMPUTATION
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Impute";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Imputation Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Impute Imputation Summary";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=EMWS1.Impt_RESULT(obs=100) noobs label contents='';
MPRINT(EM_REPORT_DATA):   run ;

NOTE: There were 11 observations read from the data set EMWS1.IMPT_RESULT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Impt_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 8 observations read from the data set EMWS1.IMPT_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==13 : Viewtype = BAR MISSINGDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
NOTE: Node report data set (EMWS1.CNTRL_emreport) is not defined.
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Neural2")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='NEURAL2';
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

29548      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
29549      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
29549    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
29549    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
29550      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
29551      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
29552      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
29553      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
29554      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29555      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29556      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29557      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29558      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29559      output;
MPRINT(EM_GETTRAINPATH):   output;
29560      nodelabel="Stat";
MPRINT(EM_GETTRAINPATH):   nodelabel="Stat";
29561      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
29562      description="Statistics Exploration";
MPRINT(EM_GETTRAINPATH):   description="Statistics Exploration";
29563      component="StatExplore";
MPRINT(EM_GETTRAINPATH):   component="StatExplore";
29564      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
29565      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29566      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
29567      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29568      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29569      output;
MPRINT(EM_GETTRAINPATH):   output;
29570      nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
29571      parent="Stat";
MPRINT(EM_GETTRAINPATH):   parent="Stat";
29572      description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
29573      component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
29574      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29575      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29576      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
29577      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29578      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29579      output;
MPRINT(EM_GETTRAINPATH):   output;
29580      nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
29581      parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
29582      description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
29583      component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
29584      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
29585      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29586      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29587      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29588      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29589      output;
MPRINT(EM_GETTRAINPATH):   output;
29590      nodelabel="Neural2";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural2";
29591      parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
29592      description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
29593      component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
29594      tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
29595      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29596      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29597      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29598      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29599      output;
MPRINT(EM_GETTRAINPATH):   output;
29600      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 5 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Neural2"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=No Transform, 3";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Neural2";
MPRINT(EM_REPORT_NODE):   put "Node label = No Transform, 3";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Stat => Part => Impt => Neural2";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x "J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Neural2\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

29601      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29602      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29603      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29603    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
29603    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
29604      Name = 'UseEstimates';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseEstimates';
29605      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29606      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29607      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29608      Name = 'NetworkArchitecture';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NetworkArchitecture';
29609      Value = "%nrbquote(MLP)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "MLP";
29610      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29611      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29612      Name = 'DirectConnection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DirectConnection';
29613      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29614      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29615      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29616      Name = 'Hidden';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Hidden';
29617      Value = "%nrbquote(3)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "3";
29618      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29619      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29620      Name = 'Prelim';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Prelim';
29621      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29622      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29623      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29624      Name = 'PreliminaryRuns';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PreliminaryRuns';
29625      Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
29626      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29627      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29628      Name = 'PrelimMaxiter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimMaxiter';
29629      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
29630      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29631      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29632      Name = 'PrelimMaxTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimMaxTime';
29633      Value = "%nrbquote(1 HOUR)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1 HOUR";
29634      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29635      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29636      Name = 'Maxiter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxiter';
29637      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
29638      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29639      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29640      Name = 'Maxtime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxtime';
29641      Value = "%nrbquote(4 HOURS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4 HOURS";
29642      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29643      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29644      Name = 'TrainingTechnique';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainingTechnique';
29645      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29646      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29647      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29648      Name = 'ConvDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ConvDefaults';
29649      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29650      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29651      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29652      Name = 'AbsConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsConvValue';
29653      Value = "%nrbquote(-1.34078E154)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "-1.34078E154";
29654      Default = "%nrbquote(-7.237006E75)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "-7.237006E75";
29655      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29656      Name = 'AbsFValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFValue';
29657      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
29658      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29659      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29660      Name = 'AbsFTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFTime';
29661      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
29662      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29663      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29664      Name = 'AbsGValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGValue';
29665      Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
29666      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29667      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29668      Name = 'AbsGTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGTime';
29669      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
29670      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29671      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29672      Name = 'AbsXValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXValue';
29673      Value = "%nrbquote(1E-8)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-8";
29674      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29675      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29676      Name = 'AbsXTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXTime';
29677      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
29678      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29679      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29680      Name = 'FConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvValue';
29681      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
29682      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29683      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29684      Name = 'FConvTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvTime';
29685      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
29686      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29687      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29688      Name = 'GConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvValue';
29689      Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
29690      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29691      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29692      Name = 'GConvTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvTime';
29693      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
29694      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29695      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29696      Name = 'ModelSelectionCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelSelectionCriterion';
29697      Value = "%nrbquote(PROFIT/LOSS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROFIT/LOSS";
29698      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29699      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29700      Name = 'SuppressOutput';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SuppressOutput';
29701      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29702      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29703      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29704      Name = 'Residuals';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Residuals';
29705      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29706      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29707      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29708      Name = 'Standardizations';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Standardizations';
29709      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29710      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29711      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29712      Name = 'HiddenUnits';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenUnits';
29713      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29714      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29715      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29716      Name = 'TrainCode';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainCode';
29717      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
29718      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29719      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29720      Name = 'PrelimOutest';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimOutest';
29721      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
29722      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29723      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29724      Name = 'Outest';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Outest';
29725      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
29726      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29727      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29728      Name = 'Outfit';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Outfit';
29729      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
29730      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29731      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29732      Name = 'InitialDs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InitialDs';
29733      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
29734      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29735      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29736      Name = 'CodefileRes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CodefileRes';
29737      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
29738      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29739      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29740      Name = 'CodefileNoRes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CodefileNoRes';
29741      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
29742      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29743      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29744      Name = 'AddHidden';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AddHidden';
29745      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29746      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29747      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29748      Name = 'HiddenCombFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenCombFunction';
29749      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29750      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29751      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29752      Name = 'HiddenActivation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenActivation';
29753      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29754      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29755      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29756      Name = 'HiddenBias';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenBias';
29757      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29758      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29759      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29760      Name = 'TargetCombFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetCombFunction';
29761      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29762      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29763      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29764      Name = 'TargetActivation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetActivation';
29765      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29766      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29767      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29768      Name = 'TargetError';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetError';
29769      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29770      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29771      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29772      Name = 'TargetBias';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetBias';
29773      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29774      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29775      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29776      Name = 'InitialSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InitialSeed';
29777      Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
29778      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29779      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29780      Name = 'RandDist';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandDist';
29781      Value = "%nrbquote(NORMAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NORMAL";
29782      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29783      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29784      Name = 'RandScale';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandScale';
29785      Value = "%nrbquote(0.1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.1";
29786      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29787      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29788      Name = 'RandLoc';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandLoc';
29789      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
29790      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29791      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29792      Name = 'InputStandardization';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InputStandardization';
29793      Value = "%nrbquote(STD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STD";
29794      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29795      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29796      Name = 'WeightDecay';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'WeightDecay';
29797      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
29798      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29799      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29800      Name = 'Accelerate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Accelerate';
29801      Value = "%nrbquote(1.2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1.2";
29802      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29803      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29804      Name = 'Decelerate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Decelerate';
29805      Value = "%nrbquote(0.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.5";
29806      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29807      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29808      Name = 'Learn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Learn';
29809      Value = "%nrbquote(0.1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.1";
29810      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29811      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29812      Name = 'MaxLearn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxLearn';
29813      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
29814      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29815      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29816      Name = 'MinLearn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinLearn';
29817      Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
29818      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29819      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29820      Name = 'Momentum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Momentum';
29821      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
29822      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29823      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29824      Name = 'MaxMomentum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxMomentum';
29825      Value = "%nrbquote(1.75)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1.75";
29826      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29827      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29828      Name = 'Tilt';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Tilt';
29829      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
29830      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29831      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29832      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 57 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

29833      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
29834      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
29835      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 57 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 57 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

29836      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
29837      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29838      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29838    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
29839      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
29840      Value = "NeuralNetwork";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NeuralNetwork";
29841      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
29842      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

29843      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29844      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
29845      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 57 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 58 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.12 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=No Transform, 3";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=No Transform, 3 Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 19 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 19 and _n_ le 38 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 38 and _n_ le 57 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 58 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 19 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 19 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 19 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 19 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Neural2_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Neural2_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 13 observations read from the data set EMWS1.NEURAL2_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

2 OUTPUT;
12 OUTPUT;
NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=No Transform, 3";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=No Transform, 3 Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 3 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Neural2_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Neural2" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL2_CMETA_TRAIN.
      WHERE UPCASE(creator)='Neural2';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Neural2_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from 
EMWS1.Neural2_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey21
MPRINT(EM_REPORT_NODE):   from EMWS1.Neural2_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==12 : Viewtype = DATA REPORTFITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_DATA):   data pd;
MPRINT(EM_REPORT_DATA):   set EMWS1.Neural2_EMREPORTFIT ;
MPRINT(EM_REPORT_DATA):   where train ne . ;
MPRINT(EM_REPORT_DATA):   label _NOBS_ = "Sum of Frequencies" _MISC_ = "Misclassification Rate" 
_MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Squared Error" 
_RASE_ = "Root Average Square Error" _DIV_ = "Divisor for ASE" _DFT_ = "Total Degrees of 
Freedom" _AIC_ = "Akaike's Information Criterion" _MSE_ = "Mean Squared Error" _RMSE_ = "Root 
Mean Squared Error" _AVERR_ = "Average Error Function" _DFE_ = "Degrees of Freedom for Error" 
_DFM_ = "Model Degrees of Freedom" _ERR_ = "Error Function" _FPE_ = "Final Prediction Error" 
_NW_ = "Number of Weights" _RFPE_ = "Root Final Prediction Error" _SBC_ = "Schwarz's Bayesian 
Criterion" ;
MPRINT(EM_REPORT_DATA):   drop stat ;
MPRINT(EM_REPORT_DATA):   run;

NOTE: Variable _NOBS_ is uninitialized.
NOTE: Variable _MISC_ is uninitialized.
NOTE: Variable _MAX_ is uninitialized.
NOTE: Variable _SSE_ is uninitialized.
NOTE: Variable _ASE_ is uninitialized.
NOTE: Variable _RASE_ is uninitialized.
NOTE: Variable _DIV_ is uninitialized.
NOTE: Variable _DFT_ is uninitialized.
NOTE: Variable _AIC_ is uninitialized.
NOTE: Variable _MSE_ is uninitialized.
NOTE: Variable _RMSE_ is uninitialized.
NOTE: Variable _AVERR_ is uninitialized.
NOTE: Variable _DFE_ is uninitialized.
NOTE: Variable _DFM_ is uninitialized.
NOTE: Variable _ERR_ is uninitialized.
NOTE: Variable _FPE_ is uninitialized.
NOTE: Variable _NW_ is uninitialized.
NOTE: Variable _RFPE_ is uninitialized.
NOTE: Variable _SBC_ is uninitialized.
NOTE: There were 21 observations read from the data set EMWS1.NEURAL2_EMREPORTFIT.
      WHERE train not = .;
NOTE: The data set WORK.PD has 21 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=No Transform, 3";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Model Fit Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=No Transform, 3 Model Fit Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc sort data=pd;
MPRINT(EM_REPORT_DATA):   by target targetlabel;

NOTE: There were 21 observations read from the data set WORK.PD.
NOTE: The data set WORK.PD has 21 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_DATA):   proc print data=pd noobs label contents='';
MPRINT(EM_REPORT_DATA):   label label= "Label of Statistic" ;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 21 observations read from the data set WORK.PD.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==13 : Viewtype = ITERATIONPLOT ITERATIONPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_ITERATIONPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   title2 "Node=No Transform, 3";
MPRINT(EM_REPORT_ITERATIONPLOT):   title3 "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   data _null_ ;
MPRINT(EM_REPORT_ITERATIONPLOT):   set EMWS1.Neural2_PLOTDS(obs=2) end=eof;
MPRINT(EM_REPORT_ITERATIONPLOT):   if eof then do ;
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_ase_',_ase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vase_',_vase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_misc_',_misc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vmisc_',_vmisc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Numeric values have been converted to character values at the places given by: 
      (Line):(Column).
      18:139   21:125   23:123   26:124   
NOTE: There were 2 observations read from the data set EMWS1.NEURAL2_PLOTDS.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

9 24 22 35
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sql noprint;
MPRINT(EM_REPORT_ITERATIONPLOT):   select count(*) into :nonMiss_vmisc from EMWS1.Neural2_PLOTDS 
where _vmisc_ ne .;
MPRINT(EM_REPORT_ITERATIONPLOT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_ITERATIONPLOT):   proc template;
MPRINT(EM_REPORT_ITERATIONPLOT):   define statgraph em.IterationPlot / store=work.templat;
MPRINT(EM_REPORT_ITERATIONPLOT):   begingraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Node=No Transform, 3";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   layout lattice / order=columnmajor rows=1 rowdatarange=data 
columngutter=10;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on 
label="Iteration") yaxisopts=(griddisplay=on label="Average Square Error");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_ASE_ / markerattrs=(size=0) 
display=all name='train' legendlabel="Train";
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_VASE_ / markerattrs=(size=0) 
display=all name='validate' legendlabel="Validate";
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=0;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on 
label="Iteration") yaxisopts=(griddisplay=on label="Misclassification Rate");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_MISC_ / markerattrs=(size=0) 
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_VMISC_ / markerattrs=(size=0) 
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=0;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   sidebar / align=bottom;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay;
MPRINT(EM_REPORT_ITERATIONPLOT):   discretelegend 'train' 'validate' / down=1 order=columnmajor;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endsidebar;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endgraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
NOTE: STATGRAPH 'Em.IterationPlot' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   run;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sort data=EMWS1.Neural2_PLOTDS out=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   by _ITER_;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 44 observations read from the data set EMWS1.NEURAL2_PLOTDS.
NOTE: The data set WORK._TMPRPT_ITERDAT has 44 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   proc sgrender data=_tmprpt_iterdat 
template='em.IterationPlot';
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: There were 44 observations read from the data set WORK._TMPRPT_ITERDAT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.59 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   title1;
MPRINT(EM_REPORT_ITERATIONPLOT):   title2;
MPRINT(EM_REPORT_ITERATIONPLOT):   title3;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc delete data=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Deleting WORK._TMPRPT_ITERDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==14 : Viewtype = HISTOGRAM WEIGHT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==15 : Viewtype = DATA HISTWEIGHT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

==16 : Viewtype = LATTICE CLASSIFICATIONMANY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 11 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural2_emreport(where=(id eq 17)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==17 : Viewtype = PLOT ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS1.Neural2_EMRANK(where=(TARGET='BAD'));
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 40 observations read from the data set EMWS1.NEURAL2_EMRANK.
      WHERE TARGET='BAD';
NOTE: The data set WORK._TMP_DAT has 40 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: The data set WORK._TMP_CONTENT has 35 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call 
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 35 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by target datarole;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
NOTE: The data set WORK._TMP_EMRP has 40 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=No Transform, 3";
MPRINT(EM_REPORT_EMRANK):   title3 "Model Assessment Scores where TARGET='BAD'";
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=gain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basegain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestgain;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.65 seconds
      cpu time            0.15 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=liftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=baseliftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestliftc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.56 seconds
      cpu time            0.14 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=capc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basecapc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestcapc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.60 seconds
      cpu time            0.17 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 17 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural2_emreport(where=(id eq 18)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==18 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural2_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.NEURAL2_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural2_emreport(where=(id eq 19)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==19 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SCOREDIST):   data _tmp_scoredist;
MPRINT(EM_REPORT_SCOREDIST):   set EMWS1.Neural2_EMSCOREDIST(where=(TARGET='BAD'));
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 40 observations read from the data set EMWS1.NEURAL2_EMSCOREDIST.
      WHERE TARGET='BAD';
NOTE: The data set WORK._TMP_SCOREDIST has 40 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum 
name) noprint;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: The data set WORK._TMP_CONTENT has 21 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   data _null_;
MPRINT(EM_REPORT_SCOREDIST):   set _tmp_content;
MPRINT(EM_REPORT_SCOREDIST):   name=strip(upcase(name));
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'MODELDESCRIPTION' then call symput('modeldescnum', 
put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_LOOP_' then call symput('loopnum', put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_WHERE_' then call symput('has_where', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGET_' then call symput('has_target', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMEAN_' then call symput('var_targetMean',name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMAX_' then call symput('var_targetMax', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMIN_' then call symput('var_targetMin', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat', '1');
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 21 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 40 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 40 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SCOREDIST):   title2 "Node=No Transform, 3";
MPRINT(EM_REPORT_SCOREDIST):   title3 "Score Distributions where TARGET='BAD'";
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofevents / legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofnonevents / legendlabel="Non 
Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.44 seconds
      cpu time            0.14 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMPDAT.

MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofevents / 
legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofnonevents / 
legendlabel="Non Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Cumulative Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.48 seconds
      cpu time            0.20 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMPDAT.

MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc delete data=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: Deleting WORK._TMPDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_SCOREDIST):   title4;
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 40 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 40 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=No Transform, 3";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Score Distributions";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=No Transform, 3 Score Distributions";
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc print data=_tmpdat noobs label contents='';
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   var p_label numberofevents percentageofevents 
percentageofnonevents cumulativepercentageofevents cumulativepercentageofnonevents ;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 40 observations read from the data set WORK._TMPDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Neural")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='NEURAL';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

29846      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
29847      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
29847    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
29847    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
29848      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
29849      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
29850      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
29851      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
29852      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29853      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29854      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29855      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29856      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29857      output;
MPRINT(EM_GETTRAINPATH):   output;
29858      nodelabel="Stat";
MPRINT(EM_GETTRAINPATH):   nodelabel="Stat";
29859      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
29860      description="Statistics Exploration";
MPRINT(EM_GETTRAINPATH):   description="Statistics Exploration";
29861      component="StatExplore";
MPRINT(EM_GETTRAINPATH):   component="StatExplore";
29862      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
29863      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29864      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
29865      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29866      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29867      output;
MPRINT(EM_GETTRAINPATH):   output;
29868      nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
29869      parent="Stat";
MPRINT(EM_GETTRAINPATH):   parent="Stat";
29870      description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
29871      component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
29872      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
29873      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29874      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
29875      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29876      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29877      output;
MPRINT(EM_GETTRAINPATH):   output;
29878      nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
29879      parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
29880      description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
29881      component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
29882      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
29883      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29884      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29885      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29886      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29887      output;
MPRINT(EM_GETTRAINPATH):   output;
29888      nodelabel="Neural";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural";
29889      parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
29890      description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
29891      component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
29892      tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
29893      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
29894      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
29895      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
29896      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
29897      output;
MPRINT(EM_GETTRAINPATH):   output;
29898      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 5 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Neural"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=No Transform, 5";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Neural";
MPRINT(EM_REPORT_NODE):   put "Node label = No Transform, 5";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Stat => Part => Impt => Neural";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   filename x "J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Neural\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

29899      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
29900      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
29901      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
29901    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
29901    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
29902      Name = 'UseEstimates';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseEstimates';
29903      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29904      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29905      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29906      Name = 'NetworkArchitecture';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NetworkArchitecture';
29907      Value = "%nrbquote(MLP)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "MLP";
29908      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29909      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29910      Name = 'DirectConnection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DirectConnection';
29911      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
29912      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29913      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29914      Name = 'Hidden';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Hidden';
29915      Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
29916      Default = "%nrbquote(3)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "3";
29917      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29918      Name = 'Prelim';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Prelim';
29919      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29920      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29921      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29922      Name = 'PreliminaryRuns';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PreliminaryRuns';
29923      Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
29924      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29925      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29926      Name = 'PrelimMaxiter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimMaxiter';
29927      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
29928      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29929      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29930      Name = 'PrelimMaxTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimMaxTime';
29931      Value = "%nrbquote(1 HOUR)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1 HOUR";
29932      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29933      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29934      Name = 'Maxiter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxiter';
29935      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
29936      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29937      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29938      Name = 'Maxtime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxtime';
29939      Value = "%nrbquote(4 HOURS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4 HOURS";
29940      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29941      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29942      Name = 'TrainingTechnique';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainingTechnique';
29943      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
29944      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29945      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29946      Name = 'ConvDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ConvDefaults';
29947      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
29948      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29949      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29950      Name = 'AbsConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsConvValue';
29951      Value = "%nrbquote(-1.34078E154)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "-1.34078E154";
29952      Default = "%nrbquote(-7.237006E75)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "-7.237006E75";
29953      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29954      Name = 'AbsFValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFValue';
29955      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
29956      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29957      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29958      Name = 'AbsFTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFTime';
29959      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
29960      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29961      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29962      Name = 'AbsGValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGValue';
29963      Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
29964      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29965      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29966      Name = 'AbsGTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGTime';
29967      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
29968      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29969      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29970      Name = 'AbsXValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXValue';
29971      Value = "%nrbquote(1E-8)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-8";
29972      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29973      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29974      Name = 'AbsXTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXTime';
29975      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
29976      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29977      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29978      Name = 'FConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvValue';
29979      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
29980      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29981      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29982      Name = 'FConvTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvTime';
29983      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
29984      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29985      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29986      Name = 'GConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvValue';
29987      Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
29988      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29989      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29990      Name = 'GConvTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvTime';
29991      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
29992      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29993      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29994      Name = 'ModelSelectionCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelSelectionCriterion';
29995      Value = "%nrbquote(PROFIT/LOSS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROFIT/LOSS";
29996      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
29997      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
29998      Name = 'SuppressOutput';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SuppressOutput';
29999      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30000      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30001      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30002      Name = 'Residuals';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Residuals';
30003      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30004      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30005      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30006      Name = 'Standardizations';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Standardizations';
30007      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30008      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30009      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30010      Name = 'HiddenUnits';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenUnits';
30011      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30012      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30013      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30014      Name = 'TrainCode';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainCode';
30015      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
30016      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30017      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30018      Name = 'PrelimOutest';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimOutest';
30019      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
30020      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30021      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30022      Name = 'Outest';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Outest';
30023      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
30024      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30025      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30026      Name = 'Outfit';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Outfit';
30027      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
30028      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30029      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30030      Name = 'InitialDs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InitialDs';
30031      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
30032      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30033      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30034      Name = 'CodefileRes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CodefileRes';
30035      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
30036      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30037      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30038      Name = 'CodefileNoRes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CodefileNoRes';
30039      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
30040      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30041      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30042      Name = 'AddHidden';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AddHidden';
30043      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30044      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30045      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30046      Name = 'HiddenCombFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenCombFunction';
30047      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
30048      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30049      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30050      Name = 'HiddenActivation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenActivation';
30051      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
30052      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30053      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30054      Name = 'HiddenBias';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenBias';
30055      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30056      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30057      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30058      Name = 'TargetCombFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetCombFunction';
30059      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
30060      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30061      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30062      Name = 'TargetActivation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetActivation';
30063      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
30064      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30065      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30066      Name = 'TargetError';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetError';
30067      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
30068      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30069      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30070      Name = 'TargetBias';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetBias';
30071      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30072      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30073      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30074      Name = 'InitialSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InitialSeed';
30075      Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
30076      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30077      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30078      Name = 'RandDist';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandDist';
30079      Value = "%nrbquote(NORMAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NORMAL";
30080      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30081      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30082      Name = 'RandScale';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandScale';
30083      Value = "%nrbquote(0.1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.1";
30084      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30085      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30086      Name = 'RandLoc';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandLoc';
30087      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
30088      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30089      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30090      Name = 'InputStandardization';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InputStandardization';
30091      Value = "%nrbquote(STD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STD";
30092      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30093      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30094      Name = 'WeightDecay';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'WeightDecay';
30095      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
30096      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30097      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30098      Name = 'Accelerate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Accelerate';
30099      Value = "%nrbquote(1.2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1.2";
30100      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30101      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30102      Name = 'Decelerate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Decelerate';
30103      Value = "%nrbquote(0.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.5";
30104      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30105      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30106      Name = 'Learn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Learn';
30107      Value = "%nrbquote(0.1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.1";
30108      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30109      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30110      Name = 'MaxLearn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxLearn';
30111      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
30112      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30113      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30114      Name = 'MinLearn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinLearn';
30115      Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
30116      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30117      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30118      Name = 'Momentum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Momentum';
30119      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
30120      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30121      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30122      Name = 'MaxMomentum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxMomentum';
30123      Value = "%nrbquote(1.75)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1.75";
30124      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30125      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30126      Name = 'Tilt';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Tilt';
30127      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
30128      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30129      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30130      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 57 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

30131      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
30132      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
30133      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 57 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 57 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

30134      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
30135      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
30136      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
30136    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
30137      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
30138      Value = "NeuralNetwork";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NeuralNetwork";
30139      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
30140      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

30141      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
30142      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
30143      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 57 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 58 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.10 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=No Transform, 5";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=No Transform, 5 Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 19 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 19 and _n_ le 38 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 38 and _n_ le 57 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 58 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 19 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 19 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 19 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 19 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Neural_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Neural_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 13 observations read from the data set EMWS1.NEURAL_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

2 OUTPUT;
12 OUTPUT;
NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=No Transform, 5";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=No Transform, 5 Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 3 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Neural_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Neural" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL_CMETA_TRAIN.
      WHERE UPCASE(creator)='Neural';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Neural_emreport;
MPRINT(EM_REPORT_NODE):   quit;
4 The SAS System

NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Neural_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey21
MPRINT(EM_REPORT_NODE):   from EMWS1.Neural_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA REPORTFITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_DATA):   data pd;
MPRINT(EM_REPORT_DATA):   set EMWS1.Neural_EMREPORTFIT ;
MPRINT(EM_REPORT_DATA):   where train ne . ;
MPRINT(EM_REPORT_DATA):   label _NOBS_ = "Sum of Frequencies" _MISC_ = "Misclassification Rate" 
_MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Squared Error" 
_RASE_ = "Root Average Square Error" _DIV_ = "Divisor for ASE" _DFT_ = "Total Degrees of 
Freedom" _AIC_ = "Akaike's Information Criterion" _MSE_ = "Mean Squared Error" _RMSE_ = "Root 
Mean Squared Error" _AVERR_ = "Average Error Function" _DFE_ = "Degrees of Freedom for Error" 
_DFM_ = "Model Degrees of Freedom" _ERR_ = "Error Function" _FPE_ = "Final Prediction Error" 
_NW_ = "Number of Weights" _RFPE_ = "Root Final Prediction Error" _SBC_ = "Schwarz's Bayesian 
Criterion" ;
MPRINT(EM_REPORT_DATA):   drop stat ;
MPRINT(EM_REPORT_DATA):   run;

NOTE: Variable _NOBS_ is uninitialized.
NOTE: Variable _MISC_ is uninitialized.
NOTE: Variable _MAX_ is uninitialized.
NOTE: Variable _SSE_ is uninitialized.
NOTE: Variable _ASE_ is uninitialized.
NOTE: Variable _RASE_ is uninitialized.
NOTE: Variable _DIV_ is uninitialized.
NOTE: Variable _DFT_ is uninitialized.
NOTE: Variable _AIC_ is uninitialized.
NOTE: Variable _MSE_ is uninitialized.
NOTE: Variable _RMSE_ is uninitialized.
NOTE: Variable _AVERR_ is uninitialized.
NOTE: Variable _DFE_ is uninitialized.
NOTE: Variable _DFM_ is uninitialized.
NOTE: Variable _ERR_ is uninitialized.
NOTE: Variable _FPE_ is uninitialized.
NOTE: Variable _NW_ is uninitialized.
NOTE: Variable _RFPE_ is uninitialized.
NOTE: Variable _SBC_ is uninitialized.
NOTE: There were 21 observations read from the data set EMWS1.NEURAL_EMREPORTFIT.
      WHERE train not = .;
NOTE: The data set WORK.PD has 21 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=No Transform, 5";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Model Fit Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=No Transform, 5 Model Fit Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc sort data=pd;
MPRINT(EM_REPORT_DATA):   by target targetlabel;

NOTE: There were 21 observations read from the data set WORK.PD.
NOTE: The data set WORK.PD has 21 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_DATA):   proc print data=pd noobs label contents='';
MPRINT(EM_REPORT_DATA):   label label= "Label of Statistic" ;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 21 observations read from the data set WORK.PD.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==13 : Viewtype = ITERATIONPLOT ITERATIONPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_ITERATIONPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   title2 "Node=No Transform, 5";
MPRINT(EM_REPORT_ITERATIONPLOT):   title3 "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   data _null_ ;
MPRINT(EM_REPORT_ITERATIONPLOT):   set EMWS1.Neural_PLOTDS(obs=2) end=eof;
MPRINT(EM_REPORT_ITERATIONPLOT):   if eof then do ;
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_ase_',_ase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vase_',_vase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_misc_',_misc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vmisc_',_vmisc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Numeric values have been converted to character values at the places given by: 
      (Line):(Column).
      18:139   21:125   23:123   26:124   
NOTE: There were 2 observations read from the data set EMWS1.NEURAL_PLOTDS.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

9 24 22 35
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sql noprint;
MPRINT(EM_REPORT_ITERATIONPLOT):   select count(*) into :nonMiss_vmisc from EMWS1.Neural_PLOTDS 
where _vmisc_ ne .;
MPRINT(EM_REPORT_ITERATIONPLOT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_ITERATIONPLOT):   proc template;
MPRINT(EM_REPORT_ITERATIONPLOT):   define statgraph em.IterationPlot / store=work.templat;
MPRINT(EM_REPORT_ITERATIONPLOT):   begingraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Node=No Transform, 5";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   layout lattice / order=columnmajor rows=1 rowdatarange=data 
columngutter=10;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on 
label="Iteration") yaxisopts=(griddisplay=on label="Average Square Error");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_ASE_ / markerattrs=(size=0) 
display=all name='train' legendlabel="Train";
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_VASE_ / markerattrs=(size=0) 
display=all name='validate' legendlabel="Validate";
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=8;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on 
label="Iteration") yaxisopts=(griddisplay=on label="Misclassification Rate");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_MISC_ / markerattrs=(size=0) 
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_VMISC_ / markerattrs=(size=0) 
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=8;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   sidebar / align=bottom;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay;
MPRINT(EM_REPORT_ITERATIONPLOT):   discretelegend 'train' 'validate' / down=1 order=columnmajor;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endsidebar;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endgraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
NOTE: Overwriting existing template/link: Em.IterationPlot
NOTE: STATGRAPH 'Em.IterationPlot' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   run;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sort data=EMWS1.Neural_PLOTDS out=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   by _ITER_;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 47 observations read from the data set EMWS1.NEURAL_PLOTDS.
NOTE: The data set WORK._TMPRPT_ITERDAT has 47 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   proc sgrender data=_tmprpt_iterdat 
template='em.IterationPlot';
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: There were 47 observations read from the data set WORK._TMPRPT_ITERDAT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.30 seconds
      cpu time            0.11 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   title1;
MPRINT(EM_REPORT_ITERATIONPLOT):   title2;
MPRINT(EM_REPORT_ITERATIONPLOT):   title3;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc delete data=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Deleting WORK._TMPRPT_ITERDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==14 : Viewtype = HISTOGRAM WEIGHT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==15 : Viewtype = DATA HISTWEIGHT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==16 : Viewtype = LATTICE CLASSIFICATIONMANY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 11 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural_emreport(where=(id eq 17)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

==17 : Viewtype = PLOT ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS1.Neural_EMRANK(where=(TARGET='BAD'));
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 40 observations read from the data set EMWS1.NEURAL_EMRANK.
      WHERE TARGET='BAD';
NOTE: The data set WORK._TMP_DAT has 40 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: The data set WORK._TMP_CONTENT has 35 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call 
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 35 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by target datarole;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
NOTE: The data set WORK._TMP_EMRP has 40 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=No Transform, 5";
MPRINT(EM_REPORT_EMRANK):   title3 "Model Assessment Scores where TARGET='BAD'";
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=gain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basegain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestgain;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.55 seconds
      cpu time            0.17 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=liftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=baseliftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestliftc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.44 seconds
      cpu time            0.17 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=capc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basecapc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestcapc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.47 seconds
      cpu time            0.12 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 17 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural_emreport(where=(id eq 18)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==18 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.NEURAL_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural_emreport(where=(id eq 19)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==19 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_SCOREDIST):   data _tmp_scoredist;
MPRINT(EM_REPORT_SCOREDIST):   set EMWS1.Neural_EMSCOREDIST(where=(TARGET='BAD'));
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 40 observations read from the data set EMWS1.NEURAL_EMSCOREDIST.
      WHERE TARGET='BAD';
NOTE: The data set WORK._TMP_SCOREDIST has 40 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum 
name) noprint;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: The data set WORK._TMP_CONTENT has 21 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   data _null_;
MPRINT(EM_REPORT_SCOREDIST):   set _tmp_content;
MPRINT(EM_REPORT_SCOREDIST):   name=strip(upcase(name));
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'MODELDESCRIPTION' then call symput('modeldescnum', 
put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_LOOP_' then call symput('loopnum', put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_WHERE_' then call symput('has_where', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGET_' then call symput('has_target', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMEAN_' then call symput('var_targetMean',name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMAX_' then call symput('var_targetMax', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMIN_' then call symput('var_targetMin', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat', '1');
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 21 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 40 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 40 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SCOREDIST):   title2 "Node=No Transform, 5";
MPRINT(EM_REPORT_SCOREDIST):   title3 "Score Distributions where TARGET='BAD'";
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofevents / legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofnonevents / legendlabel="Non 
Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.50 seconds
      cpu time            0.18 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMPDAT.

MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofevents / 
legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofnonevents / 
legendlabel="Non Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Cumulative Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.47 seconds
      cpu time            0.12 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMPDAT.

MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc delete data=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: Deleting WORK._TMPDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_SCOREDIST):   title4;
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 40 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 40 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=No Transform, 5";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Score Distributions";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=No Transform, 5 Score Distributions";
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc print data=_tmpdat noobs label contents='';
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   var p_label numberofevents percentageofevents 
percentageofnonevents cumulativepercentageofevents cumulativepercentageofnonevents ;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 40 observations read from the data set WORK._TMPDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Neural3")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='NEURAL3';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

30144      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
30145      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
30145    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
30145    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
30146      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
30147      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
30148      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
30149      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
30150      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
30151      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30152      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30153      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30154      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30155      output;
MPRINT(EM_GETTRAINPATH):   output;
30156      nodelabel="Stat";
MPRINT(EM_GETTRAINPATH):   nodelabel="Stat";
30157      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
30158      description="Statistics Exploration";
MPRINT(EM_GETTRAINPATH):   description="Statistics Exploration";
30159      component="StatExplore";
MPRINT(EM_GETTRAINPATH):   component="StatExplore";
30160      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
30161      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30162      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
30163      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30164      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30165      output;
MPRINT(EM_GETTRAINPATH):   output;
30166      nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
30167      parent="Stat";
MPRINT(EM_GETTRAINPATH):   parent="Stat";
30168      description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
30169      component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
30170      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
30171      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30172      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
30173      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30174      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30175      output;
MPRINT(EM_GETTRAINPATH):   output;
30176      nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
30177      parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
30178      description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
30179      component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
30180      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
30181      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30182      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30183      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30184      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30185      output;
MPRINT(EM_GETTRAINPATH):   output;
30186      nodelabel="Neural3";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural3";
30187      parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
30188      description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
30189      component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
30190      tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
30191      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30192      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30193      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30194      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30195      output;
MPRINT(EM_GETTRAINPATH):   output;
30196      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 5 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Neural3"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=No Transform, 1";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Neural3";
MPRINT(EM_REPORT_NODE):   put "Node label = No Transform, 1";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Stat => Part => Impt => Neural3";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x "J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Neural3\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

30197      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
30198      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
30199      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
30199    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
30199    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
30200      Name = 'UseEstimates';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseEstimates';
30201      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30202      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30203      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30204      Name = 'NetworkArchitecture';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NetworkArchitecture';
30205      Value = "%nrbquote(MLP)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "MLP";
30206      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30207      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30208      Name = 'DirectConnection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DirectConnection';
30209      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30210      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30211      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30212      Name = 'Hidden';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Hidden';
30213      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
30214      Default = "%nrbquote(3)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "3";
30215      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30216      Name = 'Prelim';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Prelim';
30217      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30218      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30219      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30220      Name = 'PreliminaryRuns';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PreliminaryRuns';
30221      Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
30222      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30223      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30224      Name = 'PrelimMaxiter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimMaxiter';
30225      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
30226      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30227      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30228      Name = 'PrelimMaxTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimMaxTime';
30229      Value = "%nrbquote(1 HOUR)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1 HOUR";
30230      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30231      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30232      Name = 'Maxiter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxiter';
30233      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
30234      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30235      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30236      Name = 'Maxtime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxtime';
30237      Value = "%nrbquote(4 HOURS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4 HOURS";
30238      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30239      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30240      Name = 'TrainingTechnique';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainingTechnique';
30241      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
30242      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30243      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30244      Name = 'ConvDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ConvDefaults';
30245      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30246      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30247      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30248      Name = 'AbsConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsConvValue';
30249      Value = "%nrbquote(-1.34078E154)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "-1.34078E154";
30250      Default = "%nrbquote(-7.237006E75)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "-7.237006E75";
30251      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30252      Name = 'AbsFValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFValue';
30253      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
30254      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30255      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30256      Name = 'AbsFTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFTime';
30257      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
30258      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30259      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30260      Name = 'AbsGValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGValue';
30261      Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
30262      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30263      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30264      Name = 'AbsGTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGTime';
30265      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
30266      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30267      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30268      Name = 'AbsXValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXValue';
30269      Value = "%nrbquote(1E-8)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-8";
30270      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30271      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30272      Name = 'AbsXTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXTime';
30273      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
30274      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30275      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30276      Name = 'FConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvValue';
30277      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
30278      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30279      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30280      Name = 'FConvTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvTime';
30281      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
30282      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30283      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30284      Name = 'GConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvValue';
30285      Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
30286      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30287      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30288      Name = 'GConvTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvTime';
30289      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
30290      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30291      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30292      Name = 'ModelSelectionCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelSelectionCriterion';
30293      Value = "%nrbquote(PROFIT/LOSS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROFIT/LOSS";
30294      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30295      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30296      Name = 'SuppressOutput';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SuppressOutput';
30297      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30298      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30299      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30300      Name = 'Residuals';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Residuals';
30301      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30302      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30303      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30304      Name = 'Standardizations';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Standardizations';
30305      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30306      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30307      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30308      Name = 'HiddenUnits';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenUnits';
30309      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30310      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30311      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30312      Name = 'TrainCode';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainCode';
30313      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
30314      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30315      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30316      Name = 'PrelimOutest';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimOutest';
30317      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
30318      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30319      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30320      Name = 'Outest';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Outest';
30321      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
30322      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30323      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30324      Name = 'Outfit';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Outfit';
30325      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
30326      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30327      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30328      Name = 'InitialDs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InitialDs';
30329      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
30330      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30331      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30332      Name = 'CodefileRes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CodefileRes';
30333      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
30334      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30335      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30336      Name = 'CodefileNoRes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CodefileNoRes';
30337      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
30338      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30339      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30340      Name = 'AddHidden';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AddHidden';
30341      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30342      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30343      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30344      Name = 'HiddenCombFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenCombFunction';
30345      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
30346      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30347      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30348      Name = 'HiddenActivation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenActivation';
30349      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
30350      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30351      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30352      Name = 'HiddenBias';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenBias';
30353      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30354      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30355      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30356      Name = 'TargetCombFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetCombFunction';
30357      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
30358      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30359      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30360      Name = 'TargetActivation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetActivation';
30361      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
30362      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30363      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30364      Name = 'TargetError';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetError';
30365      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
30366      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30367      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30368      Name = 'TargetBias';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetBias';
30369      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30370      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30371      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30372      Name = 'InitialSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InitialSeed';
30373      Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
30374      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30375      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30376      Name = 'RandDist';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandDist';
30377      Value = "%nrbquote(NORMAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NORMAL";
30378      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30379      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30380      Name = 'RandScale';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandScale';
30381      Value = "%nrbquote(0.1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.1";
30382      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30383      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30384      Name = 'RandLoc';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandLoc';
30385      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
30386      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30387      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30388      Name = 'InputStandardization';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InputStandardization';
30389      Value = "%nrbquote(STD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STD";
30390      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30391      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30392      Name = 'WeightDecay';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'WeightDecay';
30393      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
30394      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30395      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30396      Name = 'Accelerate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Accelerate';
30397      Value = "%nrbquote(1.2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1.2";
30398      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30399      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30400      Name = 'Decelerate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Decelerate';
30401      Value = "%nrbquote(0.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.5";
30402      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30403      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30404      Name = 'Learn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Learn';
30405      Value = "%nrbquote(0.1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.1";
30406      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30407      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30408      Name = 'MaxLearn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxLearn';
30409      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
30410      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30411      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30412      Name = 'MinLearn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinLearn';
30413      Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
30414      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30415      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30416      Name = 'Momentum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Momentum';
30417      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
30418      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30419      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30420      Name = 'MaxMomentum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxMomentum';
30421      Value = "%nrbquote(1.75)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1.75";
30422      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30423      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30424      Name = 'Tilt';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Tilt';
30425      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
30426      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30427      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30428      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 57 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

30429      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
30430      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
30431      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 57 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 57 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

30432      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
30433      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
30434      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
30434    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
30435      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
30436      Value = "NeuralNetwork";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NeuralNetwork";
30437      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
30438      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

30439      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
30440      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
30441      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 57 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 58 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.12 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=No Transform, 1";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=No Transform, 1 Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 19 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 19 and _n_ le 38 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 38 and _n_ le 57 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 58 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 19 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 19 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 19 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 19 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Neural3_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Neural3_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 13 observations read from the data set EMWS1.NEURAL3_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

2 OUTPUT;
12 OUTPUT;
NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=No Transform, 1";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=No Transform, 1 Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 3 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Neural3_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Neural3" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL3_CMETA_TRAIN.
      WHERE UPCASE(creator)='Neural3';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Neural3_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from 
EMWS1.Neural3_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey21
MPRINT(EM_REPORT_NODE):   from EMWS1.Neural3_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA REPORTFITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_DATA):   data pd;
MPRINT(EM_REPORT_DATA):   set EMWS1.Neural3_EMREPORTFIT ;
MPRINT(EM_REPORT_DATA):   where train ne . ;
MPRINT(EM_REPORT_DATA):   label _NOBS_ = "Sum of Frequencies" _MISC_ = "Misclassification Rate" 
_MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Squared Error" 
_RASE_ = "Root Average Square Error" _DIV_ = "Divisor for ASE" _DFT_ = "Total Degrees of 
Freedom" _AIC_ = "Akaike's Information Criterion" _MSE_ = "Mean Squared Error" _RMSE_ = "Root 
Mean Squared Error" _AVERR_ = "Average Error Function" _DFE_ = "Degrees of Freedom for Error" 
_DFM_ = "Model Degrees of Freedom" _ERR_ = "Error Function" _FPE_ = "Final Prediction Error" 
_NW_ = "Number of Weights" _RFPE_ = "Root Final Prediction Error" _SBC_ = "Schwarz's Bayesian 
Criterion" ;
MPRINT(EM_REPORT_DATA):   drop stat ;
MPRINT(EM_REPORT_DATA):   run;

NOTE: Variable _NOBS_ is uninitialized.
NOTE: Variable _MISC_ is uninitialized.
NOTE: Variable _MAX_ is uninitialized.
NOTE: Variable _SSE_ is uninitialized.
NOTE: Variable _ASE_ is uninitialized.
NOTE: Variable _RASE_ is uninitialized.
NOTE: Variable _DIV_ is uninitialized.
NOTE: Variable _DFT_ is uninitialized.
NOTE: Variable _AIC_ is uninitialized.
NOTE: Variable _MSE_ is uninitialized.
NOTE: Variable _RMSE_ is uninitialized.
NOTE: Variable _AVERR_ is uninitialized.
NOTE: Variable _DFE_ is uninitialized.
NOTE: Variable _DFM_ is uninitialized.
NOTE: Variable _ERR_ is uninitialized.
NOTE: Variable _FPE_ is uninitialized.
NOTE: Variable _NW_ is uninitialized.
NOTE: Variable _RFPE_ is uninitialized.
NOTE: Variable _SBC_ is uninitialized.
NOTE: There were 21 observations read from the data set EMWS1.NEURAL3_EMREPORTFIT.
      WHERE train not = .;
NOTE: The data set WORK.PD has 21 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.08 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=No Transform, 1";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Model Fit Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=No Transform, 1 Model Fit Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc sort data=pd;
MPRINT(EM_REPORT_DATA):   by target targetlabel;

NOTE: There were 21 observations read from the data set WORK.PD.
NOTE: The data set WORK.PD has 21 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_DATA):   proc print data=pd noobs label contents='';
MPRINT(EM_REPORT_DATA):   label label= "Label of Statistic" ;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 21 observations read from the data set WORK.PD.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==13 : Viewtype = ITERATIONPLOT ITERATIONPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_ITERATIONPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   title2 "Node=No Transform, 1";
MPRINT(EM_REPORT_ITERATIONPLOT):   title3 "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   data _null_ ;
MPRINT(EM_REPORT_ITERATIONPLOT):   set EMWS1.Neural3_PLOTDS(obs=2) end=eof;
MPRINT(EM_REPORT_ITERATIONPLOT):   if eof then do ;
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_ase_',_ase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vase_',_vase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_misc_',_misc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vmisc_',_vmisc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Numeric values have been converted to character values at the places given by: 
      (Line):(Column).
      18:139   21:125   23:123   26:124   
NOTE: There were 2 observations read from the data set EMWS1.NEURAL3_PLOTDS.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

9 24 22 35
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sql noprint;
MPRINT(EM_REPORT_ITERATIONPLOT):   select count(*) into :nonMiss_vmisc from EMWS1.Neural3_PLOTDS 
where _vmisc_ ne .;
MPRINT(EM_REPORT_ITERATIONPLOT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_ITERATIONPLOT):   proc template;
MPRINT(EM_REPORT_ITERATIONPLOT):   define statgraph em.IterationPlot / store=work.templat;
MPRINT(EM_REPORT_ITERATIONPLOT):   begingraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Node=No Transform, 1";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   layout lattice / order=columnmajor rows=1 rowdatarange=data 
columngutter=10;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on 
label="Iteration") yaxisopts=(griddisplay=on label="Average Square Error");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_ASE_ / markerattrs=(size=0) 
display=all name='train' legendlabel="Train";
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_VASE_ / markerattrs=(size=0) 
display=all name='validate' legendlabel="Validate";
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=0;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on 
label="Iteration") yaxisopts=(griddisplay=on label="Misclassification Rate");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_MISC_ / markerattrs=(size=0) 
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_VMISC_ / markerattrs=(size=0) 
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=0;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   sidebar / align=bottom;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay;
MPRINT(EM_REPORT_ITERATIONPLOT):   discretelegend 'train' 'validate' / down=1 order=columnmajor;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endsidebar;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endgraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
NOTE: Overwriting existing template/link: Em.IterationPlot
NOTE: STATGRAPH 'Em.IterationPlot' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   run;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sort data=EMWS1.Neural3_PLOTDS out=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   by _ITER_;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 12 observations read from the data set EMWS1.NEURAL3_PLOTDS.
NOTE: The data set WORK._TMPRPT_ITERDAT has 12 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   proc sgrender data=_tmprpt_iterdat 
template='em.IterationPlot';
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: There were 12 observations read from the data set WORK._TMPRPT_ITERDAT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.27 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   title1;
MPRINT(EM_REPORT_ITERATIONPLOT):   title2;
MPRINT(EM_REPORT_ITERATIONPLOT):   title3;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc delete data=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Deleting WORK._TMPRPT_ITERDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==14 : Viewtype = HISTOGRAM WEIGHT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==15 : Viewtype = DATA HISTWEIGHT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==16 : Viewtype = LATTICE CLASSIFICATIONMANY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 11 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural3_emreport(where=(id eq 17)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==17 : Viewtype = PLOT ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS1.Neural3_EMRANK(where=(TARGET='BAD'));
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 40 observations read from the data set EMWS1.NEURAL3_EMRANK.
      WHERE TARGET='BAD';
NOTE: The data set WORK._TMP_DAT has 40 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: The data set WORK._TMP_CONTENT has 35 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call 
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 35 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by target datarole;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
NOTE: The data set WORK._TMP_EMRP has 40 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=No Transform, 1";
MPRINT(EM_REPORT_EMRANK):   title3 "Model Assessment Scores where TARGET='BAD'";
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=gain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basegain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestgain;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.47 seconds
      cpu time            0.18 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=liftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=baseliftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestliftc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.50 seconds
      cpu time            0.15 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=capc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basecapc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestcapc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.41 seconds
      cpu time            0.15 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 17 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural3_emreport(where=(id eq 18)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==18 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural3_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.NEURAL3_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural3_emreport(where=(id eq 19)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==19 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SCOREDIST):   data _tmp_scoredist;
MPRINT(EM_REPORT_SCOREDIST):   set EMWS1.Neural3_EMSCOREDIST(where=(TARGET='BAD'));
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 38 observations read from the data set EMWS1.NEURAL3_EMSCOREDIST.
      WHERE TARGET='BAD';
NOTE: The data set WORK._TMP_SCOREDIST has 38 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum 
name) noprint;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: The data set WORK._TMP_CONTENT has 21 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   data _null_;
MPRINT(EM_REPORT_SCOREDIST):   set _tmp_content;
MPRINT(EM_REPORT_SCOREDIST):   name=strip(upcase(name));
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'MODELDESCRIPTION' then call symput('modeldescnum', 
put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_LOOP_' then call symput('loopnum', put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_WHERE_' then call symput('has_where', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGET_' then call symput('has_target', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMEAN_' then call symput('var_targetMean',name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMAX_' then call symput('var_targetMax', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMIN_' then call symput('var_targetMin', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat', '1');
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 21 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 38 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 38 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SCOREDIST):   title2 "Node=No Transform, 1";
MPRINT(EM_REPORT_SCOREDIST):   title3 "Score Distributions where TARGET='BAD'";
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofevents / legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofnonevents / legendlabel="Non 
Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.42 seconds
      cpu time            0.17 seconds
      
NOTE: There were 38 observations read from the data set WORK._TMPDAT.

MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofevents / 
legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofnonevents / 
legendlabel="Non Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Cumulative Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.40 seconds
      cpu time            0.09 seconds
      
NOTE: There were 38 observations read from the data set WORK._TMPDAT.

MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc delete data=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: Deleting WORK._TMPDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_SCOREDIST):   title4;
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 38 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 38 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=No Transform, 1";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Score Distributions";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=No Transform, 1 Score Distributions";
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc print data=_tmpdat noobs label contents='';
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   var p_label numberofevents percentageofevents 
percentageofnonevents cumulativepercentageofevents cumulativepercentageofnonevents ;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 38 observations read from the data set WORK._TMPDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Trans")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='TRANS';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

30442      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
30443      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
30443    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
30443    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
30444      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
30445      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
30446      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
30447      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
30448      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
30449      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30450      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30451      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30452      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30453      output;
MPRINT(EM_GETTRAINPATH):   output;
30454      nodelabel="Stat";
MPRINT(EM_GETTRAINPATH):   nodelabel="Stat";
30455      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
30456      description="Statistics Exploration";
MPRINT(EM_GETTRAINPATH):   description="Statistics Exploration";
30457      component="StatExplore";
MPRINT(EM_GETTRAINPATH):   component="StatExplore";
30458      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
30459      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30460      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
30461      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30462      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30463      output;
MPRINT(EM_GETTRAINPATH):   output;
30464      nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
30465      parent="Stat";
MPRINT(EM_GETTRAINPATH):   parent="Stat";
30466      description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
30467      component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
30468      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
30469      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30470      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
30471      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30472      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30473      output;
MPRINT(EM_GETTRAINPATH):   output;
30474      nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
30475      parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
30476      description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
30477      component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
30478      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
30479      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30480      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30481      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30482      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30483      output;
MPRINT(EM_GETTRAINPATH):   output;
30484      nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
30485      parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
30486      description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
30487      component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
30488      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
30489      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30490      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30491      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30492      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30493      output;
MPRINT(EM_GETTRAINPATH):   output;
30494      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 5 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 5 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Trans"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Transform Variables";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Trans";
MPRINT(EM_REPORT_NODE):   put "Node label = Transform Variables";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Stat => Part => Impt => Trans";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x "J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Trans\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

30495      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
30496      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
30497      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
30497    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
30497    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
30498      Name = 'DefaultMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DefaultMethod';
30499      Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
30500      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30501      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30502      Name = 'DefaultTargetMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DefaultTargetMethod';
30503      Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
30504      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30505      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30506      Name = 'DefaultClassMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DefaultClassMethod';
30507      Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
30508      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30509      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30510      Name = 'DefaultClassTargetMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DefaultClassTargetMethod';
30511      Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
30512      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30513      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30514      Name = 'Offset';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Offset';
30515      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
30516      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30517      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30518      Name = 'MinOffset';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinOffset';
30519      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30520      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30521      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30522      Name = 'HideVariable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideVariable';
30523      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30524      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30525      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30526      Name = 'RejectVariable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RejectVariable';
30527      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30528      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30529      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30530      Name = 'GroupCutoff';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GroupCutoff';
30531      Value = "%nrbquote(0.1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.1";
30532      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30533      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30534      Name = 'GroupMissing';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GroupMissing';
30535      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30536      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30537      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30538      Name = 'EmRandomSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'EmRandomSeed';
30539      Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
30540      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30541      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30542      Name = 'EmSampleSize';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'EmSampleSize';
30543      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
30544      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30545      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30546      Name = 'EmSampleMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'EmSampleMethod';
30547      Value = "%nrbquote(FIRSTN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "FIRSTN";
30548      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30549      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30550      Name = 'MissingValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingValue';
30551      Value = "%nrbquote(USEINSEARCH)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "USEINSEARCH";
30552      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30553      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30554      Name = 'SummaryVariables';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SummaryVariables';
30555      Value = "%nrbquote(TRANSFORMED)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "TRANSFORMED";
30556      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30557      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30558      Name = 'SummaryStatistics';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SummaryStatistics';
30559      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30560      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30561      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30562      Name = 'UseMetaTransform';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseMetaTransform';
30563      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30564      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30565      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30566      Name = 'MissingAsLevel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingAsLevel';
30567      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30568      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30569      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30570      Name = 'NumberofBins';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumberofBins';
30571      Value = "%nrbquote(VARIABLES)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "VARIABLES";
30572      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30573      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30574      Name = 'MaxOptimalBins';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxOptimalBins';
30575      Value = "%nrbquote(4)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4";
30576      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30577      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30578      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

30579      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
30580      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
30581      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 20 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 20 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

30582      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
30583      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
30584      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
30584    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
30585      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
30586      Value = "Transform";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Transform";
30587      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
30588      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

30589      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
30590      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
30591      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 20 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 21 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.10 seconds
      cpu time            0.09 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Transform Variables";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Transform Variables Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 7 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-7*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 7 and _n_ le 14 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-7*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 14 and _n_ le 21 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-7*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 21 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 7 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 7 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 7 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 7 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Trans_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Trans_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 13 observations read from the data set EMWS1.TRANS_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 7 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 13 observations and 7 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

2 OUTPUT;
12 OUTPUT;
NOTE: There were 13 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Transform Variables";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Transform Variables Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 3 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Trans_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Trans" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.TRANS_CMETA_TRAIN.
      WHERE UPCASE(creator)='Trans';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Trans_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.10 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Trans_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey6
MPRINT(EM_REPORT_NODE):   from EMWS1.Trans_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.14 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==12 : Viewtype = DATA FORMULA
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

==13 : Viewtype = DATA COMPUTED
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==14 : Viewtype = DATA METATRANS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==15 : Viewtype = TEXT USERCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==16 : Viewtype = DATA BESTRSQUARE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Trans_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.TRANS_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==17 : Viewtype = DATA STATISTICS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Transform Variables";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Transformations Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Transform Variables Transformations 
Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=EMWS1.Trans_STATISTICS(obs=100) noobs label 
contents='';
MPRINT(EM_REPORT_DATA):   run ;

NOTE: There were 6 observations read from the data set EMWS1.TRANS_STATISTICS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("BINNING")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='BINNING';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

30592      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
30593      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
30593    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
30593    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
30594      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
30595      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
30596      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
30597      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
30598      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
30599      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30600      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30601      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30602      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30603      output;
MPRINT(EM_GETTRAINPATH):   output;
30604      nodelabel="Stat";
MPRINT(EM_GETTRAINPATH):   nodelabel="Stat";
30605      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
30606      description="Statistics Exploration";
MPRINT(EM_GETTRAINPATH):   description="Statistics Exploration";
30607      component="StatExplore";
MPRINT(EM_GETTRAINPATH):   component="StatExplore";
30608      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
30609      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30610      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
30611      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30612      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30613      output;
MPRINT(EM_GETTRAINPATH):   output;
30614      nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
30615      parent="Stat";
MPRINT(EM_GETTRAINPATH):   parent="Stat";
30616      description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
30617      component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
30618      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
30619      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30620      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
30621      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30622      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30623      output;
MPRINT(EM_GETTRAINPATH):   output;
30624      nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
30625      parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
30626      description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
30627      component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
30628      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
30629      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30630      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30631      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30632      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30633      output;
MPRINT(EM_GETTRAINPATH):   output;
30634      nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
30635      parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
30636      description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
30637      component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
30638      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
30639      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30640      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30641      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30642      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30643      output;
MPRINT(EM_GETTRAINPATH):   output;
30644      nodelabel="BINNING";
MPRINT(EM_GETTRAINPATH):   nodelabel="BINNING";
30645      parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
30646      description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
30647      component="Binning";
MPRINT(EM_GETTRAINPATH):   component="Binning";
30648      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
30649      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30650      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30651      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30652      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30653      output;
MPRINT(EM_GETTRAINPATH):   output;
30654      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("BINNING"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Interactive Binning";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = BINNING";
MPRINT(EM_REPORT_NODE):   put "Node label = Interactive Binning";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Stat => Part => Impt => Trans => BINNING";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x "J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\BINNING\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

30655      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
30656      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
30657      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
30657    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
30657    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
30658      Name = 'MissingAsLevel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MissingAsLevel';
30659      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30660      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30661      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30662      Name = 'ApplyLevelRule';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ApplyLevelRule';
30663      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30664      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30665      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30666      Name = 'BinMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'BinMethod';
30667      Value = "%nrbquote(QUANTILE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "QUANTILE";
30668      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30669      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30670      Name = 'NumBins';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumBins';
30671      Value = "%nrbquote(4)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4";
30672      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30673      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30674      Name = 'Freeze';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Freeze';
30675      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30676      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30677      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30678      Name = 'CreateGrouping';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CreateGrouping';
30679      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30680      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30681      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30682      Name = 'CreateMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CreateMethod';
30683      Value = "%nrbquote(OVERWRITE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "OVERWRITE";
30684      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30685      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30686      Name = 'ImportGrouping';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImportGrouping';
30687      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30688      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30689      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30690      Name = 'VarSelMethod';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'VarSelMethod';
30691      Value = "%nrbquote(GINI)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "GINI";
30692      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30693      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30694      Name = 'GiniCutoff';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GiniCutoff';
30695      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
30696      Default = "%nrbquote(20.0)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "20.0";
30697      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30698      Name = 'GrpMsmnt';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GrpMsmnt';
30699      Value = "%nrbquote(ORDINAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ORDINAL";
30700      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30701      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30702      Name = 'MaxVar';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxVar';
30703      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
30704      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30705      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30706      Name = 'ClassGroupRare';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ClassGroupRare';
30707      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30708      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30709      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30710      Name = 'GroupCutoff';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GroupCutoff';
30711      Value = "%nrbquote(0.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.5";
30712      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30713      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30714      Name = 'INTTARGETMETHOD';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'INTTARGETMETHOD';
30715      Value = "%nrbquote(CUTMEAN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "CUTMEAN";
30716      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30717      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30718      Name = 'USERCUTVALUE';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'USERCUTVALUE';
30719      Value = "%nrbquote(0.20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.20";
30720      Default = "%nrbquote(0.2)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "0.2";
30721      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30722      Name = 'RejectIntTarget';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RejectIntTarget';
30723      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30724      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30725      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30726      Name = 'Precision';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Precision';
30727      Value = "%nrbquote(2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "2";
30728      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30729      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30730      Name = 'ImportData';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ImportData';
30731      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
30732      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30733      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30734      Name = 'GroupMissing';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GroupMissing';
30735      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30736      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30737      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30738      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 20 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

30739      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
30740      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
30741      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 20 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 20 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

30742      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
30743      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
30744      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
30744    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
30745      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
30746      Value = "Binning";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Binning";
30747      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
30748      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

30749      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
30750      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
30751      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 20 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 21 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Interactive Binning";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Interactive Binning Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 7 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-7*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 7 and _n_ le 14 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-7*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 14 and _n_ le 21 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-7*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 21 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 7 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 7 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 7 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 7 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.BINNING_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.BINNING_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 14 observations read from the data set EMWS1.BINNING_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 14 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 14 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 14 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 14 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

2 OUTPUT;
12 OUTPUT;
14 OUTPUT;
NOTE: There were 14 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 4 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Interactive Binning";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Interactive Binning Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 4 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.BINNING_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "BINNING" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 4 observations read from the data set EMWS1.BINNING_CMETA_TRAIN.
      WHERE UPCASE(creator)='BINNING';
NOTE: The data set WORK._TMPVL_PDVX has 4 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 4 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVX has 4 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 4 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Interactive Binning";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Created Variables Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Interactive Binning Created Variables 
Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pdvxp noobs label contents='';
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 1 observations read from the data set WORK._TMPVL_PDVXP.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.BINNING_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from 
EMWS1.BINNING_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey19
MPRINT(EM_REPORT_NODE):   from EMWS1.BINNING_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.BINNING_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.BINNING_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.BINNING_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.BINNING_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.BINNING_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.BINNING_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.BINNING_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.BINNING_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.BINNING_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.BINNING_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.BINNING_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.BINNING_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.BINNING_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.BINNING_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.BINNING_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.BINNING_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.BINNING_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.BINNING_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.BINNING_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.BINNING_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.BINNING_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.BINNING_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.BINNING_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.BINNING_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA EVENTRATESTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.BINNING_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.BINNING_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==13 : Viewtype = DATA OUTPUTTABLE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Interactive Binning";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Output Variables";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Interactive Binning Output Variables";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=EMWS1.BINNING_RESULTSTABLE(obs=100) noobs label 
contents='';
MPRINT(EM_REPORT_DATA):   run ;

NOTE: There were 12 observations read from the data set EMWS1.BINNING_RESULTSTABLE.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.BINNING_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 11 observations read from the data set EMWS1.BINNING_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==14 : Viewtype = BAR STATPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SGPLOT):   title2 "Node=Interactive Binning";
MPRINT(EM_REPORT_SGPLOT):   title3 "Statistics Plot";
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=5000;
MPRINT(EM_REPORT_SGPLOT):   proc sgplot data=EMWS1.BINNING_RESULTSTABLE;
MPRINT(EM_REPORT_SGPLOT):   vbar DISPLAY_VAR / missing response=_GINI_;
MPRINT(EM_REPORT_SGPLOT):   xaxis type=discrete ;
MPRINT(EM_REPORT_SGPLOT):   keylegend;
MPRINT(EM_REPORT_SGPLOT):   run;

NOTE: PROCEDURE SGPLOT used (Total process time):
      real time           0.35 seconds
      cpu time            0.12 seconds
      
NOTE: There were 12 observations read from the data set EMWS1.BINNING_RESULTSTABLE.

MPRINT(EM_REPORT_SGPLOT):   quit;
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=100;
MPRINT(EM_REPORT_SGPLOT):   title1;
MPRINT(EM_REPORT_SGPLOT):   title2;
MPRINT(EM_REPORT_SGPLOT):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.BINNING_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 18 observations read from the data set EMWS1.BINNING_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==15 : Viewtype = LATTICE EVENTRATE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct DISPLAY_VAR) into :numx from 
EMWS1.BINNING_COARSE(where=(((_GINI_ >= 20) & (GINIORDER <= 10))));
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=Interactive Binning";
MPRINT(EM_REPORT_LATTICE):   title3 "Event Rate Plot";
MPRINT(EM_REPORT_LATTICE):   title4 "((_GINI_ >= 20) & (GINIORDER <= 10))";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel data=EMWS1.BINNING_COARSE(where=(((_GINI_ >= 20) & 
(GINIORDER <= 10))));
MPRINT(EM_REPORT_LATTICE):   panelby DISPLAY_VAR / uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar _GROUP_ / response=EVENTRATE ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;

NOTE: Since no format is assigned, the numeric category variable will use the default of BEST6.
NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.63 seconds
      cpu time            0.21 seconds
      
NOTE: There were 18 observations read from the data set EMWS1.BINNING_COARSE.
      WHERE (_GINI_>=20) and (GINIORDER<=10);

MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Interactive Binning";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Event Rate Plot";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Interactive Binning Event Rate Plot";
MPRINT(EM_REPORT_LATTICE):  ;
MPRINT(EM_REPORT_LATTICE):   proc print data=EMWS1.BINNING_COARSE(where=(((_GINI_ >= 20) & 
(GINIORDER <= 10)))) noobs label contents='';
MPRINT(EM_REPORT_LATTICE):   var display_var _label_ _group_ role eventRate;
MPRINT(EM_REPORT_LATTICE):   run;

NOTE: There were 18 observations read from the data set EMWS1.BINNING_COARSE.
      WHERE (_GINI_>=20) and (GINIORDER<=10);
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Varsel")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='VARSEL';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

30752      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
30753      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
30753    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
30753    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
30754      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
30755      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
30756      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
30757      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
30758      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
30759      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30760      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30761      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30762      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30763      output;
MPRINT(EM_GETTRAINPATH):   output;
30764      nodelabel="Stat";
MPRINT(EM_GETTRAINPATH):   nodelabel="Stat";
30765      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
30766      description="Statistics Exploration";
MPRINT(EM_GETTRAINPATH):   description="Statistics Exploration";
30767      component="StatExplore";
MPRINT(EM_GETTRAINPATH):   component="StatExplore";
30768      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
30769      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30770      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
30771      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30772      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30773      output;
MPRINT(EM_GETTRAINPATH):   output;
30774      nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
30775      parent="Stat";
MPRINT(EM_GETTRAINPATH):   parent="Stat";
30776      description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
30777      component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
30778      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
30779      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30780      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
30781      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30782      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30783      output;
MPRINT(EM_GETTRAINPATH):   output;
30784      nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
30785      parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
30786      description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
30787      component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
30788      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
30789      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30790      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30791      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30792      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30793      output;
MPRINT(EM_GETTRAINPATH):   output;
30794      nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
30795      parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
30796      description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
30797      component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
30798      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
30799      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30800      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30801      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30802      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30803      output;
MPRINT(EM_GETTRAINPATH):   output;
30804      nodelabel="BINNING";
MPRINT(EM_GETTRAINPATH):   nodelabel="BINNING";
30805      parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
30806      description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
30807      component="Binning";
MPRINT(EM_GETTRAINPATH):   component="Binning";
30808      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
30809      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30810      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30811      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30812      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30813      output;
MPRINT(EM_GETTRAINPATH):   output;
30814      nodelabel="Varsel";
MPRINT(EM_GETTRAINPATH):   nodelabel="Varsel";
30815      parent="BINNING";
MPRINT(EM_GETTRAINPATH):   parent="BINNING";
30816      description="Variable selection  Class";
MPRINT(EM_GETTRAINPATH):   description="Variable selection  Class";
30817      component="VariableSelection";
MPRINT(EM_GETTRAINPATH):   component="VariableSelection";
30818      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
30819      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30820      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
30821      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30822      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30823      output;
MPRINT(EM_GETTRAINPATH):   output;
30824      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 7 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 7 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Varsel"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Variable Selection";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Varsel";
MPRINT(EM_REPORT_NODE):   put "Node label = Variable Selection";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Stat => Part => Impt => Trans => BINNING => 
Varsel";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x "J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Varsel\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

30825      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
30826      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
30827      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
30827    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
30827    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
30828      Name = 'TargetModel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetModel';
30829      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
30830      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30831      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30832      Name = 'HideRejectedVars';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideRejectedVars';
30833      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30834      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30835      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30836      Name = 'MaxMissingPercent';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxMissingPercent';
30837      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
30838      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30839      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30840      Name = 'MaxLevel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxLevel';
30841      Value = "%nrbquote(100)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "100";
30842      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30843      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30844      Name = 'RejectUnusedInputVars';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RejectUnusedInputVars';
30845      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30846      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30847      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30848      Name = 'ByPassVars';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ByPassVars';
30849      Value = "%nrbquote(NONE)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NONE";
30850      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30851      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30852      Name = 'ByPassVarsRole';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ByPassVarsRole';
30853      Value = "%nrbquote(INPUT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "INPUT";
30854      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30855      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30856      Name = 'HideUnusedInputVars';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HideUnusedInputVars';
30857      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30858      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30859      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30860      Name = 'UseAov16';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseAov16';
30861      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30862      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30863      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30864      Name = 'UseInteractions';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseInteractions';
30865      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
30866      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30867      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30868      Name = 'UseGroups';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseGroups';
30869      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30870      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30871      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30872      Name = 'MinR2';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinR2';
30873      Value = "%nrbquote(0.005)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.005";
30874      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30875      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30876      Name = 'StopR2';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'StopR2';
30877      Value = "%nrbquote(0.0005)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.0005";
30878      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30879      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30880      Name = 'MaxRows';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxRows';
30881      Value = "%nrbquote(3000)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "3000";
30882      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30883      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30884      Name = 'Passes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Passes';
30885      Value = "%nrbquote(6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "6";
30886      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30887      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30888      Name = 'ChiSquare';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ChiSquare';
30889      Value = "%nrbquote(3.84)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "3.84";
30890      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30891      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30892      Name = 'Bins';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Bins';
30893      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
30894      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30895      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30896      Name = 'SASSPDS';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SASSPDS';
30897      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
30898      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30899      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30900      Name = 'PrintOption';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrintOption';
30901      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
30902      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30903      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30904      Name = 'VarselLabel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'VarselLabel';
30905      Value = "%nrbquote(VARSELLABEL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "VARSELLABEL";
30906      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30907      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30908      Name = 'RoleUnusedVars';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RoleUnusedVars';
30909      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
30910      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
30911      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
30912      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 21 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

30913      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
30914      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
30915      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 21 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 21 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

30916      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
30917      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
30918      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
30918    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
30919      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
30920      Value = "VariableSelection";
MPRINT(EM_REPORT_PROPERTIES):   Value = "VariableSelection";
30921      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
30922      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

30923      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
30924      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
30925      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 21 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 22 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Variable Selection";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Variable Selection Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 7 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-7*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 7 and _n_ le 14 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-7*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 14 and _n_ le 21 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-7*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 22 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 7 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 7 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 7 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 7 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 7 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 7 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 7 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Varsel_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Varsel_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 17 observations read from the data set EMWS1.VARSEL_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 5 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 5 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 5 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 5 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 5 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

2 OUTPUT;
NOTE: There were 5 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 2 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Variable Selection";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Variable Selection Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 2 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Varsel_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Varsel" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.VARSEL_CMETA_TRAIN.
      WHERE UPCASE(creator)='Varsel';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 20 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Varsel_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from EMWS1.Varsel_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey17
MPRINT(EM_REPORT_NODE):   from EMWS1.Varsel_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA VARIABLESELECTION
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Variable Selection";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Selection";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Variable Selection Variable Selection";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=EMWS1.Varsel_RESULTEDVARS(obs=100) noobs label 
contents='';
MPRINT(EM_REPORT_DATA):   run ;

NOTE: There were 5 observations read from the data set EMWS1.VARSEL_RESULTEDVARS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

==13 : Viewtype = DATA OUTGVAR
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==14 : Viewtype = DATA OUTAOV16
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==15 : Viewtype = DATA OUTGINT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 8 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==16 : Viewtype = BAR R2VALUES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SGPLOT):   title2 "Node=Variable Selection";
MPRINT(EM_REPORT_SGPLOT):   title3 "R2 Values";
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=5000;
MPRINT(EM_REPORT_SGPLOT):   proc sgplot data=EMWS1.Varsel_R2DS;
MPRINT(EM_REPORT_SGPLOT):   vbar EFFECT / missing response=R2;
MPRINT(EM_REPORT_SGPLOT):   xaxis type=discrete ;
MPRINT(EM_REPORT_SGPLOT):   keylegend;
MPRINT(EM_REPORT_SGPLOT):   run;

NOTE: PROCEDURE SGPLOT used (Total process time):
      real time           0.35 seconds
      cpu time            0.17 seconds
      
NOTE: There were 15 observations read from the data set EMWS1.VARSEL_R2DS.

MPRINT(EM_REPORT_SGPLOT):   quit;
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=100;
MPRINT(EM_REPORT_SGPLOT):   title1;
MPRINT(EM_REPORT_SGPLOT):   title2;
MPRINT(EM_REPORT_SGPLOT):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 8 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==17 : Viewtype = BAR EFFECTSINMODEL
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SGPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SGPLOT):   title2 "Node=Variable Selection";
MPRINT(EM_REPORT_SGPLOT):   title3 "Effects in the Model";
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=5000;
MPRINT(EM_REPORT_SGPLOT):   proc sgplot data=EMWS1.Varsel_EFFECTDS;
MPRINT(EM_REPORT_SGPLOT):   vbar EFFECT / missing response=R2;
MPRINT(EM_REPORT_SGPLOT):   xaxis type=discrete ;
MPRINT(EM_REPORT_SGPLOT):   keylegend;
MPRINT(EM_REPORT_SGPLOT):   run;

NOTE: PROCEDURE SGPLOT used (Total process time):
      real time           0.29 seconds
      cpu time            0.15 seconds
      
NOTE: There were 4 observations read from the data set EMWS1.VARSEL_EFFECTDS.

MPRINT(EM_REPORT_SGPLOT):   quit;
MPRINT(EM_REPORT_SGPLOT):   ods graphics / discretemax=100;
MPRINT(EM_REPORT_SGPLOT):   title1;
MPRINT(EM_REPORT_SGPLOT):   title2;
MPRINT(EM_REPORT_SGPLOT):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 16 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==18 : Viewtype = DTREE TREE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 16 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==19 : Viewtype = ICICLE ICICLE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 20));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=20;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==20 : Viewtype = DATA LEAFSTATS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
5 The SAS System

MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Varsel_emreport(where=(id eq 21));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 8 observations read from the data set EMWS1.VARSEL_EMREPORT.
      WHERE id=21;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

==21 : Viewtype = BAR VARIMPORTANCE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Neural6")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='NEURAL6';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

30926      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
30927      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
30927    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
30927    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
30928      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
30929      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
30930      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
30931      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
30932      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
30933      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30934      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30935      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30936      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30937      output;
MPRINT(EM_GETTRAINPATH):   output;
30938      nodelabel="Stat";
MPRINT(EM_GETTRAINPATH):   nodelabel="Stat";
30939      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
30940      description="Statistics Exploration";
MPRINT(EM_GETTRAINPATH):   description="Statistics Exploration";
30941      component="StatExplore";
MPRINT(EM_GETTRAINPATH):   component="StatExplore";
30942      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
30943      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30944      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
30945      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30946      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30947      output;
MPRINT(EM_GETTRAINPATH):   output;
30948      nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
30949      parent="Stat";
MPRINT(EM_GETTRAINPATH):   parent="Stat";
30950      description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
30951      component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
30952      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
30953      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30954      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
30955      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30956      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30957      output;
MPRINT(EM_GETTRAINPATH):   output;
30958      nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
30959      parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
30960      description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
30961      component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
30962      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
30963      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30964      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30965      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30966      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30967      output;
MPRINT(EM_GETTRAINPATH):   output;
30968      nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
30969      parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
30970      description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
30971      component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
30972      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
30973      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30974      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30975      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30976      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30977      output;
MPRINT(EM_GETTRAINPATH):   output;
30978      nodelabel="BINNING";
MPRINT(EM_GETTRAINPATH):   nodelabel="BINNING";
30979      parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
30980      description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
30981      component="Binning";
MPRINT(EM_GETTRAINPATH):   component="Binning";
30982      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
30983      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30984      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
30985      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30986      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30987      output;
MPRINT(EM_GETTRAINPATH):   output;
30988      nodelabel="Varsel";
MPRINT(EM_GETTRAINPATH):   nodelabel="Varsel";
30989      parent="BINNING";
MPRINT(EM_GETTRAINPATH):   parent="BINNING";
30990      description="Variable selection  Class";
MPRINT(EM_GETTRAINPATH):   description="Variable selection  Class";
30991      component="VariableSelection";
MPRINT(EM_GETTRAINPATH):   component="VariableSelection";
30992      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
30993      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
30994      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
30995      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
30996      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
30997      output;
MPRINT(EM_GETTRAINPATH):   output;
30998      nodelabel="Neural6";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural6";
30999      parent="Varsel";
MPRINT(EM_GETTRAINPATH):   parent="Varsel";
31000      description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
31001      component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
31002      tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
31003      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31004      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
31005      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31006      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31007      output;
MPRINT(EM_GETTRAINPATH):   output;
31008      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 8 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Neural6"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Transform, 5";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Neural6";
MPRINT(EM_REPORT_NODE):   put "Node label = Transform, 5";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Stat => Part => Impt => Trans => BINNING => 
Varsel => Neural6";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x "J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Neural6\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

31009      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
31010      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
31011      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
31011    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
31011    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
31012      Name = 'UseEstimates';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseEstimates';
31013      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
31014      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31015      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31016      Name = 'NetworkArchitecture';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NetworkArchitecture';
31017      Value = "%nrbquote(MLP)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "MLP";
31018      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31019      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31020      Name = 'DirectConnection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DirectConnection';
31021      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
31022      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31023      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31024      Name = 'Hidden';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Hidden';
31025      Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
31026      Default = "%nrbquote(3)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "3";
31027      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31028      Name = 'Prelim';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Prelim';
31029      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31030      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31031      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31032      Name = 'PreliminaryRuns';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PreliminaryRuns';
31033      Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
31034      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31035      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31036      Name = 'PrelimMaxiter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimMaxiter';
31037      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
31038      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31039      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31040      Name = 'PrelimMaxTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimMaxTime';
31041      Value = "%nrbquote(1 HOUR)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1 HOUR";
31042      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31043      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31044      Name = 'Maxiter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxiter';
31045      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
31046      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31047      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31048      Name = 'Maxtime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxtime';
31049      Value = "%nrbquote(4 HOURS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4 HOURS";
31050      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31051      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31052      Name = 'TrainingTechnique';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainingTechnique';
31053      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31054      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31055      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31056      Name = 'ConvDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ConvDefaults';
31057      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31058      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31059      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31060      Name = 'AbsConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsConvValue';
31061      Value = "%nrbquote(-1.34078E154)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "-1.34078E154";
31062      Default = "%nrbquote(-7.237006E75)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "-7.237006E75";
31063      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31064      Name = 'AbsFValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFValue';
31065      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31066      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31067      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31068      Name = 'AbsFTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFTime';
31069      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31070      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31071      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31072      Name = 'AbsGValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGValue';
31073      Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
31074      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31075      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31076      Name = 'AbsGTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGTime';
31077      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31078      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31079      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31080      Name = 'AbsXValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXValue';
31081      Value = "%nrbquote(1E-8)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-8";
31082      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31083      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31084      Name = 'AbsXTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXTime';
31085      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31086      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31087      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31088      Name = 'FConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvValue';
31089      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31090      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31091      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31092      Name = 'FConvTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvTime';
31093      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31094      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31095      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31096      Name = 'GConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvValue';
31097      Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
31098      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31099      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31100      Name = 'GConvTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvTime';
31101      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31102      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31103      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31104      Name = 'ModelSelectionCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelSelectionCriterion';
31105      Value = "%nrbquote(PROFIT/LOSS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROFIT/LOSS";
31106      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31107      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31108      Name = 'SuppressOutput';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SuppressOutput';
31109      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
31110      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31111      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31112      Name = 'Residuals';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Residuals';
31113      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31114      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31115      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31116      Name = 'Standardizations';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Standardizations';
31117      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
31118      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31119      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31120      Name = 'HiddenUnits';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenUnits';
31121      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
31122      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31123      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31124      Name = 'TrainCode';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainCode';
31125      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31126      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31127      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31128      Name = 'PrelimOutest';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimOutest';
31129      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31130      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31131      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31132      Name = 'Outest';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Outest';
31133      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31134      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31135      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31136      Name = 'Outfit';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Outfit';
31137      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31138      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31139      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31140      Name = 'InitialDs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InitialDs';
31141      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31142      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31143      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31144      Name = 'CodefileRes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CodefileRes';
31145      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31146      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31147      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31148      Name = 'CodefileNoRes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CodefileNoRes';
31149      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31150      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31151      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31152      Name = 'AddHidden';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AddHidden';
31153      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31154      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31155      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31156      Name = 'HiddenCombFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenCombFunction';
31157      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31158      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31159      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31160      Name = 'HiddenActivation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenActivation';
31161      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31162      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31163      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31164      Name = 'HiddenBias';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenBias';
31165      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31166      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31167      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31168      Name = 'TargetCombFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetCombFunction';
31169      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31170      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31171      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31172      Name = 'TargetActivation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetActivation';
31173      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31174      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31175      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31176      Name = 'TargetError';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetError';
31177      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31178      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31179      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31180      Name = 'TargetBias';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetBias';
31181      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31182      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31183      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31184      Name = 'InitialSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InitialSeed';
31185      Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
31186      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31187      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31188      Name = 'RandDist';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandDist';
31189      Value = "%nrbquote(NORMAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NORMAL";
31190      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31191      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31192      Name = 'RandScale';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandScale';
31193      Value = "%nrbquote(0.1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.1";
31194      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31195      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31196      Name = 'RandLoc';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandLoc';
31197      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31198      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31199      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31200      Name = 'InputStandardization';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InputStandardization';
31201      Value = "%nrbquote(STD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STD";
31202      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31203      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31204      Name = 'WeightDecay';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'WeightDecay';
31205      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31206      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31207      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31208      Name = 'Accelerate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Accelerate';
31209      Value = "%nrbquote(1.2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1.2";
31210      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31211      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31212      Name = 'Decelerate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Decelerate';
31213      Value = "%nrbquote(0.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.5";
31214      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31215      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31216      Name = 'Learn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Learn';
31217      Value = "%nrbquote(0.1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.1";
31218      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31219      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31220      Name = 'MaxLearn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxLearn';
31221      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
31222      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31223      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31224      Name = 'MinLearn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinLearn';
31225      Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
31226      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31227      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31228      Name = 'Momentum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Momentum';
31229      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31230      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31231      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31232      Name = 'MaxMomentum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxMomentum';
31233      Value = "%nrbquote(1.75)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1.75";
31234      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31235      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31236      Name = 'Tilt';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Tilt';
31237      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31238      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31239      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31240      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 57 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

31241      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
31242      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
31243      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 57 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 57 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

31244      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
31245      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
31246      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
31246    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
31247      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
31248      Value = "NeuralNetwork";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NeuralNetwork";
31249      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
31250      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

31251      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
31252      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
31253      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 57 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 58 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.12 seconds
      cpu time            0.10 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Transform, 5";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Transform, 5 Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 19 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 19 and _n_ le 38 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 38 and _n_ le 57 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 58 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 19 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 19 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 19 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 19 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Neural6_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.34 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Neural6_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 5 observations read from the data set EMWS1.NEURAL6_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 5 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 5 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 5 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 5 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 5 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

2 OUTPUT;
3 OUTPUT;
NOTE: There were 5 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Transform, 5";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Transform, 5 Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 3 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Neural6_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Neural6" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL6_CMETA_TRAIN.
      WHERE UPCASE(creator)='Neural6';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.05 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Neural6_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from 
EMWS1.Neural6_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey21
MPRINT(EM_REPORT_NODE):   from EMWS1.Neural6_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA REPORTFITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_DATA):   data pd;
MPRINT(EM_REPORT_DATA):   set EMWS1.Neural6_EMREPORTFIT ;
MPRINT(EM_REPORT_DATA):   where train ne . ;
MPRINT(EM_REPORT_DATA):   label _NOBS_ = "Sum of Frequencies" _MISC_ = "Misclassification Rate" 
_MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Squared Error" 
_RASE_ = "Root Average Square Error" _DIV_ = "Divisor for ASE" _DFT_ = "Total Degrees of 
Freedom" _AIC_ = "Akaike's Information Criterion" _MSE_ = "Mean Squared Error" _RMSE_ = "Root 
Mean Squared Error" _AVERR_ = "Average Error Function" _DFE_ = "Degrees of Freedom for Error" 
_DFM_ = "Model Degrees of Freedom" _ERR_ = "Error Function" _FPE_ = "Final Prediction Error" 
_NW_ = "Number of Weights" _RFPE_ = "Root Final Prediction Error" _SBC_ = "Schwarz's Bayesian 
Criterion" ;
MPRINT(EM_REPORT_DATA):   drop stat ;
MPRINT(EM_REPORT_DATA):   run;

NOTE: Variable _NOBS_ is uninitialized.
NOTE: Variable _MISC_ is uninitialized.
NOTE: Variable _MAX_ is uninitialized.
NOTE: Variable _SSE_ is uninitialized.
NOTE: Variable _ASE_ is uninitialized.
NOTE: Variable _RASE_ is uninitialized.
NOTE: Variable _DIV_ is uninitialized.
NOTE: Variable _DFT_ is uninitialized.
NOTE: Variable _AIC_ is uninitialized.
NOTE: Variable _MSE_ is uninitialized.
NOTE: Variable _RMSE_ is uninitialized.
NOTE: Variable _AVERR_ is uninitialized.
NOTE: Variable _DFE_ is uninitialized.
NOTE: Variable _DFM_ is uninitialized.
NOTE: Variable _ERR_ is uninitialized.
NOTE: Variable _FPE_ is uninitialized.
NOTE: Variable _NW_ is uninitialized.
NOTE: Variable _RFPE_ is uninitialized.
NOTE: Variable _SBC_ is uninitialized.
NOTE: There were 21 observations read from the data set EMWS1.NEURAL6_EMREPORTFIT.
      WHERE train not = .;
NOTE: The data set WORK.PD has 21 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Transform, 5";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Model Fit Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Transform, 5 Model Fit Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc sort data=pd;
MPRINT(EM_REPORT_DATA):   by target targetlabel;

NOTE: There were 21 observations read from the data set WORK.PD.
NOTE: The data set WORK.PD has 21 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_DATA):   proc print data=pd noobs label contents='';
MPRINT(EM_REPORT_DATA):   label label= "Label of Statistic" ;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 21 observations read from the data set WORK.PD.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==13 : Viewtype = ITERATIONPLOT ITERATIONPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_ITERATIONPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   title2 "Node=Transform, 5";
MPRINT(EM_REPORT_ITERATIONPLOT):   title3 "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   data _null_ ;
MPRINT(EM_REPORT_ITERATIONPLOT):   set EMWS1.Neural6_PLOTDS(obs=2) end=eof;
MPRINT(EM_REPORT_ITERATIONPLOT):   if eof then do ;
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_ase_',_ase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vase_',_vase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_misc_',_misc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vmisc_',_vmisc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Numeric values have been converted to character values at the places given by: 
      (Line):(Column).
      18:139   21:125   23:123   26:124   
NOTE: There were 2 observations read from the data set EMWS1.NEURAL6_PLOTDS.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

9 24 22 35
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sql noprint;
MPRINT(EM_REPORT_ITERATIONPLOT):   select count(*) into :nonMiss_vmisc from EMWS1.Neural6_PLOTDS 
where _vmisc_ ne .;
MPRINT(EM_REPORT_ITERATIONPLOT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_ITERATIONPLOT):   proc template;
MPRINT(EM_REPORT_ITERATIONPLOT):   define statgraph em.IterationPlot / store=work.templat;
MPRINT(EM_REPORT_ITERATIONPLOT):   begingraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Node=Transform, 5";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   layout lattice / order=columnmajor rows=1 rowdatarange=data 
columngutter=10;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on 
label="Iteration") yaxisopts=(griddisplay=on label="Average Square Error");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_ASE_ / markerattrs=(size=0) 
display=all name='train' legendlabel="Train";
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_VASE_ / markerattrs=(size=0) 
display=all name='validate' legendlabel="Validate";
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=1;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on 
label="Iteration") yaxisopts=(griddisplay=on label="Misclassification Rate");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_MISC_ / markerattrs=(size=0) 
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_VMISC_ / markerattrs=(size=0) 
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=1;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   sidebar / align=bottom;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay;
MPRINT(EM_REPORT_ITERATIONPLOT):   discretelegend 'train' 'validate' / down=1 order=columnmajor;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endsidebar;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endgraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
NOTE: Overwriting existing template/link: Em.IterationPlot
NOTE: STATGRAPH 'Em.IterationPlot' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   run;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sort data=EMWS1.Neural6_PLOTDS out=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   by _ITER_;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 52 observations read from the data set EMWS1.NEURAL6_PLOTDS.
NOTE: The data set WORK._TMPRPT_ITERDAT has 52 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   proc sgrender data=_tmprpt_iterdat 
template='em.IterationPlot';
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: There were 52 observations read from the data set WORK._TMPRPT_ITERDAT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.32 seconds
      cpu time            0.14 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   title1;
MPRINT(EM_REPORT_ITERATIONPLOT):   title2;
MPRINT(EM_REPORT_ITERATIONPLOT):   title3;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc delete data=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Deleting WORK._TMPRPT_ITERDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==14 : Viewtype = HISTOGRAM WEIGHT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==15 : Viewtype = DATA HISTWEIGHT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==16 : Viewtype = LATTICE CLASSIFICATIONMANY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 11 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural6_emreport(where=(id eq 17)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==17 : Viewtype = PLOT ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS1.Neural6_EMRANK(where=(TARGET='BAD'));
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 40 observations read from the data set EMWS1.NEURAL6_EMRANK.
      WHERE TARGET='BAD';
NOTE: The data set WORK._TMP_DAT has 40 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: The data set WORK._TMP_CONTENT has 35 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call 
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 35 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by target datarole;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
NOTE: The data set WORK._TMP_EMRP has 40 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=Transform, 5";
MPRINT(EM_REPORT_EMRANK):   title3 "Model Assessment Scores where TARGET='BAD'";
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=gain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basegain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestgain;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.40 seconds
      cpu time            0.15 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=liftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=baseliftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestliftc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.48 seconds
      cpu time            0.20 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=capc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basecapc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestcapc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.38 seconds
      cpu time            0.17 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 17 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural6_emreport(where=(id eq 18)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==18 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural6_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.NEURAL6_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural6_emreport(where=(id eq 19)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==19 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SCOREDIST):   data _tmp_scoredist;
MPRINT(EM_REPORT_SCOREDIST):   set EMWS1.Neural6_EMSCOREDIST(where=(TARGET='BAD'));
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 34 observations read from the data set EMWS1.NEURAL6_EMSCOREDIST.
      WHERE TARGET='BAD';
NOTE: The data set WORK._TMP_SCOREDIST has 34 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum 
name) noprint;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: The data set WORK._TMP_CONTENT has 21 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   data _null_;
MPRINT(EM_REPORT_SCOREDIST):   set _tmp_content;
MPRINT(EM_REPORT_SCOREDIST):   name=strip(upcase(name));
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'MODELDESCRIPTION' then call symput('modeldescnum', 
put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_LOOP_' then call symput('loopnum', put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_WHERE_' then call symput('has_where', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGET_' then call symput('has_target', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMEAN_' then call symput('var_targetMean',name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMAX_' then call symput('var_targetMax', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMIN_' then call symput('var_targetMin', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat', '1');
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 21 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 34 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 34 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SCOREDIST):   title2 "Node=Transform, 5";
MPRINT(EM_REPORT_SCOREDIST):   title3 "Score Distributions where TARGET='BAD'";
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofevents / legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofnonevents / legendlabel="Non 
Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.39 seconds
      cpu time            0.09 seconds
      
NOTE: There were 34 observations read from the data set WORK._TMPDAT.

MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofevents / 
legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofnonevents / 
legendlabel="Non Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Cumulative Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.37 seconds
      cpu time            0.11 seconds
      
NOTE: There were 34 observations read from the data set WORK._TMPDAT.

MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc delete data=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: Deleting WORK._TMPDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.01 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_SCOREDIST):   title4;
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 34 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 34 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Transform, 5";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Score Distributions";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Transform, 5 Score Distributions";
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc print data=_tmpdat noobs label contents='';
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   var p_label numberofevents percentageofevents 
percentageofnonevents cumulativepercentageofevents cumulativepercentageofnonevents ;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 34 observations read from the data set WORK._TMPDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Neural5")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='NEURAL5';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

31254      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
31255      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
31255    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
31255    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
31256      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
31257      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
31258      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
31259      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
31260      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
31261      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31262      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
31263      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31264      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31265      output;
MPRINT(EM_GETTRAINPATH):   output;
31266      nodelabel="Stat";
MPRINT(EM_GETTRAINPATH):   nodelabel="Stat";
31267      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
31268      description="Statistics Exploration";
MPRINT(EM_GETTRAINPATH):   description="Statistics Exploration";
31269      component="StatExplore";
MPRINT(EM_GETTRAINPATH):   component="StatExplore";
31270      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
31271      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31272      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
31273      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31274      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31275      output;
MPRINT(EM_GETTRAINPATH):   output;
31276      nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
31277      parent="Stat";
MPRINT(EM_GETTRAINPATH):   parent="Stat";
31278      description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
31279      component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
31280      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
31281      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31282      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
31283      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31284      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31285      output;
MPRINT(EM_GETTRAINPATH):   output;
31286      nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
31287      parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
31288      description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
31289      component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
31290      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
31291      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31292      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
31293      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31294      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31295      output;
MPRINT(EM_GETTRAINPATH):   output;
31296      nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
31297      parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
31298      description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
31299      component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
31300      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
31301      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31302      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
31303      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31304      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31305      output;
MPRINT(EM_GETTRAINPATH):   output;
31306      nodelabel="BINNING";
MPRINT(EM_GETTRAINPATH):   nodelabel="BINNING";
31307      parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
31308      description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
31309      component="Binning";
MPRINT(EM_GETTRAINPATH):   component="Binning";
31310      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
31311      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31312      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
31313      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31314      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31315      output;
MPRINT(EM_GETTRAINPATH):   output;
31316      nodelabel="Varsel";
MPRINT(EM_GETTRAINPATH):   nodelabel="Varsel";
31317      parent="BINNING";
MPRINT(EM_GETTRAINPATH):   parent="BINNING";
31318      description="Variable selection  Class";
MPRINT(EM_GETTRAINPATH):   description="Variable selection  Class";
31319      component="VariableSelection";
MPRINT(EM_GETTRAINPATH):   component="VariableSelection";
31320      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
31321      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31322      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
31323      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31324      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31325      output;
MPRINT(EM_GETTRAINPATH):   output;
31326      nodelabel="Neural5";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural5";
31327      parent="Varsel";
MPRINT(EM_GETTRAINPATH):   parent="Varsel";
31328      description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
31329      component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
31330      tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
31331      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31332      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
31333      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31334      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31335      output;
MPRINT(EM_GETTRAINPATH):   output;
31336      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 8 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Neural5"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Transform, 3";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Neural5";
MPRINT(EM_REPORT_NODE):   put "Node label = Transform, 3";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Stat => Part => Impt => Trans => BINNING => 
Varsel => Neural5";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x "J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Neural5\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

31337      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
31338      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
31339      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
31339    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
31339    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
31340      Name = 'UseEstimates';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseEstimates';
31341      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
31342      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31343      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31344      Name = 'NetworkArchitecture';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NetworkArchitecture';
31345      Value = "%nrbquote(MLP)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "MLP";
31346      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31347      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31348      Name = 'DirectConnection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DirectConnection';
31349      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
31350      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31351      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31352      Name = 'Hidden';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Hidden';
31353      Value = "%nrbquote(3)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "3";
31354      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31355      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31356      Name = 'Prelim';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Prelim';
31357      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31358      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31359      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31360      Name = 'PreliminaryRuns';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PreliminaryRuns';
31361      Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
31362      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31363      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31364      Name = 'PrelimMaxiter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimMaxiter';
31365      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
31366      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31367      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31368      Name = 'PrelimMaxTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimMaxTime';
31369      Value = "%nrbquote(1 HOUR)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1 HOUR";
31370      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31371      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31372      Name = 'Maxiter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxiter';
31373      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
31374      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31375      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31376      Name = 'Maxtime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxtime';
31377      Value = "%nrbquote(4 HOURS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4 HOURS";
31378      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31379      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31380      Name = 'TrainingTechnique';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainingTechnique';
31381      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31382      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31383      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31384      Name = 'ConvDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ConvDefaults';
31385      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31386      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31387      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31388      Name = 'AbsConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsConvValue';
31389      Value = "%nrbquote(-1.34078E154)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "-1.34078E154";
31390      Default = "%nrbquote(-7.237006E75)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "-7.237006E75";
31391      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31392      Name = 'AbsFValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFValue';
31393      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31394      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31395      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31396      Name = 'AbsFTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFTime';
31397      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31398      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31399      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31400      Name = 'AbsGValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGValue';
31401      Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
31402      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31403      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31404      Name = 'AbsGTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGTime';
31405      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31406      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31407      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31408      Name = 'AbsXValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXValue';
31409      Value = "%nrbquote(1E-8)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-8";
31410      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31411      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31412      Name = 'AbsXTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXTime';
31413      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31414      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31415      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31416      Name = 'FConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvValue';
31417      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31418      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31419      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31420      Name = 'FConvTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvTime';
31421      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31422      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31423      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31424      Name = 'GConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvValue';
31425      Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
31426      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31427      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31428      Name = 'GConvTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvTime';
31429      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31430      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31431      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31432      Name = 'ModelSelectionCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelSelectionCriterion';
31433      Value = "%nrbquote(PROFIT/LOSS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROFIT/LOSS";
31434      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31435      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31436      Name = 'SuppressOutput';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SuppressOutput';
31437      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
31438      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31439      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31440      Name = 'Residuals';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Residuals';
31441      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31442      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31443      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31444      Name = 'Standardizations';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Standardizations';
31445      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
31446      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31447      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31448      Name = 'HiddenUnits';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenUnits';
31449      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
31450      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31451      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31452      Name = 'TrainCode';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainCode';
31453      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31454      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31455      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31456      Name = 'PrelimOutest';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimOutest';
31457      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31458      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31459      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31460      Name = 'Outest';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Outest';
31461      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31462      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31463      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31464      Name = 'Outfit';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Outfit';
31465      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31466      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31467      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31468      Name = 'InitialDs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InitialDs';
31469      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31470      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31471      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31472      Name = 'CodefileRes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CodefileRes';
31473      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31474      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31475      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31476      Name = 'CodefileNoRes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CodefileNoRes';
31477      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31478      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31479      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31480      Name = 'AddHidden';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AddHidden';
31481      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31482      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31483      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31484      Name = 'HiddenCombFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenCombFunction';
31485      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31486      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31487      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31488      Name = 'HiddenActivation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenActivation';
31489      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31490      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31491      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31492      Name = 'HiddenBias';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenBias';
31493      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31494      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31495      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31496      Name = 'TargetCombFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetCombFunction';
31497      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31498      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31499      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31500      Name = 'TargetActivation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetActivation';
31501      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31502      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31503      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31504      Name = 'TargetError';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetError';
31505      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31506      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31507      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31508      Name = 'TargetBias';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetBias';
31509      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31510      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31511      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31512      Name = 'InitialSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InitialSeed';
31513      Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
31514      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31515      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31516      Name = 'RandDist';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandDist';
31517      Value = "%nrbquote(NORMAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NORMAL";
31518      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31519      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31520      Name = 'RandScale';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandScale';
31521      Value = "%nrbquote(0.1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.1";
31522      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31523      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31524      Name = 'RandLoc';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandLoc';
31525      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31526      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31527      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31528      Name = 'InputStandardization';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InputStandardization';
31529      Value = "%nrbquote(STD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STD";
31530      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31531      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31532      Name = 'WeightDecay';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'WeightDecay';
31533      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31534      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31535      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31536      Name = 'Accelerate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Accelerate';
31537      Value = "%nrbquote(1.2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1.2";
31538      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31539      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31540      Name = 'Decelerate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Decelerate';
31541      Value = "%nrbquote(0.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.5";
31542      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31543      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31544      Name = 'Learn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Learn';
31545      Value = "%nrbquote(0.1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.1";
31546      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31547      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31548      Name = 'MaxLearn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxLearn';
31549      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
31550      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31551      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31552      Name = 'MinLearn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinLearn';
31553      Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
31554      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31555      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31556      Name = 'Momentum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Momentum';
31557      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31558      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31559      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31560      Name = 'MaxMomentum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxMomentum';
31561      Value = "%nrbquote(1.75)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1.75";
31562      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31563      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31564      Name = 'Tilt';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Tilt';
31565      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31566      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31567      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31568      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 57 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

31569      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
31570      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
31571      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 57 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 57 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

31572      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
31573      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
31574      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
31574    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
31575      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
31576      Value = "NeuralNetwork";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NeuralNetwork";
31577      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
31578      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

31579      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
31580      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
31581      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 57 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 58 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.10 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Transform, 3";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Transform, 3 Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 19 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 19 and _n_ le 38 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 38 and _n_ le 57 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 58 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 19 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 19 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 19 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 19 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Neural5_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Neural5_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 5 observations read from the data set EMWS1.NEURAL5_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 5 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 5 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 5 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 5 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 5 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

2 OUTPUT;
3 OUTPUT;
NOTE: There were 5 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Transform, 3";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Transform, 3 Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 3 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Neural5_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Neural5" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL5_CMETA_TRAIN.
      WHERE UPCASE(creator)='Neural5';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Neural5_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from 
EMWS1.Neural5_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey21
MPRINT(EM_REPORT_NODE):   from EMWS1.Neural5_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA REPORTFITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_DATA):   data pd;
MPRINT(EM_REPORT_DATA):   set EMWS1.Neural5_EMREPORTFIT ;
MPRINT(EM_REPORT_DATA):   where train ne . ;
MPRINT(EM_REPORT_DATA):   label _NOBS_ = "Sum of Frequencies" _MISC_ = "Misclassification Rate" 
_MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Squared Error" 
_RASE_ = "Root Average Square Error" _DIV_ = "Divisor for ASE" _DFT_ = "Total Degrees of 
Freedom" _AIC_ = "Akaike's Information Criterion" _MSE_ = "Mean Squared Error" _RMSE_ = "Root 
Mean Squared Error" _AVERR_ = "Average Error Function" _DFE_ = "Degrees of Freedom for Error" 
_DFM_ = "Model Degrees of Freedom" _ERR_ = "Error Function" _FPE_ = "Final Prediction Error" 
_NW_ = "Number of Weights" _RFPE_ = "Root Final Prediction Error" _SBC_ = "Schwarz's Bayesian 
Criterion" ;
MPRINT(EM_REPORT_DATA):   drop stat ;
MPRINT(EM_REPORT_DATA):   run;

NOTE: Variable _NOBS_ is uninitialized.
NOTE: Variable _MISC_ is uninitialized.
NOTE: Variable _MAX_ is uninitialized.
NOTE: Variable _SSE_ is uninitialized.
NOTE: Variable _ASE_ is uninitialized.
NOTE: Variable _RASE_ is uninitialized.
NOTE: Variable _DIV_ is uninitialized.
NOTE: Variable _DFT_ is uninitialized.
NOTE: Variable _AIC_ is uninitialized.
NOTE: Variable _MSE_ is uninitialized.
NOTE: Variable _RMSE_ is uninitialized.
NOTE: Variable _AVERR_ is uninitialized.
NOTE: Variable _DFE_ is uninitialized.
NOTE: Variable _DFM_ is uninitialized.
NOTE: Variable _ERR_ is uninitialized.
NOTE: Variable _FPE_ is uninitialized.
NOTE: Variable _NW_ is uninitialized.
NOTE: Variable _RFPE_ is uninitialized.
NOTE: Variable _SBC_ is uninitialized.
NOTE: There were 21 observations read from the data set EMWS1.NEURAL5_EMREPORTFIT.
      WHERE train not = .;
NOTE: The data set WORK.PD has 21 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.07 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Transform, 3";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Model Fit Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Transform, 3 Model Fit Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc sort data=pd;
MPRINT(EM_REPORT_DATA):   by target targetlabel;

NOTE: There were 21 observations read from the data set WORK.PD.
NOTE: The data set WORK.PD has 21 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_DATA):   proc print data=pd noobs label contents='';
MPRINT(EM_REPORT_DATA):   label label= "Label of Statistic" ;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 21 observations read from the data set WORK.PD.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==13 : Viewtype = ITERATIONPLOT ITERATIONPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_ITERATIONPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   title2 "Node=Transform, 3";
MPRINT(EM_REPORT_ITERATIONPLOT):   title3 "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   data _null_ ;
MPRINT(EM_REPORT_ITERATIONPLOT):   set EMWS1.Neural5_PLOTDS(obs=2) end=eof;
MPRINT(EM_REPORT_ITERATIONPLOT):   if eof then do ;
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_ase_',_ase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vase_',_vase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_misc_',_misc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vmisc_',_vmisc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Numeric values have been converted to character values at the places given by: 
      (Line):(Column).
      18:139   21:125   23:123   26:124   
NOTE: There were 2 observations read from the data set EMWS1.NEURAL5_PLOTDS.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

9 24 22 35
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sql noprint;
MPRINT(EM_REPORT_ITERATIONPLOT):   select count(*) into :nonMiss_vmisc from EMWS1.Neural5_PLOTDS 
where _vmisc_ ne .;
MPRINT(EM_REPORT_ITERATIONPLOT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_ITERATIONPLOT):   proc template;
MPRINT(EM_REPORT_ITERATIONPLOT):   define statgraph em.IterationPlot / store=work.templat;
MPRINT(EM_REPORT_ITERATIONPLOT):   begingraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Node=Transform, 3";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   layout lattice / order=columnmajor rows=1 rowdatarange=data 
columngutter=10;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on 
label="Iteration") yaxisopts=(griddisplay=on label="Average Square Error");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_ASE_ / markerattrs=(size=0) 
display=all name='train' legendlabel="Train";
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_VASE_ / markerattrs=(size=0) 
display=all name='validate' legendlabel="Validate";
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=3;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on 
label="Iteration") yaxisopts=(griddisplay=on label="Misclassification Rate");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_MISC_ / markerattrs=(size=0) 
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_VMISC_ / markerattrs=(size=0) 
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=3;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   sidebar / align=bottom;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay;
MPRINT(EM_REPORT_ITERATIONPLOT):   discretelegend 'train' 'validate' / down=1 order=columnmajor;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endsidebar;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endgraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
NOTE: Overwriting existing template/link: Em.IterationPlot
NOTE: STATGRAPH 'Em.IterationPlot' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   run;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sort data=EMWS1.Neural5_PLOTDS out=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   by _ITER_;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 15 observations read from the data set EMWS1.NEURAL5_PLOTDS.
NOTE: The data set WORK._TMPRPT_ITERDAT has 15 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   proc sgrender data=_tmprpt_iterdat 
template='em.IterationPlot';
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: There were 15 observations read from the data set WORK._TMPRPT_ITERDAT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.28 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   title1;
MPRINT(EM_REPORT_ITERATIONPLOT):   title2;
MPRINT(EM_REPORT_ITERATIONPLOT):   title3;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc delete data=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Deleting WORK._TMPRPT_ITERDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==14 : Viewtype = HISTOGRAM WEIGHT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==15 : Viewtype = DATA HISTWEIGHT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==16 : Viewtype = LATTICE CLASSIFICATIONMANY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 11 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural5_emreport(where=(id eq 17)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==17 : Viewtype = PLOT ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS1.Neural5_EMRANK(where=(TARGET='BAD'));
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 40 observations read from the data set EMWS1.NEURAL5_EMRANK.
      WHERE TARGET='BAD';
NOTE: The data set WORK._TMP_DAT has 40 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: The data set WORK._TMP_CONTENT has 35 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call 
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 35 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by target datarole;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
NOTE: The data set WORK._TMP_EMRP has 40 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=Transform, 3";
MPRINT(EM_REPORT_EMRANK):   title3 "Model Assessment Scores where TARGET='BAD'";
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=gain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basegain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestgain;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.50 seconds
      cpu time            0.12 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=liftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=baseliftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestliftc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.38 seconds
      cpu time            0.18 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=capc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basecapc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestcapc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.37 seconds
      cpu time            0.17 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 17 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural5_emreport(where=(id eq 18)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==18 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural5_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.NEURAL5_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural5_emreport(where=(id eq 19)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==19 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SCOREDIST):   data _tmp_scoredist;
MPRINT(EM_REPORT_SCOREDIST):   set EMWS1.Neural5_EMSCOREDIST(where=(TARGET='BAD'));
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 32 observations read from the data set EMWS1.NEURAL5_EMSCOREDIST.
      WHERE TARGET='BAD';
NOTE: The data set WORK._TMP_SCOREDIST has 32 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum 
name) noprint;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: The data set WORK._TMP_CONTENT has 21 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   data _null_;
MPRINT(EM_REPORT_SCOREDIST):   set _tmp_content;
MPRINT(EM_REPORT_SCOREDIST):   name=strip(upcase(name));
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'MODELDESCRIPTION' then call symput('modeldescnum', 
put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_LOOP_' then call symput('loopnum', put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_WHERE_' then call symput('has_where', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGET_' then call symput('has_target', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMEAN_' then call symput('var_targetMean',name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMAX_' then call symput('var_targetMax', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMIN_' then call symput('var_targetMin', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat', '1');
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 21 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 32 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 32 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SCOREDIST):   title2 "Node=Transform, 3";
MPRINT(EM_REPORT_SCOREDIST):   title3 "Score Distributions where TARGET='BAD'";
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofevents / legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofnonevents / legendlabel="Non 
Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.37 seconds
      cpu time            0.14 seconds
      
NOTE: There were 32 observations read from the data set WORK._TMPDAT.

MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofevents / 
legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofnonevents / 
legendlabel="Non Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Cumulative Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.35 seconds
      cpu time            0.17 seconds
      
NOTE: There were 32 observations read from the data set WORK._TMPDAT.

MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc delete data=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: Deleting WORK._TMPDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_SCOREDIST):   title4;
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 32 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 32 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Transform, 3";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Score Distributions";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Transform, 3 Score Distributions";
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc print data=_tmpdat noobs label contents='';
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   var p_label numberofevents percentageofevents 
percentageofnonevents cumulativepercentageofevents cumulativepercentageofnonevents ;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 32 observations read from the data set WORK._TMPDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.02 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("Neural4")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='NEURAL4';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

31582      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
31583      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
31583    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
31583    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
31584      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
31585      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
31586      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
31587      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
31588      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
31589      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31590      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
31591      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31592      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31593      output;
MPRINT(EM_GETTRAINPATH):   output;
31594      nodelabel="Stat";
MPRINT(EM_GETTRAINPATH):   nodelabel="Stat";
31595      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
31596      description="Statistics Exploration";
MPRINT(EM_GETTRAINPATH):   description="Statistics Exploration";
31597      component="StatExplore";
MPRINT(EM_GETTRAINPATH):   component="StatExplore";
31598      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
31599      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31600      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
31601      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31602      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31603      output;
MPRINT(EM_GETTRAINPATH):   output;
31604      nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
31605      parent="Stat";
MPRINT(EM_GETTRAINPATH):   parent="Stat";
31606      description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
31607      component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
31608      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
31609      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31610      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
31611      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31612      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31613      output;
MPRINT(EM_GETTRAINPATH):   output;
31614      nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
31615      parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
31616      description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
31617      component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
31618      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
31619      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31620      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
31621      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31622      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31623      output;
MPRINT(EM_GETTRAINPATH):   output;
31624      nodelabel="Trans";
MPRINT(EM_GETTRAINPATH):   nodelabel="Trans";
31625      parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
31626      description="Transform";
MPRINT(EM_GETTRAINPATH):   description="Transform";
31627      component="Transform";
MPRINT(EM_GETTRAINPATH):   component="Transform";
31628      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
31629      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31630      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
31631      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31632      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31633      output;
MPRINT(EM_GETTRAINPATH):   output;
31634      nodelabel="BINNING";
MPRINT(EM_GETTRAINPATH):   nodelabel="BINNING";
31635      parent="Trans";
MPRINT(EM_GETTRAINPATH):   parent="Trans";
31636      description="Extension Class";
MPRINT(EM_GETTRAINPATH):   description="Extension Class";
31637      component="Binning";
MPRINT(EM_GETTRAINPATH):   component="Binning";
31638      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
31639      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31640      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
31641      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31642      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31643      output;
MPRINT(EM_GETTRAINPATH):   output;
31644      nodelabel="Varsel";
MPRINT(EM_GETTRAINPATH):   nodelabel="Varsel";
31645      parent="BINNING";
MPRINT(EM_GETTRAINPATH):   parent="BINNING";
31646      description="Variable selection  Class";
MPRINT(EM_GETTRAINPATH):   description="Variable selection  Class";
31647      component="VariableSelection";
MPRINT(EM_GETTRAINPATH):   component="VariableSelection";
31648      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
31649      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31650      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
31651      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31652      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31653      output;
MPRINT(EM_GETTRAINPATH):   output;
31654      nodelabel="Neural4";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural4";
31655      parent="Varsel";
MPRINT(EM_GETTRAINPATH):   parent="Varsel";
31656      description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
31657      component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
31658      tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
31659      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31660      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
31661      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31662      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31663      output;
MPRINT(EM_GETTRAINPATH):   output;
31664      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 8 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 8 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("Neural4"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Transform, 1";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = Neural4";
MPRINT(EM_REPORT_NODE):   put "Node label = Transform, 1";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Stat => Part => Impt => Trans => BINNING => 
Varsel => Neural4";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   filename x "J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\Neural4\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

31665      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
31666      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
31667      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
31667    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
31667    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
31668      Name = 'UseEstimates';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'UseEstimates';
31669      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
31670      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31671      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31672      Name = 'NetworkArchitecture';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NetworkArchitecture';
31673      Value = "%nrbquote(MLP)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "MLP";
31674      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31675      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31676      Name = 'DirectConnection';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DirectConnection';
31677      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
31678      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31679      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31680      Name = 'Hidden';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Hidden';
31681      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31682      Default = "%nrbquote(3)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "3";
31683      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31684      Name = 'Prelim';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Prelim';
31685      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31686      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31687      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31688      Name = 'PreliminaryRuns';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PreliminaryRuns';
31689      Value = "%nrbquote(5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "5";
31690      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31691      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31692      Name = 'PrelimMaxiter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimMaxiter';
31693      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
31694      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31695      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31696      Name = 'PrelimMaxTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimMaxTime';
31697      Value = "%nrbquote(1 HOUR)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1 HOUR";
31698      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31699      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31700      Name = 'Maxiter';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxiter';
31701      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
31702      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31703      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31704      Name = 'Maxtime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Maxtime';
31705      Value = "%nrbquote(4 HOURS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "4 HOURS";
31706      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31707      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31708      Name = 'TrainingTechnique';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainingTechnique';
31709      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31710      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31711      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31712      Name = 'ConvDefaults';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ConvDefaults';
31713      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31714      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31715      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31716      Name = 'AbsConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsConvValue';
31717      Value = "%nrbquote(-1.34078E154)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "-1.34078E154";
31718      Default = "%nrbquote(-7.237006E75)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "-7.237006E75";
31719      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31720      Name = 'AbsFValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFValue';
31721      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31722      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31723      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31724      Name = 'AbsFTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsFTime';
31725      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31726      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31727      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31728      Name = 'AbsGValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGValue';
31729      Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
31730      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31731      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31732      Name = 'AbsGTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsGTime';
31733      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31734      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31735      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31736      Name = 'AbsXValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXValue';
31737      Value = "%nrbquote(1E-8)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-8";
31738      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31739      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31740      Name = 'AbsXTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AbsXTime';
31741      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31742      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31743      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31744      Name = 'FConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvValue';
31745      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31746      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31747      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31748      Name = 'FConvTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'FConvTime';
31749      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31750      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31751      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31752      Name = 'GConvValue';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvValue';
31753      Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
31754      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31755      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31756      Name = 'GConvTime';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'GConvTime';
31757      Value = "%nrbquote(1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1";
31758      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31759      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31760      Name = 'ModelSelectionCriterion';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelSelectionCriterion';
31761      Value = "%nrbquote(PROFIT/LOSS)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "PROFIT/LOSS";
31762      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31763      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31764      Name = 'SuppressOutput';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SuppressOutput';
31765      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
31766      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31767      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31768      Name = 'Residuals';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Residuals';
31769      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31770      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31771      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31772      Name = 'Standardizations';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Standardizations';
31773      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
31774      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31775      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31776      Name = 'HiddenUnits';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenUnits';
31777      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
31778      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31779      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31780      Name = 'TrainCode';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TrainCode';
31781      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31782      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31783      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31784      Name = 'PrelimOutest';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'PrelimOutest';
31785      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31786      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31787      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31788      Name = 'Outest';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Outest';
31789      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31790      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31791      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31792      Name = 'Outfit';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Outfit';
31793      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31794      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31795      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31796      Name = 'InitialDs';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InitialDs';
31797      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31798      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31799      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31800      Name = 'CodefileRes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CodefileRes';
31801      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31802      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31803      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31804      Name = 'CodefileNoRes';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'CodefileNoRes';
31805      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
31806      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31807      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31808      Name = 'AddHidden';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AddHidden';
31809      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31810      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31811      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31812      Name = 'HiddenCombFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenCombFunction';
31813      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31814      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31815      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31816      Name = 'HiddenActivation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenActivation';
31817      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31818      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31819      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31820      Name = 'HiddenBias';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HiddenBias';
31821      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31822      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31823      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31824      Name = 'TargetCombFunction';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetCombFunction';
31825      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31826      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31827      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31828      Name = 'TargetActivation';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetActivation';
31829      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31830      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31831      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31832      Name = 'TargetError';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetError';
31833      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
31834      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31835      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31836      Name = 'TargetBias';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetBias';
31837      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31838      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31839      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31840      Name = 'InitialSeed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InitialSeed';
31841      Value = "%nrbquote(12345)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "12345";
31842      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31843      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31844      Name = 'RandDist';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandDist';
31845      Value = "%nrbquote(NORMAL)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NORMAL";
31846      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31847      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31848      Name = 'RandScale';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandScale';
31849      Value = "%nrbquote(0.1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.1";
31850      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31851      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31852      Name = 'RandLoc';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RandLoc';
31853      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31854      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31855      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31856      Name = 'InputStandardization';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'InputStandardization';
31857      Value = "%nrbquote(STD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "STD";
31858      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31859      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31860      Name = 'WeightDecay';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'WeightDecay';
31861      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31862      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31863      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31864      Name = 'Accelerate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Accelerate';
31865      Value = "%nrbquote(1.2)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1.2";
31866      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31867      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31868      Name = 'Decelerate';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Decelerate';
31869      Value = "%nrbquote(0.5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.5";
31870      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31871      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31872      Name = 'Learn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Learn';
31873      Value = "%nrbquote(0.1)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.1";
31874      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31875      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31876      Name = 'MaxLearn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxLearn';
31877      Value = "%nrbquote(50)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "50";
31878      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31879      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31880      Name = 'MinLearn';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MinLearn';
31881      Value = "%nrbquote(0.00001)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.00001";
31882      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31883      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31884      Name = 'Momentum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Momentum';
31885      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31886      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31887      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31888      Name = 'MaxMomentum';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'MaxMomentum';
31889      Value = "%nrbquote(1.75)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1.75";
31890      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31891      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31892      Name = 'Tilt';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Tilt';
31893      Value = "%nrbquote(0)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0";
31894      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31895      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31896      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 57 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

31897      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
31898      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
31899      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 57 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 57 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

31900      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
31901      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
31902      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
31902    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
31903      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
31904      Value = "NeuralNetwork";
MPRINT(EM_REPORT_PROPERTIES):   Value = "NeuralNetwork";
31905      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
31906      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

31907      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
31908      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
31909      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 57 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 58 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.11 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Transform, 1";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Transform, 1 Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 19 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 19 and _n_ le 38 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 38 and _n_ le 57 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-19*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 58 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 19 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 19 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 19 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.06 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 19 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 19 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 19 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 19 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.Neural4_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.Neural4_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 5 observations read from the data set EMWS1.NEURAL4_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 5 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 5 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 5 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 5 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 5 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

2 OUTPUT;
3 OUTPUT;
NOTE: There were 5 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 3 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Transform, 1";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Transform, 1 Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 3 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.Neural4_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "Neural4" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL4_CMETA_TRAIN.
      WHERE UPCASE(creator)='Neural4';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.Neural4_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from 
EMWS1.Neural4_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey21
MPRINT(EM_REPORT_NODE):   from EMWS1.Neural4_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA REPORTFITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_DATA):   data pd;
MPRINT(EM_REPORT_DATA):   set EMWS1.Neural4_EMREPORTFIT ;
MPRINT(EM_REPORT_DATA):   where train ne . ;
MPRINT(EM_REPORT_DATA):   label _NOBS_ = "Sum of Frequencies" _MISC_ = "Misclassification Rate" 
_MAX_ = "Maximum Absolute Error" _SSE_ = "Sum of Square Errors" _ASE_ = "Average Squared Error" 
_RASE_ = "Root Average Square Error" _DIV_ = "Divisor for ASE" _DFT_ = "Total Degrees of 
Freedom" _AIC_ = "Akaike's Information Criterion" _MSE_ = "Mean Squared Error" _RMSE_ = "Root 
Mean Squared Error" _AVERR_ = "Average Error Function" _DFE_ = "Degrees of Freedom for Error" 
_DFM_ = "Model Degrees of Freedom" _ERR_ = "Error Function" _FPE_ = "Final Prediction Error" 
_NW_ = "Number of Weights" _RFPE_ = "Root Final Prediction Error" _SBC_ = "Schwarz's Bayesian 
Criterion" ;
MPRINT(EM_REPORT_DATA):   drop stat ;
MPRINT(EM_REPORT_DATA):   run;

NOTE: Variable _NOBS_ is uninitialized.
NOTE: Variable _MISC_ is uninitialized.
NOTE: Variable _MAX_ is uninitialized.
NOTE: Variable _SSE_ is uninitialized.
NOTE: Variable _ASE_ is uninitialized.
NOTE: Variable _RASE_ is uninitialized.
NOTE: Variable _DIV_ is uninitialized.
NOTE: Variable _DFT_ is uninitialized.
NOTE: Variable _AIC_ is uninitialized.
NOTE: Variable _MSE_ is uninitialized.
NOTE: Variable _RMSE_ is uninitialized.
NOTE: Variable _AVERR_ is uninitialized.
NOTE: Variable _DFE_ is uninitialized.
NOTE: Variable _DFM_ is uninitialized.
NOTE: Variable _ERR_ is uninitialized.
NOTE: Variable _FPE_ is uninitialized.
NOTE: Variable _NW_ is uninitialized.
NOTE: Variable _RFPE_ is uninitialized.
NOTE: Variable _SBC_ is uninitialized.
NOTE: There were 21 observations read from the data set EMWS1.NEURAL4_EMREPORTFIT.
      WHERE train not = .;
NOTE: The data set WORK.PD has 21 observations and 6 variables.
NOTE: DATA statement used (Total process time):
      real time           0.09 seconds
      cpu time            0.07 seconds
      

MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Transform, 1";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Model Fit Statistics";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Transform, 1 Model Fit Statistics";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc sort data=pd;
MPRINT(EM_REPORT_DATA):   by target targetlabel;

NOTE: There were 21 observations read from the data set WORK.PD.
NOTE: The data set WORK.PD has 21 observations and 6 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_DATA):   proc print data=pd noobs label contents='';
MPRINT(EM_REPORT_DATA):   label label= "Label of Statistic" ;
MPRINT(EM_REPORT_DATA):   by target targetlabel;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 21 observations read from the data set WORK.PD.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==13 : Viewtype = ITERATIONPLOT ITERATIONPLOT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_ITERATIONPLOT):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   title2 "Node=Transform, 1";
MPRINT(EM_REPORT_ITERATIONPLOT):   title3 "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   data _null_ ;
MPRINT(EM_REPORT_ITERATIONPLOT):   set EMWS1.Neural4_PLOTDS(obs=2) end=eof;
MPRINT(EM_REPORT_ITERATIONPLOT):   if eof then do ;
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_ase_',_ase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vase_',_vase_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_misc_',_misc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   call symput('_vmisc_',_vmisc_);
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Numeric values have been converted to character values at the places given by: 
      (Line):(Column).
      18:139   21:125   23:123   26:124   
NOTE: There were 2 observations read from the data set EMWS1.NEURAL4_PLOTDS.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

9 24 22 35
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sql noprint;
MPRINT(EM_REPORT_ITERATIONPLOT):   select count(*) into :nonMiss_vmisc from EMWS1.Neural4_PLOTDS 
where _vmisc_ ne .;
MPRINT(EM_REPORT_ITERATIONPLOT):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   ods path(prepend) work.templat(update);
MPRINT(EM_REPORT_ITERATIONPLOT):   proc template;
MPRINT(EM_REPORT_ITERATIONPLOT):   define statgraph em.IterationPlot / store=work.templat;
MPRINT(EM_REPORT_ITERATIONPLOT):   begingraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Node=Transform, 1";
MPRINT(EM_REPORT_ITERATIONPLOT):   entrytitle "Model Iteration Plots";
MPRINT(EM_REPORT_ITERATIONPLOT):   layout lattice / order=columnmajor rows=1 rowdatarange=data 
columngutter=10;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on 
label="Iteration") yaxisopts=(griddisplay=on label="Average Square Error");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_ASE_ / markerattrs=(size=0) 
display=all name='train' legendlabel="Train";
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_VASE_ / markerattrs=(size=0) 
display=all name='validate' legendlabel="Validate";
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=1;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay / cycleattrs=true xaxisopts=(griddisplay=on 
label="Iteration") yaxisopts=(griddisplay=on label="Misclassification Rate");
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_MISC_ / markerattrs=(size=0) 
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   seriesplot x=_ITER_ y=_VMISC_ / markerattrs=(size=0) 
display=all;
MPRINT(EM_REPORT_ITERATIONPLOT):   referenceline x=1;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   sidebar / align=bottom;
MPRINT(EM_REPORT_ITERATIONPLOT):   layout overlay;
MPRINT(EM_REPORT_ITERATIONPLOT):   discretelegend 'train' 'validate' / down=1 order=columnmajor;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endsidebar;
MPRINT(EM_REPORT_ITERATIONPLOT):   endlayout;
MPRINT(EM_REPORT_ITERATIONPLOT):   endgraph;
MPRINT(EM_REPORT_ITERATIONPLOT):   end;
NOTE: Overwriting existing template/link: Em.IterationPlot
NOTE: STATGRAPH 'Em.IterationPlot' has been saved to: WORK.TEMPLAT
NOTE: PROCEDURE TEMPLATE used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   run;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc sort data=EMWS1.Neural4_PLOTDS out=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   by _ITER_;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Input data set is already sorted; it has been copied to the output data set.
NOTE: There were 16 observations read from the data set EMWS1.NEURAL4_PLOTDS.
NOTE: The data set WORK._TMPRPT_ITERDAT has 16 observations and 36 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   proc sgrender data=_tmprpt_iterdat 
template='em.IterationPlot';
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: There were 16 observations read from the data set WORK._TMPRPT_ITERDAT.
NOTE: PROCEDURE SGRENDER used (Total process time):
      real time           0.28 seconds
      cpu time            0.12 seconds
      

MPRINT(EM_REPORT_ITERATIONPLOT):   title1;
MPRINT(EM_REPORT_ITERATIONPLOT):   title2;
MPRINT(EM_REPORT_ITERATIONPLOT):   title3;
MPRINT(EM_REPORT_ITERATIONPLOT):   proc delete data=_tmprpt_iterdat;
MPRINT(EM_REPORT_ITERATIONPLOT):   run;

NOTE: Deleting WORK._TMPRPT_ITERDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 9 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==14 : Viewtype = HISTOGRAM WEIGHT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

==15 : Viewtype = DATA HISTWEIGHT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

==16 : Viewtype = LATTICE CLASSIFICATIONMANY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 11 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural4_emreport(where=(id eq 17)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==17 : Viewtype = PLOT ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS1.Neural4_EMRANK(where=(TARGET='BAD'));
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 40 observations read from the data set EMWS1.NEURAL4_EMRANK.
      WHERE TARGET='BAD';
NOTE: The data set WORK._TMP_DAT has 40 observations and 35 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: The data set WORK._TMP_CONTENT has 35 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call 
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 35 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by target datarole;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 40 observations read from the data set WORK._TMP_DAT.
NOTE: The data set WORK._TMP_EMRP has 40 observations and 35 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=Transform, 1";
MPRINT(EM_REPORT_EMRANK):   title3 "Model Assessment Scores where TARGET='BAD'";
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=gain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basegain;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestgain;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.38 seconds
      cpu time            0.15 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=liftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=baseliftc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestliftc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.39 seconds
      cpu time            0.10 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   proc sgpanel data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   panelby datarole;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=capc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=basecapc;
MPRINT(EM_REPORT_EMRANK):   series x=decile y=bestcapc;
MPRINT(EM_REPORT_EMRANK):   rowaxis grid;
MPRINT(EM_REPORT_EMRANK):   colaxis grid;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.34 seconds
      cpu time            0.09 seconds
      
NOTE: There were 40 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 17 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural4_emreport(where=(id eq 18)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.02 seconds
      cpu time            0.01 seconds
      

==18 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.Neural4_emreport(where=(id eq 19));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.NEURAL4_EMREPORT.
      WHERE id=19;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.Neural4_emreport(where=(id eq 19)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==19 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_SCOREDIST):   data _tmp_scoredist;
MPRINT(EM_REPORT_SCOREDIST):   set EMWS1.Neural4_EMSCOREDIST(where=(TARGET='BAD'));
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 20 observations read from the data set EMWS1.NEURAL4_EMSCOREDIST.
      WHERE TARGET='BAD';
NOTE: The data set WORK._TMP_SCOREDIST has 20 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   proc contents data=_tmp_scoredist out=_tmp_content(keep=varnum 
name) noprint;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: The data set WORK._TMP_CONTENT has 21 observations and 2 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   data _null_;
MPRINT(EM_REPORT_SCOREDIST):   set _tmp_content;
MPRINT(EM_REPORT_SCOREDIST):   name=strip(upcase(name));
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'MODELDESCRIPTION' then call symput('modeldescnum', 
put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_LOOP_' then call symput('loopnum', put(varnum,6.));
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_WHERE_' then call symput('has_where', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGET_' then call symput('has_target', '1');
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMEAN_' then call symput('var_targetMean',name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMAX_' then call symput('var_targetMax', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq '_TARGETMIN_' then call symput('var_targetMin', name);
MPRINT(EM_REPORT_SCOREDIST):   if name eq 'PERCENTAGEOFEVENTS' then call symput('is_cat', '1');
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 21 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 20 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_SCOREDIST):   title2 "Node=Transform, 1";
MPRINT(EM_REPORT_SCOREDIST):   title3 "Score Distributions where TARGET='BAD'";
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofevents / legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=percentageofnonevents / legendlabel="Non 
Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.35 seconds
      cpu time            0.17 seconds
      
NOTE: There were 20 observations read from the data set WORK._TMPDAT.

MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SG4SCOREDIST):   proc sgpanel data=_tmpdat;
MPRINT(EM_REPORT_SG4SCOREDIST):   panelby datarole;
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofevents / 
legendlabel="Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   series x=score y=cumulativepercentageofnonevents / 
legendlabel="Non Events";
MPRINT(EM_REPORT_SG4SCOREDIST):   rowaxis grid label="Cumulative Percentage";
MPRINT(EM_REPORT_SG4SCOREDIST):   colaxis grid;
MPRINT(EM_REPORT_SG4SCOREDIST):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.44 seconds
      cpu time            0.23 seconds
      
NOTE: There were 20 observations read from the data set WORK._TMPDAT.

MPRINT(EM_REPORT_SG4SCOREDIST):   quit;
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc delete data=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: Deleting WORK._TMPDAT (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_SCOREDIST):   title4;
MPRINT(EM_REPORT_SCOREDIST):   proc sort data=_tmp_scoredist out=_tmpdat;
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 20 observations read from the data set WORK._TMP_SCOREDIST.
NOTE: The data set WORK._TMPDAT has 20 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_SCOREDIST):   title1;
MPRINT(EM_REPORT_SCOREDIST):   title2;
MPRINT(EM_REPORT_SCOREDIST):   title3;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Transform, 1";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Score Distributions";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Transform, 1 Score Distributions";
MPRINT(EM_REPORT_SCOREDIST):  ;
MPRINT(EM_REPORT_SCOREDIST):   proc print data=_tmpdat noobs label contents='';
MPRINT(EM_REPORT_SCOREDIST):   by target datarole;
MPRINT(EM_REPORT_SCOREDIST):   var p_label numberofevents percentageofevents 
percentageofnonevents cumulativepercentageofevents cumulativepercentageofnonevents ;
MPRINT(EM_REPORT_SCOREDIST):   run;

NOTE: There were 20 observations read from the data set WORK._TMPDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
NOTE: Node report data set (EMWS1.CNTRL2_emreport) is not defined.
MPRINT(EM_REPORT_CREATE):  ;
NOTE: Node report data set (EMWS1.CNTRL3_emreport) is not defined.
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_NODE_TEXT):   data _null_ ;
MPRINT(EM_REPORT_NODE_TEXT):   set EMWS1.EM_NODEID ;
MPRINT(EM_REPORT_NODE_TEXT):   where upcase(strip(nodeid)) eq upcase(strip("MdlComp")) ;
MPRINT(EM_REPORT_NODE_TEXT):   call symput("EM_REPORT_NODE_TEXT",strip(tranwrd(label,'"','')));
MPRINT(EM_REPORT_NODE_TEXT):   run;

NOTE: There were 1 observations read from the data set EMWS1.EM_NODEID.
      WHERE UPCASE(STRIP(nodeid))='MDLCOMP';
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_GETTRAINPATH):   proc display c=sashelp.emcore.pathscorecode.scl;
MPRINT(EM_GETTRAINPATH):   run;

31910      data _tmp_emrnp;
MPRINT(EM_GETTRAINPATH):   data _tmp_emrnp;
31911      length Parent $32 nodelabel $32 description $200 tooltype $32 component $32
31911    ! FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8
31911    ! accumulatedScoreCode $1;
MPRINT(EM_GETTRAINPATH):   length Parent $32 nodelabel $32 description $200 tooltype $32 
component $32 FlowScoreCodeFormat PublishScoreCode $16 PublishScoreCodeFormat $8 
accumulatedScoreCode $1;
31912      nodelabel="Ids";
MPRINT(EM_GETTRAINPATH):   nodelabel="Ids";
31913      parent=" ";
MPRINT(EM_GETTRAINPATH):   parent=" ";
31914      description="Input Data Source";
MPRINT(EM_GETTRAINPATH):   description="Input Data Source";
31915      component="DataSource";
MPRINT(EM_GETTRAINPATH):   component="DataSource";
31916      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
31917      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31918      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
31919      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31920      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31921      output;
MPRINT(EM_GETTRAINPATH):   output;
31922      nodelabel="Stat";
MPRINT(EM_GETTRAINPATH):   nodelabel="Stat";
31923      parent="Ids";
MPRINT(EM_GETTRAINPATH):   parent="Ids";
31924      description="Statistics Exploration";
MPRINT(EM_GETTRAINPATH):   description="Statistics Exploration";
31925      component="StatExplore";
MPRINT(EM_GETTRAINPATH):   component="StatExplore";
31926      tooltype="EXPLORE";
MPRINT(EM_GETTRAINPATH):   tooltype="EXPLORE";
31927      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31928      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
31929      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31930      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31931      output;
MPRINT(EM_GETTRAINPATH):   output;
31932      nodelabel="Part";
MPRINT(EM_GETTRAINPATH):   nodelabel="Part";
31933      parent="Stat";
MPRINT(EM_GETTRAINPATH):   parent="Stat";
31934      description="Partition Class";
MPRINT(EM_GETTRAINPATH):   description="Partition Class";
31935      component="Partition";
MPRINT(EM_GETTRAINPATH):   component="Partition";
31936      tooltype="SAMPLE";
MPRINT(EM_GETTRAINPATH):   tooltype="SAMPLE";
31937      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31938      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
31939      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31940      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31941      output;
MPRINT(EM_GETTRAINPATH):   output;
31942      nodelabel="Impt";
MPRINT(EM_GETTRAINPATH):   nodelabel="Impt";
31943      parent="Part";
MPRINT(EM_GETTRAINPATH):   parent="Part";
31944      description="Imputation";
MPRINT(EM_GETTRAINPATH):   description="Imputation";
31945      component="Impute";
MPRINT(EM_GETTRAINPATH):   component="Impute";
31946      tooltype="MODIFY";
MPRINT(EM_GETTRAINPATH):   tooltype="MODIFY";
31947      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31948      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
31949      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31950      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31951      output;
MPRINT(EM_GETTRAINPATH):   output;
31952      nodelabel="Neural";
MPRINT(EM_GETTRAINPATH):   nodelabel="Neural";
31953      parent="Impt";
MPRINT(EM_GETTRAINPATH):   parent="Impt";
31954      description="Neural";
MPRINT(EM_GETTRAINPATH):   description="Neural";
31955      component="NeuralNetwork";
MPRINT(EM_GETTRAINPATH):   component="NeuralNetwork";
31956      tooltype="MODEL";
MPRINT(EM_GETTRAINPATH):   tooltype="MODEL";
31957      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31958      PublishScoreCode="EMPUBLISHSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMPUBLISHSCORECODE";
31959      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31960      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31961      output;
MPRINT(EM_GETTRAINPATH):   output;
31962      nodelabel="MdlComp";
MPRINT(EM_GETTRAINPATH):   nodelabel="MdlComp";
31963      parent="Neural";
MPRINT(EM_GETTRAINPATH):   parent="Neural";
31964      description="Model Compare Class";
MPRINT(EM_GETTRAINPATH):   description="Model Compare Class";
31965      component="ModelCompare";
MPRINT(EM_GETTRAINPATH):   component="ModelCompare";
31966      tooltype="ASSESS";
MPRINT(EM_GETTRAINPATH):   tooltype="ASSESS";
31967      FlowScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   FlowScoreCodeFormat="DATASTEP";
31968      PublishScoreCode="EMFLOWSCORECODE";
MPRINT(EM_GETTRAINPATH):   PublishScoreCode="EMFLOWSCORECODE";
31969      PublishScoreCodeFormat="DATASTEP";
MPRINT(EM_GETTRAINPATH):   PublishScoreCodeFormat="DATASTEP";
31970      accumulatedScoreCode= "N";
MPRINT(EM_GETTRAINPATH):   accumulatedScoreCode= "N";
31971      output;
MPRINT(EM_GETTRAINPATH):   output;
31972      run;
MPRINT(EM_GETTRAINPATH):   run;

NOTE: The data set WORK._TMP_EMRNP has 6 observations and 9 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_GETTRAINPATH):   
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set _tmp_emrnp end=eof ;
MPRINT(EM_REPORT_NODE):   length path $1000 ;
MPRINT(EM_REPORT_NODE):   retain path ' ';
MPRINT(EM_REPORT_NODE):   if _n_ eq 1 then path = strip(nodelabel) ;
MPRINT(EM_REPORT_NODE):   else path = strip(path) !! " => " !! strip(nodelabel);
MPRINT(EM_REPORT_NODE):   if eof then call symput('print_path', strip(path));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set WORK._TMP_EMRNP.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(*) into :EM_REPORT_PREDECESSORS_COUNT from 
EMWS1.EM_DGRAPH where upcase(strip(to)) eq upcase(strip("MdlComp"));
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   ods PDF startpage=now;
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="SAS Enterprise Miner Report";
MPRINT(EM_REPORT_NODE):   ods PDF text=" ";
MPRINT(EM_REPORT_NODE):   ods PDF text="Node=Model Comparison";
MPRINT(EM_REPORT_NODE):   ods PDF text="Summary";
MPRINT(EM_REPORT_NODE):   data _null_ ;
MPRINT(EM_REPORT_NODE):   file print;
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   put "Node id = MdlComp";
MPRINT(EM_REPORT_NODE):   put "Node label = Model Comparison";
MPRINT(EM_REPORT_NODE):   put "Meta path = Ids => Stat => Part => Impt => Neural => MdlComp";
MPRINT(EM_REPORT_NODE):   put "Notes =";
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 4 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x "J:\JMMORR01\CIS 445\CIS 445 Project 
3\Workspaces\EMWS1\MdlComp\EMNOTES.txt" encoding='utf-8' NOBOM;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   length string $1000;
MPRINT(EM_REPORT_NODE):   file PRINT;
MPRINT(EM_REPORT_NODE):   fid = fopen('x');
MPRINT(EM_REPORT_NODE):   do while (^fread(fid));
MPRINT(EM_REPORT_NODE):   rc= fget(fid, string, frlen(fid));
MPRINT(EM_REPORT_NODE):   string = tranwrd(string, "'", "''");
MPRINT(EM_REPORT_NODE):   if string eq '' then string = ' ';
MPRINT(EM_REPORT_NODE):   put string;
MPRINT(EM_REPORT_NODE):   end;
MPRINT(EM_REPORT_NODE):   fid = fclose(fid);
MPRINT(EM_REPORT_NODE):   put " ";
MPRINT(EM_REPORT_NODE):   run;

NOTE: 0 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   filename x;
NOTE: Fileref X has been deassigned.
MPRINT(EM_REPORT_PROPERTIES):   proc display cat=sashelp.emutil.prop2Ds.scl;
MPRINT(EM_REPORT_PROPERTIES):   run;

31973      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
31974      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
31975      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
31975    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))" DEFAULT =
31975    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_default_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value" DEFAULT = "Default";
31976      Name = 'NumberOfReportedLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumberOfReportedLevels';
31977      Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
31978      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31979      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31980      Name = 'NormalizeReportingVariables';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NormalizeReportingVariables';
31981      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
31982      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31983      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31984      Name = 'DecileBin';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'DecileBin';
31985      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
31986      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31987      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31988      Name = 'LiftEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'LiftEpsilon';
31989      Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
31990      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31991      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31992      Name = 'ProfitEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ProfitEpsilon';
31993      Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
31994      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31995      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
31996      Name = 'RoiEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RoiEpsilon';
31997      Value = "%nrbquote(1E-6)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "1E-6";
31998      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
31999      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32000      Name = 'ScoreDistBin';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ScoreDistBin';
32001      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
32002      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32003      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32004      Name = 'RocChart';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RocChart';
32005      Value = "%nrbquote(Y)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Y";
32006      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32007      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32008      Name = 'RocEpsilon';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RocEpsilon';
32009      Value = "%nrbquote(0.01)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "0.01";
32010      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32011      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32012      Name = 'AssessAllTargetLevels';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'AssessAllTargetLevels';
32013      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
32014      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32015      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32016      Name = 'SelectionData';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionData';
32017      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
32018      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32019      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32020      Name = 'HPCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'HPCriteria';
32021      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
32022      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32023      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32024      Name = 'SelectionTable';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionTable';
32025      Value = "%nrbquote(TRAIN)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "TRAIN";
32026      Default = "%nrbquote(TABLE)";
MPRINT(EM_REPORT_PROPERTIES):   Default = "TABLE";
32027      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32028      Name = 'SelectionCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionCriteria';
32029      Value = "%nrbquote(DEFAULT)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "DEFAULT";
32030      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32031      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32032      Name = 'SelectionDepth';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'SelectionDepth';
32033      Value = "%nrbquote(10)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "10";
32034      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32035      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32036      Name = 'NumberofBins';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'NumberofBins';
32037      Value = "%nrbquote(20)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "20";
32038      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32039      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32040      Name = 'RecomputeAssess';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'RecomputeAssess';
32041      Value = "%nrbquote(N)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "N";
32042      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32043      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32044      Name = 'TargetName';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetName';
32045      Value = "%nrbquote(BAD)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "BAD";
32046      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32047      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32048      Name = 'ModelId';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelId';
32049      Value = "%nrbquote(Neural)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Neural";
32050      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32051      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32052      Name = 'ModelDescription';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelDescription';
32053      Value = "%nrbquote(No Transform, 5)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "No Transform, 5";
32054      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32055      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32056      Name = 'ModelCriteria';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'ModelCriteria';
32057      Value = "%nrbquote(Valid: Misclassification Rate)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "Valid: Misclassification Rate";
32058      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32059      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32060      Name = 'StatisticUsed';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'StatisticUsed';
32061      Value = "%nrbquote(_VMISC_)";
MPRINT(EM_REPORT_PROPERTIES):   Value = "_VMISC_";
32062      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32063      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32064      Name = 'TargetLabel';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'TargetLabel';
32065      Value = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Value = "";
32066      Default = "%nrbquote()";
MPRINT(EM_REPORT_PROPERTIES):   Default = "";
32067      output;
MPRINT(EM_REPORT_PROPERTIES):   output;
32068      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.PROPERTIES has 23 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

32069      proc sort data=properties;
MPRINT(EM_REPORT_PROPERTIES):   proc sort data=properties;
32070      by Name;
MPRINT(EM_REPORT_PROPERTIES):   by Name;
32071      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 23 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 23 observations and 3 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32072      data temp;
MPRINT(EM_REPORT_PROPERTIES):   data temp;
32073      length Name $32 Value $200 Default $200;
MPRINT(EM_REPORT_PROPERTIES):   length Name $32 Value $200 Default $200;
32074      label NAME = "%sysfunc(sasmsg(sashelp.dmine, rpt_property_vlabel, NOQUOTE))" VALUE =
32074    ! "%sysfunc(sasmsg(sashelp.dmine, rpt_value_vlabel,    NOQUOTE))";
MPRINT(EM_REPORT_PROPERTIES):   label NAME = "Property" VALUE = "Value";
32075      Name = 'Component';
MPRINT(EM_REPORT_PROPERTIES):   Name = 'Component';
32076      Value = "ModelCompare";
MPRINT(EM_REPORT_PROPERTIES):   Value = "ModelCompare";
32077      Default="";
MPRINT(EM_REPORT_PROPERTIES):   Default="";
32078      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: The data set WORK.TEMP has 1 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

32079      data properties;
MPRINT(EM_REPORT_PROPERTIES):   data properties;
32080      set temp properties;
MPRINT(EM_REPORT_PROPERTIES):   set temp properties;
32081      run;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: There were 1 observations read from the data set WORK.TEMP.
NOTE: There were 23 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK.PROPERTIES has 24 observations and 3 variables.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

NOTE: PROCEDURE DISPLAY used (Total process time):
      real time           0.11 seconds
      cpu time            0.11 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   
WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Model Comparison";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Properties";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Model Comparison Properties";
MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc contents data=work.properties 
out=_tmpms_content(keep=name) noprint;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: The data set WORK._TMPMS_CONTENT has 3 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "NAME" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "VALUE" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _null_;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set _tmpms_content;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   name=strip(upcase(name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if name eq "DEFAULT" then call symput('vars2',catx(' 
',symget('vars2'),name));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 3 observations read from the data set WORK._TMPMS_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_dat1(rename=( NAME=NAME1 VALUE=VALUE1 
DEFAULT=DEFAULT1)) _tmpms_dat2(rename=( NAME=NAME2 VALUE=VALUE2 DEFAULT=DEFAULT2)) 
_tmpms_dat3(rename=( NAME=NAME3 VALUE=VALUE3 DEFAULT=DEFAULT3));
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   set work.properties;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   keep NAME VALUE DEFAULT numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 0 and _n_ le 8 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-8*(1-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 8 and _n_ le 16 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-8*(2-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   if _n_ gt 16 and _n_ le 24 then do;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   numrow = _n_-8*(3-1);
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   output _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   end;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 24 observations read from the data set WORK.PROPERTIES.
NOTE: The data set WORK._TMPMS_DAT1 has 8 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT2 has 8 observations and 4 variables.
NOTE: The data set WORK._TMPMS_DAT3 has 8 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat1;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 8 observations read from the data set WORK._TMPMS_DAT1.
NOTE: The data set WORK._TMPMS_DAT1 has 8 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat2;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 8 observations read from the data set WORK._TMPMS_DAT2.
NOTE: The data set WORK._TMPMS_DAT2 has 8 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc sort data=_tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 8 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_DAT3 has 8 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   data _tmpms_alldat;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   merge _tmpms_dat1 _tmpms_dat2 _tmpms_dat3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   by numrow;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 8 observations read from the data set WORK._TMPMS_DAT1.
NOTE: There were 8 observations read from the data set WORK._TMPMS_DAT2.
NOTE: There were 8 observations read from the data set WORK._TMPMS_DAT3.
NOTE: The data set WORK._TMPMS_ALLDAT has 8 observations and 10 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc print data=_tmpms_alldat noobs label contents='';
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   var NAME1 VALUE1 DEFAULT1 NAME2 VALUE2 DEFAULT2 NAME3 
VALUE3 DEFAULT3;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: There were 8 observations read from the data set WORK._TMPMS_ALLDAT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_MAKEMULTICOLUMN):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   delete _tmpms_:;
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   run;

NOTE: Deleting WORK._TMPMS_ALLDAT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_CONTENT (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT1 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT2 (memtype=DATA).
NOTE: Deleting WORK._TMPMS_DAT3 (memtype=DATA).
MPRINT(EM_REPORT_MAKEMULTICOLUMN):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_PROPERTIES):  ;
MPRINT(EM_REPORT_PROPERTIES):   proc delete data=work.properties;
MPRINT(EM_REPORT_PROPERTIES):   run;

NOTE: Deleting WORK.PROPERTIES (memtype=DATA).
NOTE: PROCEDURE DELETE used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_PROPERTIES):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :tmp_numvar from EMWS1.MdlComp_EMTRAINVARIABLE;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdv(drop=use newuse count) ;
MPRINT(EM_REPORT_VARS):   set EMWS1.MdlComp_EMTRAINVARIABLE end=eof;
MPRINT(EM_REPORT_VARS):   length use newuse $1;
MPRINT(EM_REPORT_VARS):   label name = "Name" level = "Level" role = "Role" length = "Length" ;
MPRINT(EM_REPORT_VARS):   if use eq "" then use="Y";
MPRINT(EM_REPORT_VARS):   newuse=use;
MPRINT(EM_REPORT_VARS):   if use eq "D" then do;
MPRINT(EM_REPORT_VARS):   if role="REJECT" then newuse="N";
MPRINT(EM_REPORT_VARS):   else if role="INPUT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="CROSSID" then newuse="Y";
MPRINT(EM_REPORT_VARS):   else if role="TEXT" then newuse="Y";
MPRINT(EM_REPORT_VARS):   end ;
MPRINT(EM_REPORT_VARS):   if newuse eq "Y" then do ;
MPRINT(EM_REPORT_VARS):   count+1 ;
MPRINT(EM_REPORT_VARS):   output;
MPRINT(EM_REPORT_VARS):   end;
MPRINT(EM_REPORT_VARS):   if eof then call symput("varcount",put(count,6.)) ;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Variable length is uninitialized.
NOTE: There were 1 observations read from the data set EMWS1.MDLCOMP_EMTRAINVARIABLE.
NOTE: The data set WORK._TMPVL_PDV has 1 observations and 5 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS):   by name;
MPRINT(EM_REPORT_VARS):   run ;

NOTE: There were 1 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdv;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: There were 1 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDV has 1 observations and 5 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pds(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdv end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 1 observations read from the data set WORK._TMPVL_PDV.
NOTE: The data set WORK._TMPVL_PDS has 1 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Model Comparison";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Variable Summary";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Model Comparison Variable Summary";
MPRINT(EM_REPORT_VARS):  ;
MPRINT(EM_REPORT_VARS):   proc print data=_tmpvl_pds noobs label contents='';
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 1 observations read from the data set WORK._TMPVL_PDS.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_VARS):   data _tmpvl_pdvx;
MPRINT(EM_REPORT_VARS):   set EMWS1.MdlComp_CMETA_TRAIN end=eof ;
MPRINT(EM_REPORT_VARS):   where upcase(creator) eq "MdlComp" ;
MPRINT(EM_REPORT_VARS):   if eof then call symput('pdvxnum',put(_N_,6.));
MPRINT(EM_REPORT_VARS):   label name = "Name" label = "Label" role = "Role" level = "Level" type 
= "Type" length = "Length";
MPRINT(EM_REPORT_VARS):   run;

NOTE: There were 0 observations read from the data set EMWS1.MDLCOMP_CMETA_TRAIN.
      WHERE UPCASE(creator)='MdlComp';
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: DATA statement used (Total process time):
      real time           0.06 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   proc sort data=_tmpvl_pdvx;
MPRINT(EM_REPORT_VARS_FLIP):   by descending role level name;
MPRINT(EM_REPORT_VARS_FLIP):   run;

NOTE: Input data set is empty.
NOTE: The data set WORK._TMPVL_PDVX has 0 observations and 21 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS_FLIP):   data _tmpvl_pdvxp(keep=role level count names ) ;
MPRINT(EM_REPORT_VARS_FLIP):   length role level $16 ;
MPRINT(EM_REPORT_VARS_FLIP):   set _tmpvl_pdvx end=eof ;
WARNING: Length of character variable role has already been set. 
         Use the LENGTH statement as the very first statement in the DATA STEP to declare the 
         length of a character variable.
MPRINT(EM_REPORT_VARS_FLIP):   length xrole role $32 count 8 names $200 ;
MPRINT(EM_REPORT_VARS_FLIP):   krole= strip(role) !!' * ' !! strip(level) ;
MPRINT(EM_REPORT_VARS_FLIP):   retain xrole ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   retain names ;
MPRINT(EM_REPORT_VARS_FLIP):   if _n_ eq 1 then names=name ;
MPRINT(EM_REPORT_VARS_FLIP):   retain count 0 ending 0 ;
MPRINT(EM_REPORT_VARS_FLIP):   count+1 ;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if xrole ne krole then do ;
MPRINT(EM_REPORT_VARS_FLIP):   count=count-1 ;
MPRINT(EM_REPORT_VARS_FLIP):   put _n_ "OUTPUT;" ;
MPRINT(EM_REPORT_VARS_FLIP):   output ;
MPRINT(EM_REPORT_VARS_FLIP):   xrole=krole ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   count=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=0 ;
MPRINT(EM_REPORT_VARS_FLIP):   end ;
MPRINT(EM_REPORT_VARS_FLIP):   else if _n_ gt 1 then do ;
MPRINT(EM_REPORT_VARS_FLIP):   if length(names) + length(name) lt 196 then names= strip(names) 
!! ' ' !! strip(name) ;
MPRINT(EM_REPORT_VARS_FLIP):   else if not ending then do ;
MPRINT(EM_REPORT_VARS_FLIP):   names= strip(names) !! ' ...' ;
MPRINT(EM_REPORT_VARS_FLIP):   ending=1 ;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   end;
MPRINT(EM_REPORT_VARS_FLIP):   role=scan(xrole,1,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   level=scan(xrole,2,'*') ;
MPRINT(EM_REPORT_VARS_FLIP):   if eof and count gt 0 then output ;
MPRINT(EM_REPORT_VARS_FLIP):   label count = "Frequency Count " names = "Name" level = "Level" 
role = "Role";
MPRINT(EM_REPORT_VARS_FLIP):   run ;

NOTE: There were 0 observations read from the data set WORK._TMPVL_PDVX.
NOTE: The data set WORK._TMPVL_PDVXP has 0 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_VARS):   ;
MPRINT(EM_REPORT_VARS):   proc sql noprint;
MPRINT(EM_REPORT_VARS):   select count(*) into :nobs from _tmpvl_pdvxp;
MPRINT(EM_REPORT_VARS):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_VARS):   proc datasets lib=work nolist;
MPRINT(EM_REPORT_VARS):   delete _tmpvl_:;
MPRINT(EM_REPORT_VARS):   run;

NOTE: Deleting WORK._TMPVL_PDS (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDV (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVX (memtype=DATA).
NOTE: Deleting WORK._TMPVL_PDVXP (memtype=DATA).
MPRINT(EM_REPORT_VARS):   quit;

NOTE: PROCEDURE DATASETS used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   ;
MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select max(ID) into: numitems from EMWS1.MdlComp_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select count(distinct key) into :allnumkeys from 
EMWS1.MdlComp_emreport;
MPRINT(EM_REPORT_NODE):   select distinct key into :allnamekey1-:
MPRINT(LEFT):  allnamekey18
MPRINT(EM_REPORT_NODE):   from EMWS1.MdlComp_emreport;
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.05 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 1));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=1;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==1 : Viewtype = PROPERTIES SETTINGS
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 2));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=2;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==2 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 3));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=3;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==3 : Viewtype = DATA VARIABLES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 4));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=4;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

==4 : Viewtype = TEXT TOOLLOG
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 5));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=5;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==5 : Viewtype = TEXT TOOLOUTPUT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 6));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=6;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==6 : Viewtype = TEXT TOOLTRAINCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 7));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=7;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==7 : Viewtype = TEXT NOTES
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 8));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=8;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==8 : Viewtype = TEXT FLOWCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 9));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=9;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==9 : Viewtype = TEXT SASCODE
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 10));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=10;
NOTE: DATA statement used (Total process time):
      real time           0.02 seconds
      cpu time            0.00 seconds
      

==10 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 11));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 0 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=11;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

==11 : Viewtype =
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 12));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=12;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==12 : Viewtype = DATA FITSTAT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_DATA):   data _null_ ;
MPRINT(EM_REPORT_DATA):   set EMWS1.MdlComp_EMOUTFIT (obs=2) end=eof ;
MPRINT(EM_REPORT_DATA):   if eof then do ;
MPRINT(EM_REPORT_DATA):   call symput("_misc_" , strip(put(_misc_,best.))) ;
MPRINT(EM_REPORT_DATA):   call symput("_vmisc_" , strip(put(_vmisc_,best.))) ;
MPRINT(EM_REPORT_DATA):   call symput("_aur_" , strip(put(_aur_, best.)));
MPRINT(EM_REPORT_DATA):   call symput("_gini_" , strip(put(_gini_, best.)));
MPRINT(EM_REPORT_DATA):   end;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 2 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

WARNING: Argument 3 to macro function %SUBSTR is out of range.
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text=" ";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Node=Model Comparison";
MPRINT(EM_REPORT_TABLETEXT):   ods PDF text="Fit Statistics Table";
MPRINT(EM_REPORT_TABLETEXT):   ods proclabel = "Node=Model Comparison Fit Statistics Table";
MPRINT(EM_REPORT_DATA):  ;
MPRINT(EM_REPORT_DATA):   proc print data=EMWS1.MdlComp_EMOUTFIT(obs=100) noobs label 
contents='';
MPRINT(EM_REPORT_DATA):   id USE PARENT MODEL MODELDESCRIPTION TARGET TARGETLABEL _CRITERION_ ;
MPRINT(EM_REPORT_DATA):   var _ASE_ _MISC_ KS _VASE_ _VMISC_ VKS ;
MPRINT(EM_REPORT_DATA):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMOUTFIT.
NOTE: PROCEDURE PRINT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 13));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 6 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=13;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==13 : Viewtype = DATA COMPAREFIT
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
6 The SAS System

      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 14));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=14;
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==14 : Viewtype = LATTICE CLASSIFICATION
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct MODELDESCRIPTION) into :numx from 
EMWS1.MdlComp_EMCLASSIFICATION(where=(TARGET='BAD' and _TYPE_='PREDICTION'));
MPRINT(EM_REPORT_LATTICE):   select count(distinct DATAROLE) into :numy from 
EMWS1.MdlComp_EMCLASSIFICATION(where=(TARGET='BAD' and _TYPE_='PREDICTION'));
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.08 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=Model Comparison";
MPRINT(EM_REPORT_LATTICE):   title3 "Classification Chart";
MPRINT(EM_REPORT_LATTICE):   title4 "TARGET='BAD' and _TYPE_='PREDICTION'";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel 
data=EMWS1.MdlComp_EMCLASSIFICATION(where=(TARGET='BAD' and _TYPE_='PREDICTION'));
MPRINT(EM_REPORT_LATTICE):   panelby DATAROLE MODELDESCRIPTION / columns=3 rows=4 
uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   vbar FROM / response=PERCENT group=CORRECTTEXT ;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin ;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid ;
MPRINT(EM_REPORT_LATTICE):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.76 seconds
      cpu time            0.28 seconds
      
NOTE: There were 48 observations read from the data set EMWS1.MDLCOMP_EMCLASSIFICATION.
      WHERE (TARGET='BAD') and (_TYPE_='PREDICTION');

MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 15));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=15;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.MdlComp_emreport(where=(id eq 15)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.03 seconds
      

==15 : Viewtype = LATTICE ASSESSRANKOVERLAY
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_EMRANK):   data _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   set EMWS1.MdlComp_EMRANK(where=(TARGET='BAD'));
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 240 observations read from the data set EMWS1.MDLCOMP_EMRANK.
      WHERE TARGET='BAD';
NOTE: The data set WORK._TMP_DAT has 240 observations and 38 variables.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_EMRANK):   proc contents data=_tmp_dat out=_tmp_content(keep=name) noprint;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: The data set WORK._TMP_CONTENT has 38 observations and 1 variables.
NOTE: PROCEDURE CONTENTS used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_EMRANK):   data _null_;
MPRINT(EM_REPORT_EMRANK):   set _tmp_content;
MPRINT(EM_REPORT_EMRANK):   name=strip(upcase(name));
MPRINT(EM_REPORT_EMRANK):   format _tmp_list $500.;
MPRINT(EM_REPORT_EMRANK):   _tmp_list = symget('varList');
MPRINT(EM_REPORT_EMRANK):   do k = 1 to 7;
MPRINT(EM_REPORT_EMRANK):   if name eq scan(_tmp_list,k,' ') then call 
symput(cats('var_',name),name);
MPRINT(EM_REPORT_EMRANK):   end;
MPRINT(EM_REPORT_EMRANK):   if name eq '_LOOP_' then call symput('has_loop','1');
MPRINT(EM_REPORT_EMRANK):   if name eq '_WHERE_' then call symput('has_where','1');
MPRINT(EM_REPORT_EMRANK):   if name eq 'GAIN' then call symput('is_cat','1');
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 38 observations read from the data set WORK._TMP_CONTENT.
NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_EMRANK):   proc sql noprint;
MPRINT(EM_REPORT_EMRANK):   select count(distinct datarole) into :ndataroles from _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   select distinct datarole into :drole1-:
MPRINT(LEFT):  drole2
MPRINT(EM_REPORT_EMRANK):   from _tmp_dat;
MPRINT(EM_REPORT_EMRANK):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat(where=(datarole eq "TRAIN")) out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by model decile;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 120 observations read from the data set WORK._TMP_DAT.
      WHERE datarole='TRAIN';
NOTE: The data set WORK._TMP_EMRP has 120 observations and 38 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=Model Comparison";
MPRINT(EM_REPORT_EMRANK):   title3 "Multiple Model Assessment Scores where DataRole=TRAIN";
MPRINT(EM_REPORT_EMRANK):   title4 "TARGET='BAD'";
MPRINT(EM_REPORT_EMRANK):   proc sgscatter data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   plot (GAIN LIFTC CAPC _MEANP_ ) * decile / group=model join=() 
markerattrs=(size=0) grid ;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGSCATTER used (Total process time):
      real time           0.37 seconds
      cpu time            0.14 seconds
      
NOTE: There were 120 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_EMRANK):   title4;
MPRINT(EM_REPORT_EMRANK):   proc sort data=_tmp_dat(where=(datarole eq "VALIDATE")) 
out=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   by model decile;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: There were 120 observations read from the data set WORK._TMP_DAT.
      WHERE datarole='VALIDATE';
NOTE: The data set WORK._TMP_EMRP has 120 observations and 38 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_EMRANK):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_EMRANK):   title2 "Node=Model Comparison";
MPRINT(EM_REPORT_EMRANK):   title3 "Multiple Model Assessment Scores where DataRole=VALIDATE";
MPRINT(EM_REPORT_EMRANK):   title4 "TARGET='BAD'";
MPRINT(EM_REPORT_EMRANK):   proc sgscatter data=_tmp_emrp;
MPRINT(EM_REPORT_EMRANK):   plot (GAIN LIFTC CAPC _MEANP_ ) * decile / group=model join=() 
markerattrs=(size=0) grid ;
MPRINT(EM_REPORT_EMRANK):   run;

NOTE: PROCEDURE SGSCATTER used (Total process time):
      real time           0.34 seconds
      cpu time            0.07 seconds
      
NOTE: There were 120 observations read from the data set WORK._TMP_EMRP.

MPRINT(EM_REPORT_EMRANK):   quit;
MPRINT(EM_REPORT_EMRANK):   title1;
MPRINT(EM_REPORT_EMRANK):   title2;
MPRINT(EM_REPORT_EMRANK):   title3;
MPRINT(EM_REPORT_EMRANK):   title4;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 16));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 15 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=16;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.MdlComp_emreport(where=(id eq 16)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==16 : Viewtype = LATTICE ASSESSRANKGRID
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 17));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 14 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=17;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.MdlComp_emreport(where=(id eq 17)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

==17 : Viewtype = LATTICE ASSESSSCOREDIST
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   set EMWS1.MdlComp_emreport(where=(id eq 18));
MPRINT(EM_REPORT_NODE):   call symput("EM_REPORT_KEY_"!!strip(upcase(key)), strip(value));
MPRINT(EM_REPORT_NODE):   run;

NOTE: There were 13 observations read from the data set EMWS1.MDLCOMP_EMREPORT.
      WHERE id=18;
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):   proc sql noprint;
MPRINT(EM_REPORT_NODE):   select distinct value into :EM_REPORT_KEY_Y separated by ' ' from 
EMWS1.MdlComp_emreport(where=(id eq 18)) where upcase(key) eq "Y";
MPRINT(EM_REPORT_NODE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

==18 : Viewtype = LATTICE ASSESSROC
MPRINT(EM_REPORT_NODE):   data _null_;
MPRINT(EM_REPORT_NODE):   format type $100. desc $200.;
MPRINT(EM_REPORT_NODE):   type = strip(upcase(symget('EM_REPORT_KEY_VIEWTYPE')));
MPRINT(EM_REPORT_NODE):   desc = strip(upcase(symget('EM_REPORT_KEY_DESCRIPTION')));
MPRINT(EM_REPORT_NODE):   if (type in ('SCATTER') and desc in ('STATPLOT' 'RULEPATHITEM' 
'RULEPATHSTAT' 'CONFPLOT' 'INPUTMEAN')) or (type in ('PLOT') and desc in ('SEASON' 'TREND' 
'CORRSTAT' 'DECOMP')) or (type in ('HISTOGRAM') and desc in ('WEIGHT' 'MAP' 'ESTIMATEGRID' 
'CROSSCCFMAP' 'CROSSCCFNORMMAP')) or (type in ('BAR') and desc in ('VIP' 'ABSESTIMATE' 
'ABSSTDESTIMATE' 'PRINCOEFFPLOT')) or (type in ('LATTICE') and desc in ('ESTIMATEGRID' 
'ASSESSRANKGRID' 'CORRPLOT')) then call symput('item_skip_code','2');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('CLUSCORR' 'VARCORR')) or (type 
in ('BAR') and desc in ('ESTIMATE' 'CORRSTRUCT' 'FITSTATPLOT')) or (type in ('LATTICE') and desc 
in ('CHIPLOT' 'WORTH')) then call symput('item_skip_code','3');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','4');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSRANKOVERLAY')) then call 
symput('item_skip_code','5');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('EVENTPLOT')) then call 
symput('item_skip_code','6');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSSTAT')) then call 
symput('EM_REPORT_KEY_VIEWTYPE','DATA');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('ASSESSSCOREDIST')) then call 
symput('item_skip_code','7');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('SCOREDIST')) then call 
symput('item_skip_code','8');
MPRINT(EM_REPORT_NODE):   if (type in ('LATTICE') and desc in ('CLASSIFICATIONMANY')) then call 
symput('item_skip_code','9');
MPRINT(EM_REPORT_NODE):   if (type in ('PLOT') and desc in ('HPDMASSESS')) then call 
symput('item_skip_code','10');
MPRINT(EM_REPORT_NODE):   if (type in ('HISTOGRAM') and desc in ('HPWEIGHTS' 'BELIEFS BY VALUE' 
'TSDISTANCEMAP')) then call symput('item_skip_code','11');
MPRINT(EM_REPORT_NODE):   run;

NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=9in;
MPRINT(EM_REPORT_LATTICE):   proc sql noprint;
MPRINT(EM_REPORT_LATTICE):   select count(distinct DATAROLE) into :numx from 
EMWS1.MdlComp_EMROC(where=(TARGET='BAD' and EVENT='1'));
MPRINT(EM_REPORT_LATTICE):   quit;
NOTE: PROCEDURE SQL used (Total process time):
      real time           0.05 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_LATTICE):   proc sort data=EMWS1.MdlComp_EMROC(where=(TARGET='BAD' and 
EVENT='1')) out=_tmp_pdl;
MPRINT(EM_REPORT_LATTICE):   by DATAROLE ;
MPRINT(EM_REPORT_LATTICE):   run;

NOTE: There were 1106 observations read from the data set EMWS1.MDLCOMP_EMROC.
      WHERE (TARGET='BAD') and (EVENT='1');
NOTE: The data set WORK._TMP_PDL has 1106 observations and 18 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.03 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_LATTICE):   title1 "SAS Enterprise Miner Report";
MPRINT(EM_REPORT_LATTICE):   title2 "Node=Model Comparison";
MPRINT(EM_REPORT_LATTICE):   title3 "ROC Chart";
MPRINT(EM_REPORT_LATTICE):   title4 "TARGET='BAD' and EVENT='1'";
MPRINT(EM_REPORT_LATTICE):   proc sgpanel data=_tmp_pdl;
MPRINT(EM_REPORT_LATTICE):   panelby DATAROLE / uniscale=column ;
MPRINT(EM_REPORT_LATTICE):   series x=ONEMINUSSPECIFICITY y=SENSITIVITY / group=MODELDESCRIPTION 
;
MPRINT(EM_REPORT_LATTICE):   colaxis grid fitpolicy=rotatethin;
MPRINT(EM_REPORT_LATTICE):   rowaxis grid;
MPRINT(EM_REPORT_LATTICE):   run;

NOTE: PROCEDURE SGPANEL used (Total process time):
      real time           0.55 seconds
      cpu time            0.21 seconds
      
NOTE: There were 1106 observations read from the data set WORK._TMP_PDL.

MPRINT(EM_REPORT_LATTICE):   quit;
MPRINT(EM_REPORT_NODE):  ;
MPRINT(EM_REPORT_NODE):   ods graphics / height=4.5in;
MPRINT(EM_REPORT_NODE):   title1;
MPRINT(EM_REPORT_NODE):   title2;
MPRINT(EM_REPORT_NODE):   title3;
MPRINT(EM_REPORT_NODE):   title4;
MPRINT(EM_REPORT_NODE):   title5;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):  ;
MPRINT(EM_REPORT_CREATE):   data _NULL_ ;
MPRINT(EM_REPORT_CREATE):   file print;
MPRINT(EM_REPORT_CREATE):   put "End of Report" ;
MPRINT(EM_REPORT_CREATE):   run;

NOTE: 1 lines were written to file PRINT.
NOTE: DATA statement used (Total process time):
      real time           0.01 seconds
      cpu time            0.01 seconds
      

MPRINT(EM_REPORT_CREATE):   title1;
MPRINT(EM_REPORT_CREATE):   title2;
MPRINT(EM_REPORT_CREATE):   title3 ;
MPRINT(EM_REPORT_CREATE):   ods graphics / reset=height;
MPRINT(EM_REPORT_CREATE):   ods listing;
MPRINT(EM_REPORT_CREATE):   ods PDF close;
NOTE: ODS PDF printed 54 pages to J:\JMMORR01\CIS 445\CIS 445 Project 
      3\Workspaces\EMWS1\Report\REPORT.pdf.
MPRINT(TRAIN):  ;
MPRINT(EM_REPORT_RESULTS):   data _null_ ;
MPRINT(EM_REPORT_RESULTS):   call symput('report_date', strip(put(date(), NLDATE.)));
MPRINT(EM_REPORT_RESULTS):   call symput('report_time', strip(put(datetime(), NLTIME.)));
MPRINT(EM_REPORT_RESULTS):   run;

NOTE: DATA statement used (Total process time):
      real time           0.00 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_REPORT_RESULTS):   data _null_;
MPRINT(EM_REPORT_RESULTS):   file print ;
MPRINT(EM_REPORT_RESULTS):   put "User       = jmmorr01" ;
MPRINT(EM_REPORT_RESULTS):   put "Date       = 21:49:21  November 07" ;
MPRINT(EM_REPORT_RESULTS):   put "Project    = CIS 445 Project 3 " ;
MPRINT(EM_REPORT_RESULTS):   put "Diagram    = Project 3" / ;
MPRINT(EM_REPORT_RESULTS):   put "Start Node = Report";
MPRINT(EM_REPORT_RESULTS):   put "Node label = Model Comparison" ;
MPRINT(EM_REPORT_RESULTS):   put "Nodes      = PATH" ;
MPRINT(EM_REPORT_RESULTS):   put "Showall    = N" / ;
MPRINT(EM_REPORT_RESULTS):   put "Format     = PDF" ;
MPRINT(EM_REPORT_RESULTS):   put "Graphics   = GIF" ;
MPRINT(EM_REPORT_RESULTS):   put "Style      = LISTING" / ;
MPRINT(EM_REPORT_RESULTS):   run ;

NOTE: 11 lines were written to file PRINT.
NOTE: The DATA step printed page 2.
NOTE: DATA statement used (Total process time):
      real time           0.04 seconds
      cpu time            0.03 seconds
      

MPRINT(EM_REPORT_RESULTS):  ;
MPRINT(EM_REPORT):   data WORK.EM_USER_REPORT;
MPRINT(EM_REPORT):   retain id 0;
MPRINT(EM_REPORT):   id + 1;
MPRINT(EM_REPORT):   length VIEW 8 NAME $32 VALUE $400;
MPRINT(EM_REPORT):   NAME = "KEY";
MPRINT(EM_REPORT):   VALUE = "REPORT";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWTYPE";
MPRINT(EM_REPORT):   VALUE = "FILEVIEWER";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AUTODISPLAY";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SPK";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COMPARE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOCALIZE";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZEROWY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLX";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EQUALIZECOLY";
MPRINT(EM_REPORT):   VALUE = "N";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NROWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NCOLS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISCRETEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LATTICETYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABSOLUTEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SORTORDERY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ORIENTATION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DIRECTION";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BYSET";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RENDERMODE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCRIPTION";
MPRINT(EM_REPORT):   VALUE = "CUSTOM";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "X";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "EXCLUDEVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Z";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQVARS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "AXIS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQ";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SUBGROUP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BLOCK";
MPRINT(EM_REPORT):   VALUE = "MODEL";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "COLORINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIPTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TOOLTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "REPORTID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "IDVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "VIEWS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "PARENT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "ABOVETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "BELOWTEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESIZE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "STATS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CLASSDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "INTDIST";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FOLDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YPLOTTYPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YREF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2REF2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "GROUPINDEX";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "JOIN";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "FREQEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YEXCLUDE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NAME";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "HEIGHT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "WIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2AXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YAXISLABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYXLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DISPLAYYLABEL";
MPRINT(EM_REPORT):   VALUE = "Y";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "CHOICETEXT";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SEGMENTVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LOWERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "UPPERBAND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YLINE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEKEY";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODEVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODECOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODESHAPEVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODELABEL";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NODETIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKID";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKVALUE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKCOLOR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKWIDTH";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LINKTIP";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "XTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YFROM";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "YTO";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MATRIXVAR";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "RESPONSE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SERIES";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "DESCARG";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SLIDER";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "MarkerSize";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Marker";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y1";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y2";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y3";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y4";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y5";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y6";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y7";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y8";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y9";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y10";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y11";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y12";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y13";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y14";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y15";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "Y16";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "TITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGEND";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "LEGENDTITLE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "SHAPE";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "METHOD";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   NAME = "NOBINMISS";
MPRINT(EM_REPORT):   VALUE = "";
MPRINT(EM_REPORT):   VIEW = 0.21387220603128;
MPRINT(EM_REPORT):   output;
MPRINT(EM_REPORT):   run;

NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: DATA statement used (Total process time):
      real time           0.03 seconds
      cpu time            0.04 seconds
      

MPRINT(EM_REPORT_RESULTS):  ;
MPRINT(TRAIN):  ;
MPRINT(MAIN):  ;
MPRINT(EM_DIAGRAM):  ;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   * End TRAIN: Report;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32082      *------------------------------------------------------------*;
32083      * End TRAIN: Report;
32084      *------------------------------------------------------------*;
32085      

32086      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):    *------------------------------------------------------------*;
32087      * Close any missing semi colons;
MPRINT(EM_DIAGRAM):   * Close any missing semi colons;
32088      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32089      ;
MPRINT(EM_DIAGRAM):   ;
32090      ;
MPRINT(EM_DIAGRAM):   ;
32091      ;
MPRINT(EM_DIAGRAM):   ;
32092      ;
MPRINT(EM_DIAGRAM):   ;
32093      quit;
MPRINT(EM_DIAGRAM):   quit;
32094      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32095      * Close any unbalanced quotes;
MPRINT(EM_DIAGRAM):   * Close any unbalanced quotes;
32096      *------------------------------------------------------------*;
MPRINT(EM_DIAGRAM):   *------------------------------------------------------------*;
32097      /*; *"; *'; */
32098      ;
MPRINT(EM_DIAGRAM):   ;
32099      run;
MPRINT(EM_DIAGRAM):   run;
32100      quit;
MPRINT(EM_DIAGRAM):   quit;
32101      /* Reset EM Options */
32102      options formchar="|----|+|---+=|-/\<>*";
MPRINT(EM_DIAGRAM):   options formchar="|----|+|---+=|-/\<>*";
32103      options nocenter ls=256 ps=10000;
MPRINT(EM_DIAGRAM):   options nocenter ls=256 ps=10000;
32104      goptions reset=all device=GIF NODISPLAY;
MPRINT(EM_DIAGRAM):   goptions reset=all device=GIF NODISPLAY;
32105      proc sort data=WORK.EM_USER_REPORT;
MPRINT(EM_DIAGRAM):    proc sort data=WORK.EM_USER_REPORT;
32106      by ID VIEW;
MPRINT(EM_DIAGRAM):   by ID VIEW;
32107      run;
MPRINT(EM_DIAGRAM):   run;

NOTE: There were 132 observations read from the data set WORK.EM_USER_REPORT.
NOTE: The data set WORK.EM_USER_REPORT has 132 observations and 4 variables.
NOTE: PROCEDURE SORT used (Total process time):
      real time           0.01 seconds
      cpu time            0.00 seconds
      

MPRINT(EM_DIAGRAM):    proc printto;
MPRINT(EM_DIAGRAM):   run;
